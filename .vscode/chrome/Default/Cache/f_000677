{"version":3,"sources":["webpack:///./src/lifesuite-app/business/home/home-routing.module.ts","webpack:///./src/lifesuite-app/business/home/home.module.ts","webpack:///./src/lifesuite-app/business/home/policy-list/applicant-status/applicant-status-list.builder.ts","webpack:///./src/lifesuite-app/business/home/policy-list/applicant-status/applicant-status-list.model.ts","webpack:///./src/lifesuite-app/business/home/policy-list/applicant-status/applicant-status.util.ts","webpack:///./src/lifesuite-app/business/home/policy-list/applicant-status/policy-aging-range.util.ts","webpack:///./src/lifesuite-app/business/home/policy-list/applicant-status/status-count.ts","webpack:///./src/lifesuite-app/business/home/policy-list/datasource/policy-list-grid-datasource.ts","webpack:///./src/lifesuite-app/business/home/policy-list/filter/index.ts","webpack:///./src/lifesuite-app/business/home/policy-list/filter/policy-list-filter-builder.ts","webpack:///./src/lifesuite-app/business/home/policy-list/filter/policy-list-filter-data.resolver.ts","webpack:///./src/lifesuite-app/business/home/policy-list/filter/policy-list-filter-metadata.resolver.ts","webpack:///./src/lifesuite-app/business/home/policy-list/filter/policy-list-filter-model.ts","webpack:///./src/lifesuite-app/business/home/policy-list/filter/policy-list-filter.component.css","webpack:///./src/lifesuite-app/business/home/policy-list/filter/policy-list-filter.component.html","webpack:///./src/lifesuite-app/business/home/policy-list/filter/policy-list-filter.component.ts","webpack:///./src/lifesuite-app/business/home/policy-list/index.ts","webpack:///./src/lifesuite-app/business/home/policy-list/list/index.ts","webpack:///./src/lifesuite-app/business/home/policy-list/list/policy-list-grid-columns.builder.ts","webpack:///./src/lifesuite-app/business/home/policy-list/list/policy-list.component.html","webpack:///./src/lifesuite-app/business/home/policy-list/list/policy-list.component.scss","webpack:///./src/lifesuite-app/business/home/policy-list/list/policy-list.component.ts","webpack:///./src/lifesuite-app/business/home/policy-list/policy-list-channels.ts","webpack:///./src/lifesuite-app/business/home/policy-list/policy-list-tab.component.html","webpack:///./src/lifesuite-app/business/home/policy-list/policy-list-tab.component.ts","webpack:///./src/lifesuite-app/business/home/policy-list/policy-status-type.ts","webpack:///./src/lifesuite-app/business/home/summary/alerts/policy-alerts.component.html","webpack:///./src/lifesuite-app/business/home/summary/alerts/policy-alerts.component.ts","webpack:///./src/lifesuite-app/business/home/summary/alerts/policy-alerts.module.ts","webpack:///./src/lifesuite-app/business/home/summary/filter/summary-filter.component.html","webpack:///./src/lifesuite-app/business/home/summary/filter/summary-filter.component.ts","webpack:///./src/lifesuite-app/business/home/summary/filter/summary-filter.model.ts","webpack:///./src/lifesuite-app/business/home/summary/index.ts","webpack:///./src/lifesuite-app/business/home/summary/recently-accessed-cases/datasource/recently-accessed-cases-grid-datasource.ts","webpack:///./src/lifesuite-app/business/home/summary/recently-accessed-cases/recently-accessed-cases-filter.builder.ts","webpack:///./src/lifesuite-app/business/home/summary/recently-accessed-cases/recently-accessed-cases-grid-columns.builder.ts","webpack:///./src/lifesuite-app/business/home/summary/recently-accessed-cases/recently-accessed-cases.component.css","webpack:///./src/lifesuite-app/business/home/summary/recently-accessed-cases/recently-accessed-cases.component.html","webpack:///./src/lifesuite-app/business/home/summary/recently-accessed-cases/recently-accessed-cases.component.ts","webpack:///./src/lifesuite-app/business/home/summary/recently-accessed-cases/recently-accessed-cases.module.ts","webpack:///./src/lifesuite-app/business/home/summary/summary-channels.ts","webpack:///./src/lifesuite-app/business/home/summary/summary.component.html","webpack:///./src/lifesuite-app/business/home/summary/summary.component.ts","webpack:///./src/lifesuite-app/business/home/summary/summary.module.ts","webpack:///./src/lifesuite-app/business/home/tab/tab-home.component.html","webpack:///./src/lifesuite-app/business/home/tab/tab-home.component.ts","webpack:///./src/lifesuite-app/business/home/tab/tabview-home.component.html","webpack:///./src/lifesuite-app/business/home/tab/tabview-home.component.ts","webpack:///./src/lifesuite-app/business/home/tasks/datasource/index.ts","webpack:///./src/lifesuite-app/business/home/tasks/datasource/task-list-grid-datasource.ts","webpack:///./src/lifesuite-app/business/home/tasks/filter/index.ts","webpack:///./src/lifesuite-app/business/home/tasks/filter/task-filter-type.ts","webpack:///./src/lifesuite-app/business/home/tasks/filter/task-filter.component.css","webpack:///./src/lifesuite-app/business/home/tasks/filter/task-filter.component.html","webpack:///./src/lifesuite-app/business/home/tasks/filter/task-filter.component.ts","webpack:///./src/lifesuite-app/business/home/tasks/filter/task-filter.service.ts","webpack:///./src/lifesuite-app/business/home/tasks/filter/tasks-filter.model.ts","webpack:///./src/lifesuite-app/business/home/tasks/index.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-counts/task-counts-list.model.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list-channels.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/base-tasks-list.component.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/delegates/index.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/delegates/open-diary-activity-task.delegate.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/delegates/open-inbox-outbox-task.delegate.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/delegates/open-mib-two-year.delegate.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/delegates/open-requirements.delegate.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/delegates/open-rev-msg-task.delegate.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/delegates/open-task-delegate-base.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/diary-activity/diary-activity-task-list.component.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/image-received/image-received-task-list.component.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/inbox-outbox/inbox-outbox-task-list.component.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/index.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/mib-two-year.service.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/mib/mib-task-list.component.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/requirement/requirement-task-list.component.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/review-message/review-message-task-list.component.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/task-list-columns.builder.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/task-list-icon.helper.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/task-list-image.service.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/task-list-metadata.resolver.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-list/task-list.component.html","webpack:///./src/lifesuite-app/business/home/tasks/task-list/task-list.component.scss","webpack:///./src/lifesuite-app/business/home/tasks/task-type.ts","webpack:///./src/lifesuite-app/business/home/tasks/task-util.ts","webpack:///./src/lifesuite-app/business/home/tasks/tasks-tab.component.html","webpack:///./src/lifesuite-app/business/home/tasks/tasks-tab.component.ts","webpack:///./src/lifesuite-app/business/home/tasks/tasks.module.ts","webpack:///./src/lifesuite-app/business/shared/auto-navigation/auto-navigation-channels.ts","webpack:///./src/lifesuite-app/ls-core/auto-navigation/navigation-sequence-factory.ts","webpack:///./src/lifesuite-app/ls-core/auto-navigation/navigation-sequence-type.ts","webpack:///./src/lifesuite-app/ls-core/model/auto-navigation/index.ts","webpack:///./src/lifesuite-app/ls-core/model/auto-navigation/navigation-sequence.ts","webpack:///./src/lifesuite-app/ls-core/model/auto-navigation/navigation-target.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACqB;AAEd;AACP;AAEzC,WAAW;AAC6D;AAKrC;AACqB;AACI;AACyC;AAErG,IAAM,qBAAqB,GAAU;IACjC,IAAI,EAAE,sDAAW,CAAC,SAAS;IAC3B,SAAS,EAAE,gFAAsB;IACjC,OAAO,EAAE;QACL,QAAQ,EAAE,8EAAoB;QAC9B,QAAQ,EAAE,0FAAgC;KAC7C;CACJ,CAAC;AAEF,IAAM,iBAAiB,GAAU;IAC7B,IAAI,EAAE,sDAAW,CAAC,KAAK;IACvB,SAAS,EAAE,qEAAiB;IAC5B,OAAO,EAAE;QACL,QAAQ,EAAE,8EAAoB;QAC9B,QAAQ,EAAE,kHAAwB;KACrC;CACJ,CAAC;AAEF,IAAM,mBAAmB,GAAU;IAC/B,IAAI,EAAE,sDAAW,CAAC,OAAO;IACzB,SAAS,EAAE,yEAAmB;IAC9B,OAAO,EAAE,6DAAa,CAAC,mBAAmB,CAAC,8EAAoB,CAAC;CACnE,CAAC;AAEF,IAAM,aAAa,GAAW;IAC1B;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qFAAgB;QAC3B,QAAQ,EAAE,CAAC,qBAAqB,EAAE,iBAAiB,EAAE,mBAAmB,CAAC;KAC5E;CACJ,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAJ7B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC/C,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDW;AACM;AACF;AAE+B;AAChB;AACQ;AACQ;AAM9C;AAC4B;AACpB;AACI;AAC6D;AAavG;IAAA;IAAyB,CAAC;IAAb,UAAU;QAXtB,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,yFAAkB,EAAE,sEAAiB,EAAE,kDAAW,EAAE,uDAAa,CAAC;YACvG,YAAY,EAAE;gBACV,wEAAgB;gBAChB,gFAAoB;gBACpB,mEAAsB;gBACtB,gEAAmB;gBACnB,6EAAyB;aAC5B;YACD,SAAS,EAAE,CAAC,2EAAuB,EAAE,oFAAgC,EAAE,wEAAoB,EAAE,qHAAmB,CAAC;SACpH,CAAC;OACW,UAAU,CAAG;IAAD,iBAAC;CAAA;AAAH;;;;;;;;;;;;;AC7BvB;AAAA;AAAA;AAAA;AAAiE;AACb;AAGpD;IAAA;IAmBA,CAAC;IAlBiB,mDAAwB,GAAtC,UACI,WAAiC,EACjC,wBAAoE;QAEpE,IAAM,UAAU,GAAoB,EAAE,CAAC;QAEvC,WAAW,CAAC,OAAO,CAAC,oBAAU;YAC1B,IAAM,KAAK,GAAG,6EAAoB,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;YAC1E,IAAM,QAAQ,GAAG,IAAI,iEAAQ,CAAC;gBAC1B,EAAE,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE;gBACnC,KAAK,EAAE,KAAK;gBACZ,OAAO,EAAE,wBAAwB;aACpC,CAAC,CAAC;YACH,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC;IACtB,CAAC;IACL,iCAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;IAAA;IAKA,CAAC;IAAD,+BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP2C;AAEC;AACmC;AAC1C;AACU;AAGhD;IAGI,6BAAY,IAAU;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,gDAAkB,GAAzB,UAA0B,eAAsC;QAAhE,iBAeC;QAdG,IAAM,QAAQ,GAAuB,EAAE,CAAC;QACxC,IAAI,eAAe,IAAI,eAAe,CAAC,gBAAgB,EAAE;YACrD,eAAe,CAAC,gBAAgB,CAAC,OAAO,CAAC,gBAAM;gBAC3C,IAAM,cAAc,GAAG,MAA8B,CAAC;gBACtD,IAAM,eAAe,GAAG,IAAI,yDAAW,CACnC,cAAc,CAAC,eAAe,EAC9B,cAAc,CAAC,WAAW,EAC1B,KAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,eAAe,CAAC,CAC7D,CAAC;gBACF,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;SACN;QAED,OAAO,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEM,yDAA2B,GAAlC,UAAmC,UAAkB;;QACjD,IAAM,+BAA+B;YACjC,GAAC,oEAAgB,CAAC,WAAW,IAAG,IAAI,CAAC,IAAI,CAAC;gBACtC,KAAK,EAAE,IAAI;gBACX,EAAE,EAAE,4CAA4C;aACnD,CAAC;YACF,GAAC,oEAAgB,CAAC,OAAO,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,wCAAwC,EAAE,CAAC;YACpG,GAAC,oEAAgB,CAAC,WAAW,IAAG,IAAI,CAAC,IAAI,CAAC;gBACtC,KAAK,EAAE,IAAI;gBACX,EAAE,EAAE,4CAA4C;aACnD,CAAC;YACF,GAAC,oEAAgB,CAAC,QAAQ,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,4CAA4C,EAAE,CAAC;YACzG,GAAC,oEAAgB,CAAC,IAAI,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,qCAAqC,EAAE,CAAC;YAC9F,GAAC,oEAAgB,CAAC,UAAU,IAAG,IAAI,CAAC,IAAI,CAAC;gBACrC,KAAK,EAAE,IAAI;gBACX,EAAE,EAAE,kDAAkD;aACzD,CAAC;eACL,CAAC;QAEF,OAAO,+BAA+B,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAEO,mDAAqB,GAA7B,UAA8B,UAAkB;;QAC5C,IAAM,2BAA2B;YAC7B,GAAC,oEAAgB,CAAC,KAAK,uCAAwC;YAC/D,GAAC,oEAAgB,CAAC,WAAW,mDAA8C;YAC3E,GAAC,oEAAgB,CAAC,OAAO,2CAA0C;YACnE,GAAC,oEAAgB,CAAC,WAAW,mDAA8C;YAC3E,GAAC,oEAAgB,CAAC,QAAQ,gDAA2C;YACrE,GAAC,oEAAgB,CAAC,IAAI,qCAAuC;YAC7D,GAAC,oEAAgB,CAAC,UAAU,iDAA6C;eAC5E,CAAC;QAEF,OAAO,2BAA2B,CAAC,UAAU,CAAC,CAAC;IACnD,CAAC;IAEM,qDAAuB,GAA9B,UAA+B,UAAkB;;QAC7C,IAAM,oBAAoB;YACtB,GAAC,oEAAgB,CAAC,WAAW,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,sCAAsC,EAAE,CAAC;YAC3G,GAAC,oEAAgB,CAAC,OAAO,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,kCAAkC,EAAE,CAAC;YACnG,GAAC,oEAAgB,CAAC,WAAW,IAAG,IAAI,CAAC,IAAI,CAAC;gBACtC,KAAK,EAAE,WAAW;gBAClB,EAAE,EAAE,sCAAsC;aAC7C,CAAC;YACF,GAAC,oEAAgB,CAAC,QAAQ,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,sCAAsC,EAAE,CAAC;YAC1G,GAAC,oEAAgB,CAAC,IAAI,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,+BAA+B,EAAE,CAAC;YAC1F,GAAC,oEAAgB,CAAC,UAAU,IAAG,IAAI,CAAC,IAAI,CAAC;gBACrC,KAAK,EAAE,cAAc;gBACrB,EAAE,EAAE,qCAAqC;aAC5C,CAAC;YACF,GAAC,oEAAgB,CAAC,KAAK,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,gCAAgC,EAAE,CAAC;eAChG,CAAC;QAEF,OAAO,oBAAoB,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAEO,sDAAwB,GAAhC,UAAiC,QAAa;QAC1C,IAAM,MAAM,GAAG;YACX,oEAAgB,CAAC,WAAW;YAC5B,oEAAgB,CAAC,OAAO;YACxB,oEAAgB,CAAC,WAAW;YAC5B,oEAAgB,CAAC,QAAQ;YACzB,oEAAgB,CAAC,IAAI;YACrB,oEAAgB,CAAC,UAAU;YAC3B,oEAAgB,CAAC,KAAK;SACzB,CAAC;QACF,IAAM,mBAAmB,GAAG,6DAAS,CAAC,sBAAsB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QACnF,OAAO,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC9C,CAAC;IA5FQ,mBAAmB;QAD/B,gEAAU,EAAE;yCAIS,mDAAI;OAHb,mBAAmB,CA6F/B;IAAD,0BAAC;CAAA;AA7F+B;;;;;;;;;;;;;ACR/B;AAAA;AAAA;AAA6D;AAG9D;IAAA;IA6BA,CAAC;IA5BiB,uCAAkB,GAAhC,UAAiC,UAAyB;QACtD,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,QAAQ,UAAU,CAAC,SAAS,EAAE;YAC1B,KAAK,wEAAoB,CAAC,KAAK;gBAC3B,KAAK,GAAG,OAAO,CAAC;gBAChB,MAAM;YACV,KAAK,wEAAoB,CAAC,KAAK;gBAC3B,KAAK,GAAG,aAAW,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,UAAO,CAAC;gBAC5D,MAAM;YACV,KAAK,wEAAoB,CAAC,OAAO;gBAC7B,KAAK,GAAG,WAAQ,UAAU,CAAC,OAAO,GAAG,CAAC,WAAO,CAAC;gBAC9C,MAAM;YACV;gBACI,KAAK,GAAM,UAAU,CAAC,OAAO,WAAM,UAAU,CAAC,KAAK,UAAO,CAAC;gBAC3D,MAAM;SACb;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAEa,+CAA0B,GAAxC,UAAyC,UAAyB;QAC9D,OAAU,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,UAAK,UAAU,CAAC,gBAAkB,CAAC;IACpF,CAAC;IAED,sCAAsC;IACxB,wCAAmB,GAAjC,UAAkC,IAAqB,EAAE,SAAiB;QACtE,OAAO,IAAI,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,SAAS,IAAI,SAAS,EAA3B,CAA2B,CAAC,CAAC;IAC1D,CAAC;IACL,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAA6D;AAG9D;IAMI,qBAAY,UAAkB,EAAE,WAAiC,EAAE,OAAe;QAC9E,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,wEAAoB,CAAC,KAAK,CAAC;IACpD,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfoD;AAKkD;AACX;AAEb;AAI/E;IAA8C,4CAAwB;IAIlE,kCAAY,QAAkB,EAAE,uBAAgD;QAAhF,YACI,kBAAM,QAAQ,CAAC,SAElB;QADG,KAAI,CAAC,wBAAwB,GAAG,uBAAuB,CAAC;;IAC5D,CAAC;IAES,uDAAoB,GAA9B,UAA+B,MAAsB;QACjD,OAAO,IAAI,iEAAiB,CAAC;YACzB,gBAAgB,EAAE,8DAAc,CAAC,sBAAsB;YACvD,aAAa,EAAE,gEAAgB,CAAC,oBAAoB;YACpD,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;SAC9C,CAAC,CAAC;IACP,CAAC;IAES,qDAAkB,GAA5B;QACI,OAAO,IAAI,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC5F,CAAC;IAES,2DAAwB,GAAlC,UAAmC,MAAsB;QACrD,OAAO,IAAI,iEAAiB,CAAC;YACzB,gBAAgB,EAAE,8DAAc,CAAC,sBAAsB;YACvD,aAAa,EAAE,gEAAgB,CAAC,qBAAqB;YACrD,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;SAClD,CAAC,CAAC;IACP,CAAC;IAEM,+CAAY,GAAnB,UAAoB,qBAA4C;QAC5D,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC;QACpD,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAhCQ,wBAAwB;QADpC,gEAAU,EAAE;yCAKa,sDAAQ,EAA2B,0FAAuB;OAJvE,wBAAwB,CAiCpC;IAAD,+BAAC;CAAA,CAjC6C,yGAAwB,GAiCrE;AAjCoC;;;;;;;;;;;;;ACZpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACG;AACV;AACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHH;AACF;AAUjB;AAEgC;AACuB;AAEJ;AAG5E;IAII,iCAAY,mBAAwC;QAChD,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;IACpD,CAAC;IAEM,uDAAqB,GAA5B,UAA6B,qBAA4C;QACrE,IAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC;QACpD,IACI,IAAI,CAAC,sBAAsB;YAC3B,CAAC,IAAI,CAAC,sBAAsB,CAAC,YAAY;gBACrC,IAAI,CAAC,sBAAsB,CAAC,YAAY;gBACxC,IAAI,CAAC,sBAAsB,CAAC,YAAY;gBACxC,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,EACtD;YACE,IAAM,gBAAgB,GAAG,IAAI,+DAAe,CAAC,EAAE,CAAC,CAAC;YACjD,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAAE,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;YACvF,IAAI,IAAI,CAAC,cAAc,EAAE;gBAAE,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YAC/E,IAAI,IAAI,CAAC,cAAc,EAAE;gBAAE,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YAC/E,IAAI,IAAI,CAAC,yBAAyB,EAAE;gBAAE,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,CAAC,CAAC;YACrG,OAAO,gBAAgB,CAAC;SAC3B;IACL,CAAC;IAEO,gDAAc,GAAtB;QACI,OAAO,IAAI,CAAC,sBAAsB,CAAC,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,sBAAsB,CAAC,YAAY,IAAI,CAAC,CAAC;IAClH,CAAC;IAEO,gDAAc,GAAtB;QACI,OAAO,IAAI,CAAC,sBAAsB,CAAC,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,sBAAsB,CAAC,YAAY,IAAI,CAAC,CAAC;IAClH,CAAC;IAEO,+CAAa,GAArB;QACI,IAAM,OAAO,GAAkB,EAAE,CAAC;QAClC,IAAM,eAAe,GAAG,IAAI,6DAAa,CACrC,eAAe,EACf,IAAI,CAAC,sBAAsB,CAAC,YAAY,EACxC,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAC3C,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAE9B,IAAM,eAAe,GAAG,IAAI,6DAAa,CACrC,oBAAoB,EACpB,IAAI,CAAC,sBAAsB,CAAC,YAAY,EACxC,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAC3C,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAE9B,OAAO,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IAEO,+CAAa,GAArB;QACI,OAAO,IAAI,6DAAa,CACpB,QAAQ,EACR,IAAI,CAAC,sBAAsB,CAAC,YAAY,EACxC,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAC3C,CAAC;IACN,CAAC;IAEO,oDAAkB,GAA1B;QACI,OAAO,IAAI,CAAC,sBAAsB,CAAC,YAAY,IAAI,yFAAc,CAAC,IAAI,CAAC;IAC3E,CAAC;IAEO,mDAAiB,GAAzB;QACI,OAAO,IAAI,6DAAa,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAEO,2DAAyB,GAAjC;QACI,OAAO,IAAI,CAAC,sBAAsB,IAAI,SAAS,IAAI,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,IAAI,SAAS,CAAC;IACpH,CAAC;IAEO,0DAAwB,GAAhC;QACI,IAAM,OAAO,GAAkB,EAAE,CAAC;QAClC,IAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACxD,IAAM,yBAAyB,GAAG,IAAI,0DAAU,CAC5C,qBAAqB,EACrB,uDAAQ,CAAC,YAAY,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAClD,uDAAQ,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,CACnD,CAAC;QAEF,IAAI,IAAI,CAAC,4BAA4B,EAAE,EAAE;YACrC,OAAO,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YACxC,OAAO,CAAC,IAAI,CAAC,IAAI,gEAAgB,CAAC,sBAAsB,EAAE,IAAI,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAC;YAC/F,OAAO,CAAC,IAAI,CAAC,IAAI,gEAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;SACrF;aAAM;YACH,OAAO,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;SAC3C;QAED,OAAO,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAEO,8DAA4B,GAApC;QACI,OAAO,CACH,IAAI,CAAC,sBAAsB,CAAC,mBAAmB;YAC/C,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,UAAU,IAAI,oEAAgB,CAAC,KAAK,CACvF,CAAC;IACN,CAAC;IAEO,6DAA2B,GAAnC;QACI,OAAO,IAAI,CAAC,oBAAoB,CAAC,2BAA2B,CACxD,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,UAAU,CAC7D,CAAC;IACN,CAAC;IAEO,oDAAkB,GAA1B;QACI,OAAO,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,UAAU,IAAI,oEAAgB,CAAC,UAAU;YAC5F,CAAC,CAAC,QAAQ;YACV,CAAC,CAAC,SAAS,CAAC;IACpB,CAAC;IAEO,uDAAqB,GAA7B;QAAA,iBAIC;QAHG,OAAO,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,CACnE,oBAAU,IAAI,iBAAU,CAAC,SAAS,IAAI,KAAI,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,aAAa,EAArF,CAAqF,CACtG,CAAC;IACN,CAAC;IAEO,2DAAyB,GAAjC,UAAkC,OAAsB;QACpD,OAAO,IAAI,kEAAkB,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAEO,0DAAwB,GAAhC,UAAiC,OAAsB;QACnD,OAAO,IAAI,iEAAiB,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IA5HQ,uBAAuB;QADnC,gEAAU,EAAE;yCAKwB,2FAAmB;OAJ3C,uBAAuB,CA6HnC;IAAD,8BAAC;CAAA;AA7HmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBiB;AAGiC;AAC5B;AAG1D;IAA0C,wCAAoB;IAC1D,8BAAY,QAAkB;eAC1B,kBAAM,QAAQ,CAAC;IACnB,CAAC;IAES,+CAAgB,GAA1B,UAA2B,KAA6B,EAAE,KAA0B;QAChF,OAAO,IAAI,iEAAiB,CAAC;YACzB,gBAAgB,EAAE,8DAAc,CAAC,cAAc;YAC/C,aAAa,EAAE,gEAAgB,CAAC,QAAQ;SAC3C,CAAC,CAAC;IACP,CAAC;IAVQ,oBAAoB;QADhC,gEAAU,EAAE;yCAEa,sDAAQ;OADrB,oBAAoB,CAWhC;IAAD,2BAAC;CAAA,CAXyC,uEAAoB,GAW7D;AAXgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPU;AAEe;AAG1D;IAAsD,oDAAoB;IAA1E;;IAIA,CAAC;IAHa,2DAAgB,GAA1B;QACI,OAAO,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAAC;IAC/C,CAAC;IAHQ,gCAAgC;QAD5C,gEAAU,EAAE;OACA,gCAAgC,CAI5C;IAAD,uCAAC;CAAA,CAJqD,uEAAoB,GAIzE;AAJ4C;;;;;;;;;;;;;ACF7C;AAAA;AAAA;IAAA;IAMA,CAAC;IAAD,4BAAC;AAAD,CAAC;;;;;;;;;;;;;ACTD,sCAAsC,sBAAsB,4BAA4B,uCAAuC,yBAAyB,KAAK,mDAAmD,umB;;;;;;;;;;;ACAhN,2zDAA2zD,qa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3vD;AAEf;AACc;AACN;AAC0C;AAChC;AACwB;AACI;AAClC;AAEJ;AACuB;AAGN;AACF;AACpB;AACF;AAC0B;AAQ5E;IAA+C,6CAAS;IAYpD,mCACI,QAAkB,EAClB,UAAsB,EACtB,mBAAwC,EACxC,WAAwB,EACxB,gBAAkC,EAClC,eAAgC;QANpC,YAQI,kBAAM,QAAQ,CAAC,SAMlB;QAvBM,8BAAwB,GAAuB,4EAAkB,CAAC,YAAY,CAAC;QAK9E,sBAAgB,GAAuB,EAAE,CAAC;QAa9C,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,KAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;QAChD,KAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;;IACpD,CAAC;IAEM,4CAAQ,GAAf;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,cAAM,YAAI,CAAC,8BAA8B,EAAE,EAArC,CAAqC,CAAC,CAAC;IACjF,CAAC;IAEO,+CAAW,GAAnB;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE;YACrD,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE;YAC5C,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,+EAAqB,EAAE,CAAC,CAAC;IACvD,CAAC;IAEO,kDAAc,GAAtB;QACI,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,EAAE;YAC7C,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACxD;IACL,CAAC;IAEO,qDAAiB,GAAzB;QACI,IAAM,cAAc,GAAG,gEAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1E,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,YAAY,IAAI,cAAc,EAAnC,CAAmC,CAAC,CAAC;QAC9F,OAAO,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAEO,kDAAc,GAAtB;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;YAC5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,CAAC;SAC9D;IACL,CAAC;IAEO,qDAAiB,GAAzB,UAA0B,mBAAmC;QACzD,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,6BAA6B,CAAC,mBAAmB,CAAC,CAAC;IACxF,CAAC;IAEO,iEAA6B,GAArC,UAAsC,KAAqB;QACvD,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC,CAAC,0FAAc,CAAC,SAAS,CAAC,CAAC,CAAC,0FAAc,CAAC,IAAI,CAAC;IAC1F,CAAC;IAEM,gDAAY,GAAnB,UAAoB,aAAoB;QACpC,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEM,gDAAY,GAAnB,UAAoB,aAAoB;QACpC,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEO,kEAA8B,GAAtC;QACI,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,wEAAkB,CAAC,uBAAuB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7F,CAAC;IAEM,gDAAY,GAAnB,UAAoB,aAAoB;QACpC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEO,yDAAqB,GAA7B;QACI,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,wEAAkB,CAAC,oBAAoB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1F,CAAC;IAEO,gDAAY,GAApB;QAAA,iBAKC;QAJG,IAAM,aAAa,GAAsB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QACvE,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,kBAAQ;YACzD,OAAO,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,eAAwC,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,iDAAa,GAArB,UAAsB,eAAsC;QACxD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;QACtF,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,8BAA8B,EAAE,CAAC;IAC1C,CAAC;IAES,0DAAsB,GAAhC;QACI,OAAO,IAAI,iEAAiB,CAAC;YACzB,gBAAgB,EAAE,8DAAc,CAAC,oBAAoB;YACrD,aAAa,EAAE,gEAAgB,CAAC,QAAQ;YACxC,cAAc,EAAE,IAAI,CAAC,6BAA6B,CAC9C,IAAI,CAAC,OAAO,CAAC,YAAY,EACzB,IAAI,CAAC,OAAO,CAAC,YAAY,EACzB,IAAI,CAAC,OAAO,CAAC,YAAY,CAC5B;SACJ,CAAC,CAAC;IACP,CAAC;IAEO,iEAA6B,GAArC,UACI,MAAc,EACd,MAAc,EACd,cAA8B;QAE9B,IAAM,OAAO,GAAG,IAAI,yBAAyB,EAAE,CAAC;QAChD,IAAI,MAAM;YAAE,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;QACpC,IAAI,MAAM;YAAE,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;QACpC,OAAO,CAAC,IAAI,GAAG,cAAwB,CAAC;QACxC,OAAO,CAAC,YAAY,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAC5C,OAAO,CAAC,iBAAiB,GAAG,qBAAqB,CAAC;QAClD,OAAO,CAAC,qBAAqB,GAAG,kBAAkB,CAAC;QACnD,OAAO,OAAO,CAAC;IACnB,CAAC;IAEO,8DAA0B,GAAlC;QAAA,iBAiBC;QAhBG,IAAM,wBAAwB,GAAG,UAAC,KAAgC;YAC9D,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC9B,KAAI,CAAC,8BAA8B,EAAE,CAAC;QAC1C,CAAC,CAAC;QACF,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,gBAAM;YAChC,IAAM,oBAAoB,GAAG,IAAI,sGAAwB,EAAE,CAAC;YAC5D,oBAAoB,CAAC,MAAM,GAAG,KAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC3E,oBAAoB,CAAC,UAAU,GAAG,0GAA0B,CAAC,wBAAwB,CACjF,MAAM,CAAC,WAAW,EAClB,wBAAwB,CAC3B,CAAC;YACF,oBAAoB,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACpD,oBAAoB,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC;YAC9D,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,oDAAgB,GAAvB,UAAwB,KAA4B;QAChD,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,8BAA8B,EAAE,CAAC;IAC1C,CAAC;IAEM,qDAAiB,GAAxB,UAAyB,KAAwD;QAC7E,IAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACtC,IAAM,mBAAmB,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;QACzE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,aAAa,GAAG,mBAAmB,CAAC;QACrE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAC,GAAG,mBAAmB,CAAC;IAClG,CAAC;IAEO,iEAA6B,GAArC;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;YACnC,IAAM,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,CAAC,oEAAgB,CAAC,KAAK,CAAC,CAAC;YAC7E,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;SACzD;IACL,CAAC;IAEO,kEAA8B,GAAtC;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YAC9B,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,gBAAM,IAAI,eAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAjC,CAAiC,CAAC,CAAC;SAC3G;IACL,CAAC;IAEO,wDAAoB,GAA5B,UAA6B,IAAY;QACrC,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,UAAU,IAAI,IAAI,EAAzB,CAAyB,CAAC,CAAC;IAC3E,CAAC;IAEO,6DAAyB,GAAjC,UAAkC,IAAY;QAC1C,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,gBAAM,IAAI,aAAM,CAAC,UAAU,IAAI,IAAI,EAAzB,CAAyB,CAAC,CAAC;IAChF,CAAC;IAEO,wDAAoB,GAA5B,UAA6B,UAAkB;QAC3C,OAAO,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;IACzE,CAAC;IAEO,6DAAyB,GAAjC,UAAkC,eAAgC;QAC9D,IAAI,CAAC,0BAA0B,GAAG,IAAI,qEAAqB,CACvD,eAAe,EACf,kEAAe,CAAC,mBAAmB,CACtC,CAAC;IACN,CAAC;IAEM,+CAAW,GAAlB;QACI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,wEAAkB,CAAC,uBAAuB,CAAC,CAAC;QAChF,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,wEAAkB,CAAC,oBAAoB,CAAC,CAAC;QAC7E,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvD,iBAAM,WAAW,WAAE,CAAC;IACxB,CAAC;IA1MQ,yBAAyB;QANrC,+DAAS,CAAC;YACP,QAAQ,EAAE,oBAAoB;;;SAGjC,CAAC;QACD,gEAAU,EAAE;yCAcK,sDAAQ;YACN,sEAAU;YACD,4FAAmB;YAC3B,2DAAW;YACN,qEAAgB;YACjB,+DAAe;OAlB3B,yBAAyB,CA2MrC;IAAD,gCAAC;CAAA,CA3M8C,8DAAS,GA2MvD;AA3MqC;AA6MtC;IAAA;QACoB,UAAK,GAAW,+EAA+E,CAAC;IAOpH,CAAC;IAAD,gCAAC;AAAD,CAAC;;;;;;;;;;;;;;AChPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyB;AACH;AACqB;;;;;;;;;;;;;ACF5C;AAAA;AAAA;AAAA;AAAwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAG;AAOT;AACI;AAEoB;AACkB;AAG5E;IAAkD,gDAAsB;IAIpE,sCAAY,cAA8B,EAAE,gBAAkC,EAAE,IAAU;QAA1F,YACI,iBAAO,SAIV;QAHG,KAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACrB,CAAC;IAEM,4CAAK,GAAZ,UAAa,YAA4B;QACrC,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,YAAY,IAAI,yFAAc,CAAC,IAAI,EAAE;YACrC,IAAI,CAAC,sBAAsB,EAAE,CAAC;SACjC;aAAM;YACH,IAAI,CAAC,2BAA2B,EAAE,CAAC;SACtC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEO,kEAA2B,GAAnC;QACI,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,0CAA0C,EAAE,CAAC;YAC3F,KAAK,EAAE,gBAAgB,CAAC,OAAO;YAC/B,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,2CAA2C,EAAE,CAAC;YAC3F,KAAK,EAAE,gBAAgB,CAAC,YAAY;YACpC,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,8CAA8C,EAAE,CAAC;YACjG,KAAK,EAAE,gBAAgB,CAAC,QAAQ;YAChC,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,uCAAuC,EAAE,CAAC;YACzF,KAAK,EAAE,gBAAgB,CAAC,QAAQ;YAChC,MAAM,EAAE,yFAAgC,CAAC,aAAa;SACzD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,+CAA+C,EAAE,CAAC;YAC/F,KAAK,EAAE,gBAAgB,CAAC,MAAM;YAC9B,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE,EAAE,+CAA+C,EAAE,CAAC;YACpG,KAAK,EAAE,gBAAgB,CAAC,UAAU;YAClC,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB;SAC3D,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,0CAA0C,EAAE,CAAC;YACxF,KAAK,EAAE,gBAAgB,CAAC,eAAe;YACvC,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,EAAE,yCAAyC,EAAE,CAAC;YAC7F,KAAK,EAAE,gBAAgB,CAAC,kBAAkB;YAC1C,MAAM,EAAE,yFAAgC,CAAC,aAAa;YACtD,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,oBAAoB;SAC5D,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,0CAA0C,EAAE,CAAC;YAC7F,KAAK,EAAE,gBAAgB,CAAC,YAAY;YACpC,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB;SAC3D,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE,EAAE,8CAA8C,EAAE,CAAC;YACnG,KAAK,EAAE,gBAAgB,CAAC,WAAW;YACnC,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC;gBAClB,KAAK,EAAE,mBAAmB;gBAC1B,EAAE,EAAE,mDAAmD;aAC1D,CAAC;YACF,KAAK,EAAE,gBAAgB,CAAC,gBAAgB;YACxC,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,uCAAuC,EAAE,CAAC;YACrF,KAAK,EAAE,gBAAgB,CAAC,IAAI;YAC5B,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,2CAA2C,EAAE,CAAC;YAC7F,KAAK,EAAE,gBAAgB,CAAC,MAAM;YAC9B,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,EAAE,EAAE,2CAA2C,EAAE,CAAC;YAClG,KAAK,EAAE,gBAAgB,CAAC,WAAW;YACnC,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB;SAC3D,CAAC,CAAC;IACP,CAAC;IAEO,6DAAsB,GAA9B;QACI,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,0CAA0C,EAAE,CAAC;YAC3F,KAAK,EAAE,gBAAgB,CAAC,OAAO;YAC/B,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,2CAA2C,EAAE,CAAC;YAC3F,KAAK,EAAE,gBAAgB,CAAC,YAAY;YACpC,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,0CAA0C,EAAE,CAAC;YACxF,KAAK,EAAE,gBAAgB,CAAC,eAAe;YACvC,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,0CAA0C,EAAE,CAAC;YAC7F,KAAK,EAAE,gBAAgB,CAAC,YAAY;YACpC,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB;SAC3D,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE,EAAE,8CAA8C,EAAE,CAAC;YACnG,KAAK,EAAE,gBAAgB,CAAC,WAAW;SACtC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC;gBAClB,KAAK,EAAE,mBAAmB;gBAC1B,EAAE,EAAE,mDAAmD;aAC1D,CAAC;YACF,KAAK,EAAE,gBAAgB,CAAC,gBAAgB;YACxC,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,uCAAuC,EAAE,CAAC;YACrF,KAAK,EAAE,gBAAgB,CAAC,IAAI;YAC5B,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,2CAA2C,EAAE,CAAC;YAC7F,KAAK,EAAE,gBAAgB,CAAC,MAAM;YAC9B,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,EAAE,EAAE,2CAA2C,EAAE,CAAC;YAClG,KAAK,EAAE,gBAAgB,CAAC,WAAW;YACnC,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB;SAC3D,CAAC,CAAC;IACP,CAAC;IAvJQ,4BAA4B;QADxC,gEAAU,EAAE;yCAKmB,uEAAc,EAAoB,uEAAgB,EAAQ,mDAAI;OAJjF,4BAA4B,CAwJxC;IAAD,mCAAC;CAAA,CAxJiD,+EAAsB,GAwJvE;AAxJwC;AA0JzC,IAAM,gBAAgB,GAAG;IACrB,YAAY,EAAE,cAAc;IAC5B,eAAe,EAAE,iBAAiB;IAClC,eAAe,EAAE,iBAAiB;IAClC,gBAAgB,EAAE,kBAAkB;IACpC,iBAAiB,EAAE,mBAAmB;IACtC,OAAO,EAAE,aAAa;IACtB,QAAQ,EAAE,iBAAiB;IAC3B,QAAQ,EAAE,UAAU;IACpB,MAAM,EAAE,sBAAsB;IAC9B,UAAU,EAAE,qBAAqB;IACjC,kBAAkB,EAAE,2BAA2B;IAC/C,YAAY,EAAE,WAAW;IACzB,WAAW,EAAE,sBAAsB;IACnC,gBAAgB,EAAE,2BAA2B;IAC7C,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE,cAAc;IACtB,WAAW,EAAE,aAAa;CAC7B,CAAC;;;;;;;;;;;;AC1LF,iNAAiN,mFAAmF,aAAa,yLAAyL,mFAAmF,YAAY,0vB;;;;;;;;;;;ACAzkB,6RAA6R,qCAAqC,iCAAiC,gCAAgC,uBAAuB,2BAA2B,4BAA4B,+BAA+B,8EAA8E,4CAA4C,8EAA8E,8BAA8B,kEAAkE,EAAE,iDAAiD,mkI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3wB;AAEsB;AAGnC;AAEM;AACQ;AACiB;AACG;AACV;AACd;AACvB;AAEoE;AACH;AACD;AAStG;IAAyC,uCAAsC;IAO3E,6BACI,QAAkB,EAClB,cAAwC,EACxC,kBAAgD,EAChD,kBAAsC,EACtC,IAAU;QALd,YAOI,kBAAM,QAAQ,EAAE,cAAc,EAAE,kBAAkB,CAAC,SAKtD;QAJG,KAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,KAAI,CAAC,WAAW,GAAG,IAAI,sFAAqB,EAAE,CAAC;QAC/C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,KAAI,CAAC,oBAAoB,GAAG,IAAI,qHAAmB,CAAC,IAAI,CAAC,CAAC;;IAC9D,CAAC;IAEM,4CAAc,GAArB;QACI,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IAC7E,CAAC;IAEM,qDAAuB,GAA9B;QACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAES,iDAAmB,GAA7B;QACI,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE;YAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;aAAM;YACH,IAAI,CAAC,uBAAuB,CACxB,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,EAAE,EAAE,4CAA4C,EAAE,CAAC,EACjG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE,EAAE,0CAA0C,EAAE,CAAC,CACtF,CAAC;SACL;IACL,CAAC;IAES,uCAAS,GAAnB;QACI,IAAI,CAAC,0BAA0B,EAAE,CAAC;IACtC,CAAC;IAES,0DAA4B,GAAtC;QAAA,iBAaC;QAZG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAC1B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,wEAAkB,CAAC,uBAAuB,EAAE,+BAAqB;YAC7F,KAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,CAAC;YAClD,KAAI,CAAC,4BAA4B,EAAE,CAAC;QACxC,CAAC,CAAC,CACL,CAAC;QACF,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAC1B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,wEAAkB,CAAC,oBAAoB,EAAE,+BAAqB;YAC1F,KAAI,CAAC,qBAAqB,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;YACxD,KAAI,CAAC,4BAA4B,EAAE,CAAC;QACxC,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAES,6CAAe,GAAzB;QACI,OAAO,sEAAiB,CAAC,WAAW,CAAC;IACzC,CAAC;IAES,0CAAY,GAAtB,UAAuB,QAAqB,EAAE,QAAqB;QAC/D,6EAA6E;QAC7E,OAAO,QAAQ,CAAC,cAAc;YAC1B,CAAC,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,cAAc,KAAK,QAAQ,CAAC,cAAc;YAChG,CAAC,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,CAAC;IAClD,CAAC;IAES,sDAAwB,GAAlC;QACI,IAAI,CAAC,0BAA0B,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAClE,CAAC;IAEO,0DAA4B,GAApC;QACI,IAAM,WAAW,GAAgB,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC;QACtE,IAAI,WAAW,EAAE;YACb,IAAM,UAAU,GAAkB,wHAAoB,CAAC,mBAAmB,CACtE,WAAW,CAAC,WAAW,EACvB,WAAW,CAAC,aAAa,CAC5B,CAAC;YAEF,IAAI,CAAC,WAAW;gBACZ,WAAW,CAAC,UAAU,KAAK,8FAAgB,CAAC,KAAK;oBAC7C,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,WAAW,CAAC,UAAU,CAAC;oBAC3E,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC;YAExC,IAAI,CAAC,UAAU;gBACX,UAAU,CAAC,SAAS,KAAK,kGAAoB,CAAC,KAAK;oBAC/C,CAAC,CAAC,wHAAoB,CAAC,kBAAkB,CAAC,UAAU,CAAC;oBACrD,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC;SAC3C;IACL,CAAC;IAEO,wDAA0B,GAAlC;QACI,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,uBAAuB,EAAE,CAAC,CAAC;IAC7F,CAAC;IAjGQ,mBAAmB;QAP/B,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;;YAGvB,SAAS,EAAE,CAAC,gEAAgB,EAAE,gGAAwB,EAAE,8FAA4B,CAAC;SACxF,CAAC;QACD,gEAAU,EAAE;yCASK,sDAAQ;YACF,gGAAwB;YACpB,8FAA4B;YAC5B,8EAAkB;YAChC,mDAAI;OAZL,mBAAmB,CAkG/B;IAAD,0BAAC;CAAA,CAlGwC,kFAAyB,GAkGjE;AAlG+B;;;;;;;;;;;;;AC1BhC;AAAA;AAAO,IAAM,kBAAkB,GAAG;IAC9B,uBAAuB,EAAE,4BAA4B;IACrD,oBAAoB,EAAE,yBAAyB;CAClD,CAAC;;;;;;;;;;;;ACHF,4Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAoD;AAEY;AACA;AAE4C;AAO5G;IAA4C,0CAAyB;IACjE,gCAAY,QAAkB;eAC1B,kBAAM,QAAQ,CAAC;IACnB,CAAC;IAHQ,sBAAsB;QALlC,+DAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;;YAE3B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,6EAAqB,EAAE,QAAQ,EAAE,yHAA4B,EAAE,CAAC;SAC1F,CAAC;yCAEwB,sDAAQ;OADrB,sBAAsB,CAIlC;IAAD,6BAAC;CAAA,CAJ2C,6EAAyB,GAIpE;AAJkC;;;;;;;;;;;;;ACZnC;AAAA;AAAA;AAAO,IAAM,gBAAgB,GAAG;IAC5B,KAAK,EAAE,CAAC;IACR,WAAW,EAAE,CAAC;IACd,OAAO,EAAE,CAAC;IACV,WAAW,EAAE,CAAC;IACd,QAAQ,EAAE,CAAC;IACX,IAAI,EAAE,CAAC;IACP,UAAU,EAAE,CAAC;IACb,KAAK,EAAE,CAAC;CACX,CAAC;AAYK,IAAM,oBAAoB,GAAG;IAChC,KAAK,EAAE,CAAC;IACR,KAAK,EAAE,CAAC;IACR,UAAU,EAAE,CAAC;IACb,MAAM,EAAE,CAAC;IACT,UAAU,EAAE,CAAC;IACb,KAAK,EAAE,CAAC;IACR,OAAO,EAAE,CAAC;IACV,KAAK,EAAE,CAAC;CACX,CAAC;;;;;;;;;;;;AC9BF,gqF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAoD;AAEH;AACyB;AACF;AACe;AAGzB;AACV;AAE2C;AACtB;AAMzE;IAA2C,yCAAS;IAehD,+BACI,QAAkB,EAClB,gBAAkC,EAClC,iBAAoC,EACpC,eAAgC,EAChC,oBAA0C;QAL9C,YAOI,kBAAM,QAAQ,CAAC,SAMlB;QALG,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,KAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,KAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;QAChD,KAAI,CAAC,qBAAqB,GAAG,oBAA8C,CAAC;QAC5E,KAAI,CAAC,YAAY,GAAG,IAAI,2EAAgB,EAAE,CAAC;;IAC/C,CAAC;IAEO,yDAAyB,GAAjC,UAAkC,eAAgC;QAC9D,IAAI,CAAC,0BAA0B,GAAG,IAAI,oEAAqB,CACvD,eAAe,EACf,iEAAe,CAAC,iBAAiB,CACpC,CAAC;IACN,CAAC;IAEM,+CAAe,GAAtB;QACI,iBAAM,eAAe,WAAE,CAAC;QACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAEM,gDAAgB,GAAvB;QAAA,iBAMC;QALG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAC1B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,sFAAe,CAAC,cAAc,EAAE,4BAAkB;YAC/E,YAAI,CAAC,4BAA4B,CAAC,kBAAkB,CAAC;QAArD,CAAqD,CACxD,CACJ,CAAC;IACN,CAAC;IAEM,4DAA4B,GAAnC,UAAoC,kBAAsC;QAA1E,iBAKC;QAJG,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,gBAAM;YAC9B,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,+CAAe,GAAvB;QACI,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC5E,CAAC;IAEO,4CAAY,GAApB,UAAqB,MAAkB;QACnC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,uBAAuB,GAAG,MAAM,CAAC,eAAe,CAAC;QACtD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,YAAY,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,WAAW,CAAC;IAClD,CAAC;IAEM,4CAAY,GAAnB,UAAoB,QAAgB;QAChC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAEO,iDAAiB,GAAzB,UAA0B,QAAgB;QACtC,IAAI,CAAC,YAAY,CAAC,sBAAsB,GAAG,QAAQ,CAAC;QACpD,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACvE,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;QACvE,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAChE,CAAC;IAEO,iDAAiB,GAAzB;QACI,IAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,iCAAiC,EAAE,CAAC;QAChF,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,8EAAW,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;IAC7E,CAAC;IAtFQ,qBAAqB;QAJjC,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;;SAE5B,CAAC;yCAiBgB,sDAAQ;YACA,oEAAgB;YACf,gGAAiB;YACnB,8DAAe;YACV,uFAAoB;OApBrC,qBAAqB,CAuFjC;IAAD,4BAAC;CAAA,CAvF0C,8DAAS,GAuFnD;AAvFiC;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBO;AACM;AACF;AAE+B;AACV;AACiB;AAQnF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAN9B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,yFAAkB,CAAC;YACxD,YAAY,EAAE,CAAC,8EAAqB,CAAC;YACrC,OAAO,EAAE,CAAC,8EAAqB,CAAC;YAChC,SAAS,EAAE,CAAC,gGAAiB,CAAC;SACjC,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACd/B,iuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAoD;AAEH;AACJ;AAC2B;AACtB;AACwB;AACX;AAEX;AACqB;AACb;AAM5D;IAA4C,0CAAS;IAQjD,gCACI,QAAkB,EAClB,UAAsB,EACtB,eAAgC,EAChC,gBAAkC;QAJtC,YAMI,kBAAM,QAAQ,CAAC,SAIlB;QAhBM,8BAAwB,GAAuB,4EAAkB,CAAC,YAAY,CAAC;QAalF,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,KAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;QAChD,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;;IAC9C,CAAC;IAEO,0DAAyB,GAAjC,UAAkC,eAAgC;QAC9D,IAAI,CAAC,0BAA0B,GAAG,IAAI,oEAAqB,CACvD,eAAe,EACf,iEAAe,CAAC,eAAe,CAClC,CAAC;IACN,CAAC;IAEM,yCAAQ,GAAf;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAEO,4CAAW,GAAnB;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE;YACrD,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE;YAC5C,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,wEAAkB,EAAE,CAAC,CAAC;IACpD,CAAC;IAEO,+CAAc,GAAtB;QACI,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,EAAE;YAC7C,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,+DAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAClF;IACL,CAAC;IAEM,6CAAY,GAAnB,UAAoB,aAAoB;QACpC,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACrC,CAAC;IAEM,6CAAY,GAAnB,UAAoB,aAAoB;QACpC,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACrC,CAAC;IAEO,0DAAyB,GAAjC;QACI,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,sFAAe,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACjF,CAAC;IAEM,4CAAW,GAAlB;QACI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,sFAAe,CAAC,cAAc,CAAC,CAAC;QACpE,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvD,iBAAM,WAAW,WAAE,CAAC;IACxB,CAAC;IA/DQ,sBAAsB;QAJlC,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;;SAE7B,CAAC;yCAUgB,sDAAQ;YACN,0DAAU;YACL,8DAAe;YACd,oEAAgB;OAZ7B,sBAAsB,CAgElC;IAAD,6BAAC;CAAA,CAhE2C,8DAAS,GAgEpD;AAhEkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB2B;AAE9D;IAAwC,sCAAgB;IAAxD;;IAA0D,CAAC;IAAD,yBAAC;AAAD,CAAC,CAAnB,2EAAgB,GAAG;;;;;;;;;;;;;;ACF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFoB;AAI2C;AAQvE;AAIiC;AAEqC;AAG/F;IAAyD,uDAAkB;IAIvE,6CAAY,QAAkB;QAA9B,YACI,kBAAM,QAAQ,CAAC,SAElB;QADG,KAAI,CAAC,mCAAmC,GAAG,IAAI,0GAAkC,EAAE,CAAC;;IACxF,CAAC;IAEM,0DAAY,GAAnB,UAAoB,kBAAsC;QACtD,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;IAClD,CAAC;IAEM,qDAAO,GAAd,UAAe,MAAsB;QACjC,IAAM,aAAa,GAAsB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;QAC3E,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,kBAAQ;YACjD,IAAM,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAE,QAAQ,CAAC,eAAsC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC9F,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACzC,MAAM,CAAC,OAA4B,CAAC,aAAa,CAAC,iBAAiB,CAAC;gBACjE,SAAS,EAAE,IAAI,kEAAS,CAAC;oBACrB,SAAS,EAAE,MAAM,CAAC,SAAS;oBAC3B,WAAW,EAAE,MAAM,CAAC,WAAW;iBAClC,CAAC;gBACF,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,IAAI,CAAC,MAAM;aACxB,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAES,kEAAoB,GAA9B,UAA+B,MAAsB;QACjD,OAAO,IAAI,iEAAiB,CAAC;YACzB,gBAAgB,EAAE,8DAAc,CAAC,oBAAoB;YACrD,aAAa,EAAE,gEAAgB,CAAC,oBAAoB;YACpD,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;SAC9C,CAAC,CAAC;IACP,CAAC;IAED,4BAA4B;IAC5B,WAAW;IACD,sEAAwB,GAAlC,UAAmC,MAAsB;QACrD,OAAO,IAAI,CAAC;IAChB,CAAC;IAES,gEAAkB,GAA5B;QACI,OAAO,IAAI,CAAC,mCAAmC,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC1F,CAAC;IAEO,4DAAc,GAAtB,UAAuB,MAAsB;QACzC,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAClD,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC;QACnD,IAAM,gBAAgB,GAAG,IAAI,gEAAgB,CAAC;YAC1C,UAAU,EAAE,MAAM,CAAC,QAAQ;YAC3B,eAAe,EAAE,UAAU;YAC3B,OAAO,EAAE,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;SACxE,CAAC,CAAC;QACH,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IAxDQ,mCAAmC;QAD/C,gEAAU,EAAE;yCAKa,sDAAQ;OAJrB,mCAAmC,CAyD/C;IAAD,0CAAC;CAAA,CAzDwD,uEAAkB,GAyD1E;AAzD+C;;;;;;;;;;;;;ACrB/C;AAAA;AAAA;AAAgF;AAIjF;IAAA;IAuCA,CAAC;IApCU,wDAAW,GAAlB,UAAmB,kBAAsC;QACrD,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,IAAM,MAAM,GAAG,IAAI,+DAAe,CAAC,EAAE,CAAC,CAAC;QACvC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAC3C,IAAI,IAAI,CAAC,cAAc,EAAE;YAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACrE,IAAI,IAAI,CAAC,cAAc,EAAE;YAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACrE,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,2DAAc,GAAtB;QACI,OAAO,IAAI,6DAAa,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAEO,2DAAc,GAAtB;QACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,mBAAmB,CAAC,YAAY,IAAI,CAAC,CAAC;IAC5G,CAAC;IAEO,2DAAc,GAAtB;QACI,OAAO,IAAI,CAAC,mBAAmB,CAAC,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,mBAAmB,CAAC,YAAY,IAAI,CAAC,CAAC;IAC5G,CAAC;IAEO,0DAAa,GAArB;QACI,OAAO,IAAI,6DAAa,CACpB,UAAU,EACV,IAAI,CAAC,mBAAmB,CAAC,YAAY,EACrC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CACxC,CAAC;IACN,CAAC;IAEO,0DAAa,GAArB;QACI,OAAO,IAAI,6DAAa,CACpB,QAAQ,EACR,IAAI,CAAC,mBAAmB,CAAC,YAAY,EACrC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CACxC,CAAC;IACN,CAAC;IACL,yCAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3C0C;AAEwC;AAC7C;AAGtC;IAA6D,2DAAsB;IAC/E,iDAAY,IAAU;QAAtB,YACI,iBAAO,SAEV;QADG,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACrB,CAAC;IAEM,uDAAK,GAAZ;QACI,IAAI,CAAC,mCAAmC,EAAE,CAAC;QAC3C,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEO,qFAAmC,GAA3C;QACI,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,6CAA6C,EAAE,CAAC;YAC7F,KAAK,EAAE,+BAA+B,CAAC,YAAY;YACnD,cAAc,EAAE,IAAI;YACpB,eAAe,EAAE,IAAI;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,4CAA4C,EAAE,CAAC;YAC/F,KAAK,EAAE,+BAA+B,CAAC,eAAe;YACtD,cAAc,EAAE,IAAI;YACpB,eAAe,EAAE,IAAI;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,iDAAiD,EAAE,CAAC;YACjG,KAAK,EAAE,+BAA+B,CAAC,MAAM;YAC7C,cAAc,EAAE,IAAI;YACpB,eAAe,EAAE,IAAI;SACxB,CAAC,CAAC;IACP,CAAC;IA9BQ,uCAAuC;QADnD,gEAAU,EAAE;yCAES,mDAAI;OADb,uCAAuC,CA+BnD;IAAD,8CAAC;CAAA,CA/B4D,+EAAsB,GA+BlF;AA/BmD;AAiCpD,IAAM,+BAA+B,GAAG;IACpC,YAAY,EAAE,cAAc;IAC5B,eAAe,EAAE,iBAAiB;IAClC,MAAM,EAAE,iBAAiB;CAC5B,CAAC;;;;;;;;;;;;AC3CF,qEAAqE,mBAAmB,KAAK,mDAAmD,+gB;;;;;;;;;;;ACAhJ,gPAAgP,eAAe,0O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxL;AAEF;AAIkB;AACd;AACR;AACR;AAEgD;AACE;AAS3G;IAAoD,kDAAsC;IAGtF,wCACI,QAAkB,EAClB,cAAmD,EACnD,kBAA2D,EAC3D,kBAAsC;QAJ1C,YAMI,kBAAM,QAAQ,EAAE,cAAc,EAAE,kBAAkB,CAAC,SAKtD;QAJG,KAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,KAAI,CAAC,WAAW,GAAG,IAAI,oGAAkB,EAAE,CAAC;QAC5C,KAAI,CAAC,cAAc,EAAE,CAAC;QACtB,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;;IACjC,CAAC;IAEM,qDAAY,GAAnB,UAAoB,MAAW;QAC3B,iBAAM,YAAY,YAAC,MAAM,CAAC,CAAC;QAC3B,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAES,4DAAmB,GAA7B;QACI,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE;YAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;IACL,CAAC;IAES,qEAA4B,GAAtC;QAAA,iBAMC;QALG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAC1B,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,sFAAe,CAAC,cAAc,EAAE,UAAC,kBAAsC;YACnG,YAAI,CAAC,qBAAqB,CAAC,kBAAkB,CAAC;QAA9C,CAA8C,CACjD,CACJ,CAAC;IACN,CAAC;IAES,wDAAe,GAAzB;QACI,OAAO,sEAAiB,CAAC,uBAAuB,CAAC;IACrD,CAAC;IAES,2DAAkB,GAA5B;QACI,OAAO,CAAC,CAAC;IACb,CAAC;IAES,qDAAY,GAAtB,UAAuB,QAAqB,EAAE,QAAqB;QAC/D,OAAO,QAAQ,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,CAAC;IACnD,CAAC;IAEO,uDAAc,GAAtB;QACI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IAnDQ,8BAA8B;QAP1C,+DAAS,CAAC;YACP,QAAQ,EAAE,yBAAyB;;;YAGnC,SAAS,EAAE,CAAC,qHAAuC,EAAE,uHAAmC,CAAC;YACzF,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACxC,CAAC;yCAKgB,sDAAQ;YACF,uHAAmC;YAC/B,qHAAuC;YACvC,8EAAkB;OAPjC,8BAA8B,CAoD1C;IAAD,qCAAC;CAAA,CApDmD,kFAAyB,GAoD5E;AApD0C;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBF;AACM;AACF;AAE+B;AACS;AAOrF;IAAA;IAA0C,CAAC;IAA9B,2BAA2B;QALvC,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,yFAAkB,CAAC;YACxD,YAAY,EAAE,CAAC,iGAA8B,CAAC;YAC9C,OAAO,EAAE,CAAC,iGAA8B,CAAC;SAC5C,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAAA;AAAH;;;;;;;;;;;;;ACZxC;AAAA;AAAO,IAAM,eAAe,GAAG;IAC3B,cAAc,EAAE,mBAAmB;CACtC,CAAC;;;;;;;;;;;;ACFF,4pB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAoD;AAEY;AACA;AAE4C;AAO5G;IAAyC,uCAAyB;IAC9D,6BAAY,QAAkB;eAC1B,kBAAM,QAAQ,CAAC;IACnB,CAAC;IAHQ,mBAAmB;QAL/B,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;YAEvB,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,6EAAqB,EAAE,QAAQ,EAAE,yHAA4B,EAAE,CAAC;SAC1F,CAAC;yCAEwB,sDAAQ;OADrB,mBAAmB,CAI/B;IAAD,0BAAC;CAAA,CAJwC,6EAAyB,GAIjE;AAJ+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZS;AACM;AACF;AAE+B;AAClB;AACiB;AAC4B;AACpC;AAOnE;IAAA;IAA4B,CAAC;IAAhB,aAAa;QALzB,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,yFAAkB,EAAE,mHAA2B,EAAE,+EAAkB,CAAC;YACzG,YAAY,EAAE,CAAC,sEAAmB,EAAE,uFAAsB,CAAC;YAC3D,OAAO,EAAE,CAAC,sEAAmB,CAAC;SACjC,CAAC;OACW,aAAa,CAAG;IAAD,oBAAC;CAAA;AAAH;;;;;;;;;;;;ACf1B,gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqD;AAEwB;AAM7E;IAAsC,oCAAuB;IACzD,0BAAY,QAAkB;eAC1B,kBAAM,QAAQ,CAAC;IACnB,CAAC;IAHQ,gBAAgB;QAJ5B,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;SAEvB,CAAC;yCAEwB,sDAAQ;OADrB,gBAAgB,CAI5B;IAAD,uBAAC;CAAA,CAJqC,0FAAuB,GAI5D;AAJ4B;;;;;;;;;;;;ACR7B,mU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqD;AAE6C;AAOlG;IAA0C,wCAA6B;IACnE,8BAAY,QAAkB;eAC1B,kBAAM,QAAQ,CAAC;IACnB,CAAC;IAED,sBAAc,2CAAS;aAAvB;YACI,OAAO,aAAa,CAAC;QACzB,CAAC;;;OAAA;IAES,4CAAa,GAAvB;QACI,IAAM,oBAAoB,GAAG,IAAI,CAAC,oBAA8C,CAAC;QACjF,IAAM,YAAY,GAAG,oBAAoB,CAAC,qCAAqC,EAAE,CAAC;QAClF,IAAM,QAAQ,GAAG,oBAAoB,CAAC,iCAAiC,EAAE,CAAC;QAC1E,IAAM,UAAU,GAAG,oBAAoB,CAAC,mCAAmC,EAAE,CAAC;QAC9E,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC7B,OAAO,CAAC,UAAU,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;IAChD,CAAC;IAhBQ,oBAAoB;QAJhC,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;SAE3B,CAAC;yCAEwB,sDAAQ;OADrB,oBAAoB,CAiBhC;IAAD,2BAAC;CAAA,CAjByC,gGAA6B,GAiBtE;AAjBgC;;;;;;;;;;;;;ACTjC;AAAA;AAAA;AAAA;AAA4C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAS;AAY5B;AAEuD;AAEnC;AACF;AACH;AAGxC;IAA4C,0CAAkB;IAG1D,gCAAY,QAAkB,EAAE,eAAiC;QAAjE,YACI,kBAAM,QAAQ,CAAC,SAElB;QADG,KAAI,CAAC,oBAAoB,GAAG,eAAe,CAAC;;IAChD,CAAC;IAEM,6CAAY,GAAnB,UAAoB,oBAAsC;QACtD,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAES,qDAAoB,GAA9B,UAA+B,MAAsB;QACjD,OAAO,IAAI,iEAAiB,CAAC;YACzB,gBAAgB,EAAE,8DAAc,CAAC,cAAc;YAC/C,aAAa,EAAE,gEAAgB,CAAC,QAAQ;YACxC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;SAC9C,CAAC,CAAC;IACP,CAAC;IAES,yDAAwB,GAAlC,UAAmC,MAAsB;QACrD,OAAO,IAAI,iEAAiB,CAAC;YACzB,gBAAgB,EAAE,8DAAc,CAAC,cAAc;YAC/C,aAAa,EAAE,gEAAgB,CAAC,SAAS;YACzC,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;SAClD,CAAC,CAAC;IACP,CAAC;IAEO,+CAAc,GAAtB,UAAuB,MAAsB;QACzC,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACpE,IAAM,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC;QACnD,IAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC;QAC1D,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC;QACrC,OAAO,CAAC,eAAe,GAAG,UAAU,CAAC;QACrC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACtE,OAAO,OAAO,CAAC;IACnB,CAAC;IAEO,mDAAkB,GAA1B,UAA2B,MAAsB;QAC7C,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACpE,OAAO,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC;IACrD,CAAC;IAEO,oDAAmB,GAA3B,UAA4B,eAAgC;QACxD,IAAM,eAAe,GAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,CAAC;QAC3G,IAAM,OAAO,GAAG,IAAI,oEAAoB,CAAC;YACrC,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,YAAY;YAC9C,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,YAAY;YAC9C,QAAQ,EAAE,mDAAQ,CAAC,eAAe,CAAC;YACnC,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;SAC1D,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACnB,CAAC;IAEO,4DAA2B,GAAnC,UAAoC,KAAa;QAC7C,OAAO,MAAM,CAAC,IAAI,CAAC,sDAAc,CAAC,CAAC,IAAI,CAAC,aAAG,IAAI,6DAAc,CAAC,GAAG,CAAC,KAAK,KAAK,EAA7B,CAA6B,CAAC,CAAC;IAClF,CAAC;IAzDQ,sBAAsB;QADlC,gEAAU,EAAE;yCAIa,sDAAQ,EAAmB,wDAAgB;OAHxD,sBAAsB,CA0DlC;IAAD,6BAAC;CAAA,CA1D2C,6FAAkB,GA0D7D;AA1DkC;;;;;;;;;;;;;ACrBnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACH;AACF;;;;;;;;;;;;;ACFnC;AAAA;AAAO,IAAM,cAAc,GAAG;IAC1B,KAAK,EAAE,UAAU;IACjB,MAAM,EAAE,WAAW;IACnB,WAAW,EAAE,aAAa;IAC1B,UAAU,EAAE,YAAY;IACxB,YAAY,EAAE,iBAAiB;IAC/B,aAAa,EAAE,WAAW;IAC1B,KAAK,EAAE,eAAe;IACtB,eAAe,EAAE,aAAa;IAC9B,gBAAgB,EAAE,cAAc;IAChC,OAAO,EAAE,eAAe;IACxB,MAAM,EAAE,UAAU;CACrB,CAAC;;;;;;;;;;;;ACZF,oCAAoC,sBAAsB,4BAA4B,uCAAuC,yBAAyB,KAAK,mDAAmD,mkB;;;;;;;;;;;ACA9M,q1CAAq1C,wMAAwM,oCAAoC,6J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv/C;AAEzB;AACC;AACF;AACwB;AAET;AAEN;AAEL;AACI;AACoB;AACN;AAClB;AACZ;AACe;AACmB;AAO1E;IAA0C,wCAAS;IAa/C,8BACI,QAAkB,EAClB,UAAsB,EACtB,iBAAoC,EACpC,eAAgC,EAChC,gBAAkC,EAClC,QAAkB;QANtB,YAQI,kBAAM,QAAQ,CAAC,SAOlB;QA1BM,kBAAY,GAAmC,IAAI,0DAAY,EAAoB,CAAC;QAGpF,8BAAwB,GAAuB,4EAAkB,CAAC,YAAY,CAAC;QAiBlF,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,KAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,KAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,KAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;QAChD,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;IAC9B,CAAC;IAEM,uCAAQ,GAAf;QACI,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAEM,2CAAY,GAAnB,UAAoB,cAAqB;QACrC,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAEM,2CAAY,GAAnB,UAAoB,cAAqB;QACrC,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC9B,CAAC;IAEM,0CAAW,GAAlB;QACI,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,wFAAgB,CAAC,iBAAiB,CAAC,CAAC;QACxE,iBAAM,WAAW,WAAE,CAAC;IACxB,CAAC;IAEO,0CAAW,GAAnB;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE;YACrD,CAAC,CAAC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE;YAC5C,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,oEAAgB,EAAE,CAAC,CAAC;IAClD,CAAC;IAEO,6CAAc,GAAtB;QAAA,iBAQC;QAPG,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,EAAE;YAC7C,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,YAAY,IAAI,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAjD,CAAiD,CAAC,CAAC;YAC5G,qBAAqB;YACrB,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,YAAY;gBACpC,CAAC,CAAC,+DAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;gBACpD,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;SAChD;IACL,CAAC;IAEO,wDAAyB,GAAjC,UAAkC,eAAgC;QAC9D,IAAI,CAAC,0BAA0B,GAAG,IAAI,oEAAqB,CACvD,eAAe,EACf,iEAAe,CAAC,iBAAiB,CACpC,CAAC;IACN,CAAC;IAEO,6CAAc,GAAtB;QAAA,iBAMC;QALG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,MAAkB;YACzE,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAC7B,KAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,kCAAkC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,8CAAe,GAAvB,UAAwB,UAAsB;QAC1C,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QACxC,IAAI,CAAC,gCAAgC,EAAE,CAAC;IAC5C,CAAC;IAEO,qDAAsB,GAA9B,UAA+B,UAAsB;QAArD,iBA+CC;;QA9CG,8DAA8D;QAC9D,uDAAuD;QACvD,IAAM,MAAM,GAAG;YACX,UAAU;YACV,WAAW;YACX,aAAa;YACb,YAAY;YACZ,iBAAiB;YACjB,WAAW;YACX,eAAe;YACf,aAAa;YACb,cAAc;YACd,eAAe;YACf,UAAU;SACb,CAAC;QAEF,IAAM,qBAAqB;YACvB,GAAC,iEAAc,CAAC,KAAK,IAAG,EAAE;YAC1B,GAAC,iEAAc,CAAC,MAAM,IAAG,EAAE;YAC3B,GAAC,iEAAc,CAAC,WAAW,IAAG,EAAE;YAChC,GAAC,iEAAc,CAAC,UAAU,IAAG,EAAE;YAC/B,GAAC,iEAAc,CAAC,YAAY,IAAG,EAAE;YACjC,GAAC,iEAAc,CAAC,aAAa,IAAG,GAAG;YACnC,GAAC,iEAAc,CAAC,KAAK,IAAG,EAAE;YAC1B,GAAC,iEAAc,CAAC,eAAe,IAAG,EAAE;YACpC,GAAC,iEAAc,CAAC,gBAAgB,IAAG,GAAG;YACtC,GAAC,iEAAc,CAAC,OAAO,IAAG,EAAE;YAC5B,GAAC,iEAAc,CAAC,MAAM,IAAG,EAAE;eAC9B,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAC,QAAgB;YAC7C,IAAI,QAAQ,KAAK,OAAO,EAAE;gBACtB,IAAM,mBAAmB,GAAG,IAAI,uFAAmB,EAAE,CAAC;gBACtD,mBAAmB,CAAC,MAAM,GAAG,KAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC,CAAC;gBACzE,mBAAmB,CAAC,IAAI,GAAG,QAAQ,CAAC;gBACpC,mBAAmB,CAAC,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACjD,mBAAmB,CAAC,WAAW,GAAG,qBAAqB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBAClF,mBAAmB,CAAC,oBAAoB,GAAG,KAAI,CAAC,mBAAmB,CAAC;gBACpE,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAClD;QACL,CAAC,CAAC,CAAC;QAEH,IAAM,mBAAmB,GAAG,6DAAS,CAAC,sBAAsB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAC7E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC1E,CAAC;IAEO,2DAA4B,GAApC,UAAqC,UAAkB;QACnD,OAAO,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;IAC5D,CAAC;IAEO,kDAAmB,GAA3B,UAA4B,KAA2B;QACnD,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACpC,CAAC;IAEO,gDAAiB,GAAzB,UAA0B,KAA2B;QACjD,IAAI,CAAC,OAAO,CAAC,sBAAsB,GAAG,KAAK,CAAC,EAAE,CAAC;QAC/C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAEO,+DAAgC,GAAxC;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE;YACtC,IAAI,CAAC,OAAO,CAAC,sBAAsB,GAAG,iEAAc,CAAC,KAAK,CAAC;SAC9D;IACL,CAAC;IAEO,iDAAkB,GAA1B;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,uDAAwB,GAAhC;QACI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAEO,+CAAgB,GAAxB;QAAA,iBAMC;QALG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAC1B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,wFAAgB,CAAC,iBAAiB,EAAE;YACjE,KAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAzKD;QADC,4DAAM,EAAE;kCACY,0DAAY;8DAA0D;IAFlF,oBAAoB;QALhC,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;;;SAG3B,CAAC;yCAegB,sDAAQ;YACN,sEAAU;YACH,sEAAiB;YACnB,8DAAe;YACd,qEAAgB;YACxB,oDAAQ;OAnBb,oBAAoB,CA4KhC;IAAD,2BAAC;CAAA,CA5KyC,8DAAS,GA4KlD;AA5KgC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBU;AAEwD;AAInG;IAGI,2BAAY,WAAwB;QAChC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IACpC,CAAC;IAES,kDAAsB,GAAhC,UAAiC,eAAiC;QAC9D,OAAO,IAAI,iEAAiB,CAAC;YACzB,gBAAgB,EAAE,8DAAc,CAAC,YAAY;YAC7C,aAAa,EAAE,gEAAgB,CAAC,QAAQ;YACxC,cAAc,EAAE,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC;SAC5D,CAAC,CAAC;IACP,CAAC;IAEO,+CAAmB,GAA3B,UAA4B,eAAiC;QACzD,OAAO,IAAI,iBAAiB,CAAC;YACzB,MAAM,EAAE,eAAe,CAAC,YAAY;YACpC,MAAM,EAAE,eAAe,CAAC,YAAY;SACvC,CAAC,CAAC;IACP,CAAC;IAEM,0CAAc,GAArB,UAAsB,eAAiC;QACnD,IAAM,aAAa,GAAsB,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC;QACtF,OAAO,IAAI,CAAC,YAAY;aACnB,OAAO,CAAC,aAAa,CAAC;aACtB,IAAI,CAAC,kBAAQ;YACV,OAAO,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAE,QAAQ,CAAC,eAA8B,CAAC,CAAC,CAAC,EAAE,CAAC;QACpF,CAAC,CAAC;aACD,KAAK,CAAC,kBAAQ;YACX,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACX,CAAC;IAhCQ,iBAAiB;QAD7B,gEAAU,EAAE;yCAIgB,2DAAW;OAH3B,iBAAiB,CAiC7B;IAAD,wBAAC;CAAA;AAjC6B;AAmC9B;IAKI,2BAAY,EAAyF;YAAvF,kBAAM,EAAE,kBAAM,EAAE,8BAAY;QAJ1B,UAAK,GAAW,uEAAuE,CAAC;QAKpG,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,YAAY,IAAI,IAAI,IAAI,EAAE,CAAC;IACnD,CAAC;IACL,wBAAC;AAAD,CAAC;AAED;IAAA;IAYA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACjED;AAAA;AAAA;IAAA;IAKA,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACP;AACH;;;;;;;;;;;;;ACF5B;AAAA;AAAA;IAAA;IAMA,CAAC;IAAD,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACND;AAAA;AAAO,IAAM,gBAAgB,GAAG;IAC5B,iBAAiB,EAAE,qBAAqB;CAC3C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACF8C;AAEsC;AAE7B;AAEI;AAErB;AAGxC;IAAuD,yCAA4B;IAO/E,+BACI,QAAkB,EAClB,sBAA8C,EAC9C,sBAA8C;IAC9C,qEAAqE;IACrE,gBAA4B;QALhC,YAOI,kBAAM,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,CAAC,SAKlE;QAJG,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,mDAAQ,CAAC,CAAC;QACxC,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,KAAI,CAAC,WAAW,GAAG,IAAI,wDAAgB,EAAE,CAAC;QAC1C,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;;IAChC,CAAC;IAGD,sBAAW,yCAAM;aAAjB,UAAkB,KAAuB;YADzC,iBAOC;YALG,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,UAAU,CAAC;gBACP,KAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;QACP,CAAC;;;OAAA;IAEM,8CAAc,GAArB;QACI,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC;IACvF,CAAC;IAEM,4CAAY,GAAnB,UAAoB,MAAW;QAC3B,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7B,iBAAM,YAAY,YAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAEM,kDAAkB,GAAzB,UAA0B,MAAW;QACjC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7B,iBAAM,kBAAkB,YAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAEM,iDAAiB,GAAxB;QACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAES,mDAAmB,GAA7B;QACI,IAAI,IAAI,CAAC,mBAAmB,EAAE,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,EAAE;YACjG,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7D;IACL,CAAC;IAES,gDAAgB,GAA1B;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAES,8DAA8B,GAAxC;QACF,iBAAM,8BAA8B,WAAE,CAAC;QACjC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvD,CAAC;IAEM,+CAAe,GAAzB;QACO,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1D,CAAC;IAES,4DAA4B,GAAtC;QACI,oDAAoD;QACpD,uBAAuB;IAC3B,CAAC;IAES,+CAAe,GAAzB;QACI,OAAO,sEAAiB,CAAC,SAAS,CAAC;IACvC,CAAC;IAED,kEAAkE;IAExD,4CAAY,GAAtB;QACI,OAAO,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;IACvF,CAAC;IAEO,gDAAgB,GAAxB,UAAyB,KAAc;QACnC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;IACtC,CAAC;IAEO,0DAA0B,GAAlC,UAAmC,KAAuB;QACtD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,CAAC;IAEO,2DAA2B,GAAnC,UAAoC,KAAuB;QACvD,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC,sBAAsB,CAAC;IAC9D,CAAC;IAEO,sDAAsB,GAA9B,UAA+B,KAAuB;QAClD,OAAO,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,qBAAqB,IAAI,KAAK,CAAC,sBAAsB,CAAC;IACpG,CAAC;IAED,wIAAwI;IACxI,uHAAuH;IAC/G,mDAAmB,GAA3B,UAA4B,cAAsB;QAC9C,OAAO,cAAc,IAAI,sDAAc,CAAC,OAAO,CAAC;IACpD,CAAC;IAjFD;QADC,2DAAK,EAAE;kCACiB,wDAAgB;yCAAhB,wDAAgB;uDAMxC;IA4EL,4BAAC;CAAA,CAxGsD,kFAAyB,GAwG/E;AAxG0C;;;;;;;;;;;;;ACX3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACF;AACL;AACA;AACA;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLW;AAE2C;AACN;AAIjB;AAClB;AACU;AAGjE;IAAmD,iDAAoB;IACnE,uCAAY,QAAkB;eAC1B,kBAAM,QAAQ,CAAC;IACnB,CAAC;IAEM,gDAAQ,GAAf,UAAgB,SAAc;QAC1B,IAAM,kBAAkB,GAAG,SAAkC,CAAC;QAE9D,IAAM,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,CAAC;QAC7E,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,sFAAsB,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;QACpF,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,oEAAW,CAAC,SAAS,CAAC,CAAC;IAChE,CAAC;IAES,gEAAwB,GAAlC,UAAmC,SAAc;QAC7C,OAAO,6GAAyB,CAAC,qBAAqB,CAAC,SAAS,EAAE,uGAAsB,CAAC,KAAK,CAAC,CAAC;IACpG,CAAC;IAfQ,6BAA6B;QADzC,gEAAU,EAAE;yCAEa,sDAAQ;OADrB,6BAA6B,CAgBzC;IAAD,oCAAC;CAAA,CAhBkD,6EAAoB,GAgBtE;AAhByC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZW;AAE2C;AACN;AAInC;AACU;AACQ;AAGzE;IAAiD,+CAAoB;IACjE,qCAAY,QAAkB;eAC1B,kBAAM,QAAQ,CAAC;IACnB,CAAC;IAEM,8CAAQ,GAAf,UAAgB,SAAc;QAC1B,IAAM,aAAa,GAAG,SAA6B,CAAC;QAEpD,IAAM,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;QACxE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,sFAAsB,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;QACpF,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,oEAAW,CAAC,SAAS,CAAC,CAAC;IAChE,CAAC;IAES,8DAAwB,GAAlC,UAAmC,SAAc;QAC7C,OAAO,6GAAyB,CAAC,qBAAqB,CAAC,SAAS,EAAE,uGAAsB,CAAC,KAAK,CAAC,CAAC;IACpG,CAAC;IAfQ,2BAA2B;QADvC,gEAAU,EAAE;yCAEa,sDAAQ;OADrB,2BAA2B,CAgBvC;IAAD,kCAAC;CAAA,CAhBgD,6EAAoB,GAgBpE;AAhBuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZa;AAEZ;AAES;AACE;AAE4C;AACN;AAIjB;AACR;AACA;AAGjE;IAA0C,wCAAoB;IAI1D,8BAAY,QAAkB,EAAE,sBAA8C,EAAE,MAAc;QAA9F,YACI,kBAAM,QAAQ,CAAC,SAGlB;QAFG,KAAI,CAAC,uBAAuB,GAAG,sBAAsB,CAAC;QACtD,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;;IAC1B,CAAC;IAEM,uCAAQ,GAAf,UAAgB,IAAS;QACrB,IAAM,SAAS,GAAG,IAAsB,CAAC;QACzC,IAAM,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,sFAAsB,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QACnF,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,sDAAW,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,qBAAqB,CAAC,+DAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;IAC/E,CAAC;IAES,uDAAwB,GAAlC,UAAmC,IAAS;QACxC,OAAO,6GAAyB,CAAC,qBAAqB,CAAC,IAAI,EAAE,uGAAsB,CAAC,GAAG,CAAC,CAAC;IAC7F,CAAC;IAEO,oDAAqB,GAA7B,UAA8B,cAAsB;QAApD,iBAIC;QAHG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,gBAAM;YAC3D,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC;IA1BQ,oBAAoB;QADhC,gEAAU,EAAE;yCAKa,sDAAQ,EAA0B,4EAAsB,EAAU,wDAAM;OAJrF,oBAAoB,CA2BhC;IAAD,2BAAC;CAAA,CA3ByC,6EAAoB,GA2B7D;AA3BgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBoB;AAEZ;AACuD;AACN;AAGzB;AACQ;AAGzE;IAA8C,4CAAoB;IAC9D,kCAAY,QAAkB;eAC1B,kBAAM,QAAQ,CAAC;IACnB,CAAC;IAEM,2CAAQ,GAAf,UAAgB,SAAc;QAC1B,IAAM,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;QACpE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,sFAAsB,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC;QACtF,IAAI,CAAC,oBAAoB,CAAC,SAA6B,EAAE,sDAAW,CAAC,YAAY,CAAC,CAAC;IACvF,CAAC;IAES,2DAAwB,GAAlC,UAAmC,SAAc;QAC7C,OAAO,6GAAyB,CAAC,qBAAqB,CAAC,SAAS,EAAE,uGAAsB,CAAC,YAAY,CAAC,CAAC;IAC3G,CAAC;IAbQ,wBAAwB;QADpC,gEAAU,EAAE;yCAEa,sDAAQ;OADrB,wBAAwB,CAcpC;IAAD,+BAAC;CAAA,CAd6C,6EAAoB,GAcjE;AAdoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXgB;AAE2C;AACN;AAEzB;AACQ;AAIzE;IAA4C,0CAAoB;IAC5D,gCAAY,QAAkB;eAC1B,kBAAM,QAAQ,CAAC;IACnB,CAAC;IAEM,yCAAQ,GAAf,UAAgB,SAAc;QAC1B,IAAM,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;QACpE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,sFAAsB,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;QACpF,IAAI,CAAC,oBAAoB,CAAC,SAAkC,CAAC,CAAC;IAClE,CAAC;IAES,yDAAwB,GAAlC,UAAmC,SAAc;QAC7C,OAAO,6GAAyB,CAAC,qBAAqB,CAAC,SAAS,EAAE,uGAAsB,CAAC,eAAe,CAAC,CAAC;IAC9G,CAAC;IAbQ,sBAAsB;QADlC,gEAAU,EAAE;yCAEa,sDAAQ;OADrB,sBAAsB,CAclC;IAAD,6BAAC;CAAA,CAd2C,6EAAoB,GAc/D;AAdkC;;;;;;;;;;;;;ACRnC;AAAA;AAAA;AAAA;AAAA;AAA0E;AAGxB;AAEe;AAGjE;IAKI,8BAAY,QAAkB;QAC1B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,oEAAgB,CAAC,CAAC;QACvD,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,GAAG,CAAC,8EAAkB,CAAC,CAAC;IAC/D,CAAC;IAMS,mDAAoB,GAA9B,UAA+B,SAAc,EAAE,SAAkB;QAC7D,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,+DAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IACpH,CAAC;IACL,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BmD;AAIkB;AACZ;AACG;AACQ;AAQrE;IAAoD,kDAA4C;IAC5F,wCACI,QAAkB,EAClB,sBAA8C,EAC9C,sBAA8C,EAC9C,6BAA4D;eAE5D,kBAAM,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,6BAA6B,CAAC;IAClG,CAAC;IAES,qDAAY,GAAtB,UAAuB,QAA+B,EAAE,QAA+B;QACnF,OAAO,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC;IAC/C,CAAC;IAZQ,8BAA8B;QAN1C,+DAAS,CAAC;YACP,QAAQ,EAAE,0BAA0B;;;YAGpC,SAAS,EAAE,CAAC,wEAA6B,CAAC;SAC7C,CAAC;yCAGgB,sDAAQ;YACM,iFAAsB;YACtB,kEAAsB;YACf,wEAA6B;OALvD,8BAA8B,CAa1C;IAAD,qCAAC;CAAA,CAbmD,gFAAqB,GAaxE;AAb0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfS;AAEkB;AACZ;AACQ;AACG;AAQrE;IAAoD,kDAA0B;IAC1E,wCACI,QAAkB,EAClB,sBAA8C,EAC9C,sBAA8C;QAE9C,kEAAkE;eAClE,kBAAM,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,CAAC;IACnE,CAAC;IAED,iCAAiC;IACvB,qDAAY,GAAtB,UAAuB,QAAa,EAAE,QAAa;QAC/C,OAAO,KAAK,CAAC;IACjB,CAAC;IAbQ,8BAA8B;QAN1C,+DAAS,CAAC;YACP,QAAQ,EAAE,0BAA0B;;;YAGpC,SAAS,EAAE,CAAC,6EAAoB,CAAC;SACpC,CAAC;yCAGgB,sDAAQ;YACM,iFAAsB;YACtB,kEAAsB;OAJzC,8BAA8B,CAc1C;IAAD,qCAAC;CAAA,CAdmD,gFAAqB,GAcxE;AAd0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbS;AAIkB;AACX;AACD;AACW;AAQrE;IAAkD,gDAAuC;IACrF,sCACI,QAAkB,EAClB,sBAA8C,EAC9C,sBAA8C,EAC9C,2BAAwD;eAExD,kBAAM,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,2BAA2B,CAAC;IAChG,CAAC;IAES,mDAAY,GAAtB,UAAuB,QAA0B,EAAE,QAA0B;QACzE,OAAO,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC;IAC/C,CAAC;IAZQ,4BAA4B;QANxC,+DAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;;;YAGlC,SAAS,EAAE,CAAC,sEAA2B,CAAC;SAC3C,CAAC;yCAGgB,sDAAQ;YACM,iFAAsB;YACtB,kEAAsB;YACjB,sEAA2B;OALnD,4BAA4B,CAaxC;IAAD,mCAAC;CAAA,CAbiD,gFAAqB,GAatE;AAbwC;;;;;;;;;;;;;ACfzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACA;AACJ;AAClB;AACgB;AACM;;;;;;;;;;;;;;;;;;;;;;;;;;ACLzB;AAEwD;AAGnG;IAEI,gCAAY,WAAwB;QAChC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IACpC,CAAC;IAEM,uCAAM,GAAb,UAAc,cAAsB;QAChC,IAAM,aAAa,GAAsB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;QAC/E,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,kBAAQ;YAC5D,OAAO,QAAQ,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAE,QAAQ,CAAC,eAA0B,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,iDAAgB,GAAxB,UAAyB,cAAsB;QAC3C,OAAO,IAAI,iEAAiB,CAAC;YACzB,gBAAgB,EAAE,8DAAc,CAAC,4BAA4B;YAC7D,aAAa,EAAE,gEAAgB,CAAC,qBAAqB;YACrD,cAAc,EAAE,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC;SAC3D,CAAC,CAAC;IACP,CAAC;IAEO,oDAAmB,GAA3B,UAA4B,cAAsB;QAC9C,IAAM,OAAO,GAAG,IAAI,4BAA4B,EAAE,CAAC;QACnD,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC;QACxC,OAAO,OAAO,CAAC;IACnB,CAAC;IAzBQ,sBAAsB;QADlC,gEAAU,EAAE;yCAGgB,2DAAW;OAF3B,sBAAsB,CA0BlC;IAAD,6BAAC;CAAA;AA1BkC;AA4BnC;IAAA;QACoB,UAAK,GAAW,kFAAkF,CAAC;IAEvH,CAAC;IAAD,mCAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCmD;AAIkB;AACZ;AACN;AACiB;AACJ;AAQjE;IAA0C,wCAAqC;IAC3E,8BACI,QAAkB,EAClB,sBAA8C,EAC9C,sBAA8C,EAC9C,oBAA0C;eAE1C,kBAAM,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,oBAAoB,CAAC;IACzF,CAAC;IAES,2CAAY,GAAtB,UAAuB,QAAwB,EAAE,QAAwB;QACrE,OAAO,QAAQ,CAAC,wBAAwB,KAAK,QAAQ,CAAC,wBAAwB,CAAC;IACnF,CAAC;IAZQ,oBAAoB;QANhC,+DAAS,CAAC;YACP,QAAQ,EAAE,eAAe;;;YAGzB,SAAS,EAAE,CAAC,4EAAsB,EAAE,+DAAoB,CAAC;SAC5D,CAAC;yCAGgB,sDAAQ;YACM,iFAAsB;YACtB,kEAAsB;YACxB,+DAAoB;OALrC,oBAAoB,CAahC;IAAD,2BAAC;CAAA,CAbyC,gFAAqB,GAa9D;AAbgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBmB;AAIkB;AACZ;AACF;AACa;AAQrE;IAAkD,gDAAuC;IACrF,sCACI,QAAkB,EAClB,sBAA8C,EAC9C,sBAA8C,EAC9C,wBAAkD;eAElD,kBAAM,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,wBAAwB,CAAC;IAC7F,CAAC;IAES,mDAAY,GAAtB,UAAuB,QAA0B,EAAE,QAA0B;QACzE,OAAO,QAAQ,CAAC,oBAAoB,KAAK,QAAQ,CAAC,oBAAoB,CAAC;IAC3E,CAAC;IAZQ,4BAA4B;QANxC,+DAAS,CAAC;YACP,QAAQ,EAAE,uBAAuB;;;YAGjC,SAAS,EAAE,CAAC,mEAAwB,CAAC;SACxC,CAAC;yCAGgB,sDAAQ;YACM,iFAAsB;YACtB,kEAAsB;YACpB,mEAAwB;OAL7C,4BAA4B,CAaxC;IAAD,mCAAC;CAAA,CAbiD,gFAAqB,GAatE;AAbwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfW;AAIkB;AACZ;AACJ;AAEe;AAQrE;IAAoD,kDAA4C;IAC5F,wCACI,QAAkB,EAClB,sBAA8C,EAC9C,sBAA8C,EAC9C,sBAA8C;eAE9C,kBAAM,QAAQ,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,sBAAsB,CAAC;IAC3F,CAAC;IAES,qDAAY,GAAtB,UAAuB,QAA+B,EAAE,QAA+B;QACnF,OAAO,QAAQ,CAAC,eAAe,KAAK,QAAQ,CAAC,eAAe,CAAC;IACjE,CAAC;IAZQ,8BAA8B;QAN1C,+DAAS,CAAC;YACP,QAAQ,EAAE,0BAA0B;;;YAGpC,SAAS,EAAE,CAAC,iEAAsB,CAAC;SACtC,CAAC;yCAGgB,sDAAQ;YACM,iFAAsB;YACtB,kEAAsB;YACtB,iEAAsB;OALzC,8BAA8B,CAa1C;IAAD,qCAAC;CAAA,CAbmD,gFAAqB,GAaxE;AAb0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AAE0E;AAC9D;AACjB;AAEoB;AAEY;AAE3B;AACkB;AACgC;AACnB;AAE1E,IAAK,cAqBJ;AArBD,WAAK,cAAc;IACf,yCAAuB;IACvB,+CAA6B;IAC7B,qDAAmC;IACnC,2CAAyB;IACzB,iCAAe;IACf,iCAAe;IACf,mDAAiC;IACjC,qDAAmC;IACnC,+CAA6B;IAC7B,+DAA6C;IAC7C,6CAA2B;IAC3B,6CAA2B;IAC3B,qDAAmC;IACnC,mDAAiC;IACjC,qCAAmB;IACnB,iDAA+B;IAC/B,yDAAuC;IACvC,qDAAmC;IACnC,+CAA6B;IAC7B,+DAA6C;AACjD,CAAC,EArBI,cAAc,KAAd,cAAc,QAqBlB;AAGD;IAA4C,0CAAsB;IAK9D,gCACI,gBAAkC,EAClC,oBAA0C,EAC1C,gBAAkC,EAClC,IAAU;QAJd,YAMI,iBAAO,SAKV;QAJG,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,KAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;QAClD,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACrB,CAAC;IAEM,sCAAK,GAAZ,UAAa,cAAsB;QAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,QAAQ,cAAc,EAAE;YACpB,KAAK,sDAAc,CAAC,MAAM,CAAC,CAAC;gBACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,MAAM;aACT;YACD,KAAK,sDAAc,CAAC,UAAU,CAAC,CAAC;gBAC5B,IAAI,CAAC,4BAA4B,EAAE,CAAC;gBACpC,MAAM;aACT;YACD,KAAK,sDAAc,CAAC,YAAY,CAAC;YACjC,KAAK,sDAAc,CAAC,eAAe,CAAC;YACpC,KAAK,sDAAc,CAAC,gBAAgB,CAAC,CAAC;gBAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,MAAM;aACT;YACD,KAAK,sDAAc,CAAC,MAAM,CAAC,CAAC;gBACxB,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,MAAM;aACT;YACD,KAAK,sDAAc,CAAC,aAAa,CAAC,CAAC;gBAC/B,IAAI,CAAC,2BAA2B,EAAE,CAAC;gBACnC,MAAM;aACT;YACD,KAAK,sDAAc,CAAC,KAAK,CAAC,CAAC;gBACvB,IAAI,CAAC,2BAA2B,EAAE,CAAC;gBACnC,MAAM;aACT;YACD,KAAK,sDAAc,CAAC,OAAO,CAAC,CAAC;gBACzB,IAAI,CAAC,yBAAyB,EAAE,CAAC;gBACjC,MAAM;aACT;YACD,KAAK,sDAAc,CAAC,WAAW,CAAC,CAAC;gBAC7B,IAAI,CAAC,6BAA6B,EAAE,CAAC;gBACrC,MAAM;aACT;YACD,KAAK,sDAAc,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,CAAC;gBACL,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,MAAM;aACT;SACJ;QACD,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEO,gDAAe,GAAvB;QACI,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,yEAAkB,CAAC,OAAO;YACxC,KAAK,EAAE,EAAE;YACT,cAAc,EAAE,IAAI;SACvB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,EAAE,kCAAkC,EAAE,CAAC;YACtF,KAAK,EAAE,cAAc,CAAC,SAAS;YAC/B,KAAK,EAAE,EAAE;YACT,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB;YACxD,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,IAAI,EAAE,mFAAc,CAAC,SAAS;SACjC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,mCAAmC,EAAE,CAAC;YACnF,KAAK,EAAE,cAAc,CAAC,YAAY;YAClC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,kCAAkC,EAAE,CAAC;YACrF,KAAK,EAAE,cAAc,CAAC,eAAe;YACrC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,+BAA+B,EAAE,CAAC;YAC/E,KAAK,EAAE,cAAc,CAAC,UAAU;YAChC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,iCAAiC,EAAE,CAAC;YAClF,KAAK,EAAE,cAAc,CAAC,KAAK;YAC3B,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;IACP,CAAC;IAEO,iDAAgB,GAAxB;QACI,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,yEAAkB,CAAC,OAAO;YACxC,KAAK,EAAE,EAAE;YACT,cAAc,EAAE,IAAI;SACvB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,EAAE,kCAAkC,EAAE,CAAC;YACtF,KAAK,EAAE,cAAc,CAAC,SAAS;YAC/B,KAAK,EAAE,EAAE;YACT,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB;YACxD,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,IAAI,EAAE,mFAAc,CAAC,SAAS;SACjC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,mCAAmC,EAAE,CAAC;YACnF,KAAK,EAAE,cAAc,CAAC,YAAY;YAClC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,kCAAkC,EAAE,CAAC;YACrF,KAAK,EAAE,cAAc,CAAC,eAAe;YACrC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE,EAAE,oCAAoC,EAAE,CAAC;YACzF,KAAK,EAAE,cAAc,CAAC,cAAc;YACpC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,iCAAiC,EAAE,CAAC;YAClF,KAAK,EAAE,cAAc,CAAC,KAAK;YAC3B,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;IACP,CAAC;IAEO,6DAA4B,GAApC;QACI,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,mCAAmC,EAAE,CAAC;YACnF,KAAK,EAAE,cAAc,CAAC,YAAY;YAClC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,IAAI,EAAE,mFAAc,CAAC,SAAS;SACjC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,kCAAkC,EAAE,CAAC;YACrF,KAAK,EAAE,cAAc,CAAC,eAAe;YACrC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC;gBAClB,KAAK,EAAE,qBAAqB;gBAC5B,EAAE,EAAE,gDAAgD;aACvD,CAAC;YACF,KAAK,EAAE,cAAc,CAAC,eAAe;YACrC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;IACP,CAAC;IAED,mEAAmE;IAC3D,yDAAwB,GAAhC;QAAA,iBAiCC;QAhCG,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,qBAAqB,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAC/D,KAAK,EAAE,cAAc,CAAC,YAAY;YAClC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,cAAc,EAAE,UAAC,MAAM,IAAU,YAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,EAAE,OAAO,CAAC,EAAzD,CAAyD;YAC1F,IAAI,EAAE,mFAAc,CAAC,SAAS;SACjC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,mCAAmC,EAAE,CAAC;YACnF,KAAK,EAAE,cAAc,CAAC,YAAY;YAClC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,kCAAkC,EAAE,CAAC;YACrF,KAAK,EAAE,cAAc,CAAC,eAAe;YACrC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,EAAE,EAAE,0CAA0C,EAAE,CAAC;YACpG,KAAK,EAAE,cAAc,CAAC,eAAe;YACrC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE,sCAAsC,EAAE,CAAC;YAC5F,KAAK,EAAE,cAAc,CAAC,oBAAoB;YAC1C,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;IACP,CAAC;IAEO,qDAAoB,GAA5B;QAAA,iBA2BC;QA1BG,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACzD,KAAK,EAAE,cAAc,CAAC,WAAW;YACjC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,cAAc,EAAE,UAAC,MAAM,IAAU,YAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,EAAE,OAAO,CAAC,EAAzD,CAAyD;YAC1F,IAAI,EAAE,mFAAc,CAAC,SAAS;SACjC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,mCAAmC,EAAE,CAAC;YACnF,KAAK,EAAE,cAAc,CAAC,YAAY;YAClC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,EAAE,yCAAyC,EAAE,CAAC;YACjG,KAAK,EAAE,cAAc,CAAC,WAAW;YACjC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE,EAAE,uCAAuC,EAAE,CAAC;YAC5F,KAAK,EAAE,cAAc,CAAC,eAAe;YACrC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;IACP,CAAC;IAEO,4DAA2B,GAAnC;QACI,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,mCAAmC,EAAE,CAAC;YACnF,KAAK,EAAE,cAAc,CAAC,YAAY;YAClC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,IAAI,EAAE,mFAAc,CAAC,SAAS;SACjC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,kCAAkC,EAAE,CAAC;YACrF,KAAK,EAAE,cAAc,CAAC,aAAa;YACnC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,EAAE,uCAAuC,EAAE,CAAC;YAC/F,KAAK,EAAE,cAAc,CAAC,iBAAiB;YACvC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE,qCAAqC,EAAE,CAAC;YAC3F,KAAK,EAAE,cAAc,CAAC,eAAe;YACrC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;IACP,CAAC;IAEO,4DAA2B,GAAnC;QACI,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,EAAE,kCAAkC,EAAE,CAAC;YACtF,KAAK,EAAE,cAAc,CAAC,SAAS;YAC/B,KAAK,EAAE,EAAE;YACT,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB;YACxD,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,IAAI,EAAE,mFAAc,CAAC,SAAS;SACjC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,mCAAmC,EAAE,CAAC;YACnF,KAAK,EAAE,cAAc,CAAC,YAAY;YAClC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,kCAAkC,EAAE,CAAC;YACrF,KAAK,EAAE,cAAc,CAAC,eAAe;YACrC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,iCAAiC,EAAE,CAAC;YAClF,KAAK,EAAE,cAAc,CAAC,KAAK;YAC3B,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;IACP,CAAC;IAEO,0DAAyB,GAAjC;QACI,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,EAAE;YACd,KAAK,EAAE,cAAc,CAAC,KAAK;YAC3B,KAAK,EAAE,EAAE;YACT,YAAY,EAAE,yEAAkB,CAAC,qBAAqB;YACtD,cAAc,EAAE,IAAI;SACvB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,wCAAwC,EAAE,CAAC;YACtF,KAAK,EAAE,cAAc,CAAC,cAAc;YACpC,KAAK,EAAE,EAAE;YACT,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB;YACxD,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,IAAI,EAAE,mFAAc,CAAC,SAAS;SACjC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,mCAAmC,EAAE,CAAC;YACnF,KAAK,EAAE,cAAc,CAAC,YAAY;YAClC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,gCAAgC,EAAE,CAAC;YAC9E,KAAK,EAAE,cAAc,CAAC,OAAO;YAC7B,KAAK,EAAE,EAAE;YACT,cAAc,EAAE,IAAI;SACvB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,EAAE;YACd,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,CAAC;YACR,YAAY,EAAE,yEAAkB,CAAC,2BAA2B;YAC5D,aAAa,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC;YACpD,cAAc,EAAE,IAAI;SACvB,CAAC,CAAC;IACP,CAAC;IAEO,sDAAqB,GAA7B,UAA8B,MAAW;QACrC,IAAI,MAAM,CAAC,IAAI,EAAE;YACb,IAAM,WAAW,GAAgB,MAAM,CAAC,IAAI,CAAC;YAC7C,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;YAC5D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,uFAAgB,CAAC,iBAAiB,CAAC,CAAC;SACtE;IACL,CAAC;IAEO,8DAA6B,GAArC;QACI,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,EAAE,EAAE,uCAAuC,EAAE,CAAC;YAC9F,KAAK,EAAE,cAAc,CAAC,YAAY;YAClC,KAAK,EAAE,EAAE;YACT,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,iBAAiB;YACxD,MAAM,EAAE,yFAAgC,CAAC,UAAU;YACnD,IAAI,EAAE,mFAAc,CAAC,SAAS;SACjC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,mCAAmC,EAAE,CAAC;YACnF,KAAK,EAAE,cAAc,CAAC,YAAY;YAClC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,EAAE,yCAAyC,EAAE,CAAC;YACjG,KAAK,EAAE,cAAc,CAAC,WAAW;YACjC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,EAAE,EAAE,0CAA0C,EAAE,CAAC;YACpG,KAAK,EAAE,cAAc,CAAC,eAAe;YACrC,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE,EAAE,uCAAuC,EAAE,CAAC;YAC5F,KAAK,EAAE,cAAc,CAAC,oBAAoB;YAC1C,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC;YACX,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE,sCAAsC,EAAE,CAAC;YACjG,KAAK,EAAE,cAAc,CAAC,oBAAoB;YAC1C,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,yFAAgC,CAAC,UAAU;SACtD,CAAC,CAAC;IACP,CAAC;IA3XQ,sBAAsB;QADlC,gEAAU,EAAE;yCAOa,uEAAgB;YACZ,0GAAoB;YACxB,oEAAgB;YAC5B,mDAAI;OATL,sBAAsB,CA4XlC;IAAD,6BAAC;CAAA,CA5X2C,+EAAsB,GA4XjE;AA5XkC;;;;;;;;;;;;;ACvCnC;AAAA;AAAA;AAAA;AAA0C;AACA;AAE1C;IAAA;IAwBA,CAAC;IAvBiB,0BAAO,GAArB,UAAsB,MAAW;QAC7B,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;YACtC,IAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;YACzB,IACI,uDAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;gBAClD,uDAAU,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,EAC3D;gBACE,OAAO,oDAAoD,CAAC;aAC/D;SACJ;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IAEa,wCAAqB,GAAnC,UAAoC,MAAW;QAC3C,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,MAAM,EAAE;YACxD,OAAO,oDAAoD,CAAC;SAC/D;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IAEa,8CAA2B,GAAzC,UAA0C,MAAW;QACjD,OAAO,mDAAmD,CAAC;IAC/D,CAAC;IACL,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3B0C;AAEwD;AAInG;IAEI,8BAAY,WAAwB;QAChC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IACpC,CAAC;IAEM,kDAAmB,GAA1B,UAA2B,WAAwB;QAC/C,IAAM,aAAa,GAAsB,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAC5E,OAAO,IAAI,CAAC,YAAY;aACnB,UAAU,CAAC,aAAa,CAAC;aACzB,IAAI,CAAC,kBAAQ;YACV,OAAO,QAAQ,CAAC,eAAe,CAAC;QACpC,CAAC,CAAC;IACV,CAAC;IAEO,+CAAgB,GAAxB,UAAyB,WAAwB;QAC7C,OAAO,IAAI,iEAAiB,CAAC;YACzB,gBAAgB,EAAE,8DAAc,CAAC,oBAAoB;YACrD,aAAa,EAAE,gEAAgB,CAAC,IAAI;YACpC,cAAc,EAAE,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC;SACxD,CAAC,CAAC;IACP,CAAC;IAEO,kDAAmB,GAA3B,UAA4B,WAAwB;QAChD,IAAM,OAAO,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAC3C,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;QAClC,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC;QAC/B,OAAO,OAAO,CAAC;IACnB,CAAC;IA5BQ,oBAAoB;QADhC,gEAAU,EAAE;yCAGgB,2DAAW;OAF3B,oBAAoB,CA6BhC;IAAD,2BAAC;CAAA;AA7BgC;AA+BjC;IAGI;QAFgB,UAAK,GAAW,0EAA0E,CAAC;IAE3F,CAAC;IAOrB,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/C0C;AAEe;AAG1D;IAA8C,4CAAoB;IAAlE;;IAIA,CAAC;IAHa,mDAAgB,GAA1B;QACI,OAAO,CAAC,aAAa,CAAC,CAAC;IAC3B,CAAC;IAHQ,wBAAwB;QADpC,gEAAU,EAAE;OACA,wBAAwB,CAIpC;IAAD,+BAAC;CAAA,CAJ6C,uEAAoB,GAIjE;AAJoC;;;;;;;;;;;;ACLrC,uGAAuG,OAAO,0sB;;;;;;;;;;;ACA9G,6RAA6R,qCAAqC,iCAAiC,gCAAgC,uBAAuB,2BAA2B,4BAA4B,+BAA+B,8EAA8E,4CAA4C,8EAA8E,4BAA4B,kEAAkE,EAAE,iDAAiD,2/H;;;;;;;;;;;;ACAz0B;AAAA;AAAO,IAAM,QAAQ,GAAG;IACpB,KAAK,EAAE,UAAU;IACjB,MAAM,EAAE,WAAW;IACnB,WAAW,EAAE,yBAAyB;IACtC,UAAU,EAAE,qBAAqB;IACjC,YAAY,EAAE,uBAAuB;IACrC,aAAa,EAAE,WAAW;IAC1B,KAAK,EAAE,eAAe;IACtB,eAAe,EAAE,6BAA6B;IAC9C,gBAAgB,EAAE,8BAA8B;IAChD,OAAO,EAAE,eAAe;IACxB,MAAM,EAAE,UAAU;CACrB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACL;AACqB;AAG3D;IAGI,kBAAY,IAAU;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,wCAAqB,GAA5B,UAA6B,UAAkB;;QAC3C,IAAM,kBAAkB;YACpB,GAAC,uEAAc,CAAC,KAAK,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,yBAAyB,EAAE,CAAC;YACpF,GAAC,uEAAc,CAAC,MAAM,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,0BAA0B,EAAE,CAAC;YACvF,GAAC,uEAAc,CAAC,WAAW,IAAG,IAAI,CAAC,IAAI,CAAC;gBACpC,KAAK,EAAE,WAAW;gBAClB,EAAE,EAAE,uCAAuC;aAC9C,CAAC;YACF,GAAC,uEAAc,CAAC,UAAU,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE,8BAA8B,EAAE,CAAC;YACrG,GAAC,uEAAc,CAAC,YAAY,IAAG,IAAI,CAAC,IAAI,CAAC;gBACrC,KAAK,EAAE,iBAAiB;gBACxB,EAAE,EAAE,gCAAgC;aACvC,CAAC;YACF,GAAC,uEAAc,CAAC,aAAa,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,EAAE,EAAE,0BAA0B,EAAE,CAAC;YACxG,GAAC,uEAAc,CAAC,KAAK,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,yBAAyB,EAAE,CAAC;YACpF,GAAC,uEAAc,CAAC,eAAe,IAAG,IAAI,CAAC,IAAI,CAAC;gBACxC,KAAK,EAAE,oBAAoB;gBAC3B,EAAE,EAAE,iCAAiC;aACxC,CAAC;YACF,GAAC,uEAAc,CAAC,gBAAgB,IAAG,IAAI,CAAC,IAAI,CAAC;gBACzC,KAAK,EAAE,qBAAqB;gBAC5B,EAAE,EAAE,kCAAkC;aACzC,CAAC;YACF,GAAC,uEAAc,CAAC,OAAO,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,0BAA0B,EAAE,CAAC;YAC1F,GAAC,uEAAc,CAAC,MAAM,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,4BAA4B,EAAE,CAAC;eAC7F,CAAC;QACF,OAAO,kBAAkB,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;IAEM,uCAAoB,GAA3B,UAA4B,UAAkB;;QAC1C,IAAM,iBAAiB;YACnB,GAAC,uEAAc,CAAC,KAAK,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,mBAAmB,EAAE,CAAC;YAC9E,GAAC,uEAAc,CAAC,MAAM,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,oBAAoB,EAAE,CAAC;YACjF,GAAC,uEAAc,CAAC,WAAW,IAAG,IAAI,CAAC,IAAI,CAAC;gBACpC,KAAK,EAAE,sBAAsB;gBAC7B,EAAE,EAAE,iCAAiC;aACxC,CAAC;YACF,GAAC,uEAAc,CAAC,UAAU,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAE,EAAE,EAAE,wBAAwB,EAAE,CAAC;YACxG,GAAC,uEAAc,CAAC,YAAY,IAAG,IAAI,CAAC,IAAI,CAAC;gBACrC,KAAK,EAAE,oCAAoC;gBAC3C,EAAE,EAAE,0BAA0B;aACjC,CAAC;YACF,GAAC,uEAAc,CAAC,aAAa,IAAG,IAAI,CAAC,IAAI,CAAC;gBACtC,KAAK,EAAE,8BAA8B;gBACrC,EAAE,EAAE,oBAAoB;aAC3B,CAAC;YACF,GAAC,uEAAc,CAAC,KAAK,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,EAAE,mBAAmB,EAAE,CAAC;YACvF,GAAC,uEAAc,CAAC,eAAe,IAAG,IAAI,CAAC,IAAI,CAAC;gBACxC,KAAK,EAAE,iCAAiC;gBACxC,EAAE,EAAE,2BAA2B;aAClC,CAAC;YACF,GAAC,uEAAc,CAAC,gBAAgB,IAAG,IAAI,CAAC,IAAI,CAAC;gBACzC,KAAK,EAAE,kCAAkC;gBACzC,EAAE,EAAE,4BAA4B;aACnC,CAAC;YACF,GAAC,uEAAc,CAAC,OAAO,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,EAAE,oBAAoB,EAAE,CAAC;YAC1F,GAAC,uEAAc,CAAC,MAAM,IAAG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,sBAAsB,EAAE,CAAC;eACvF,CAAC;QACF,OAAO,iBAAiB,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAlEQ,QAAQ;QADpB,gEAAU,EAAE;yCAIS,mDAAI;OAHb,QAAQ,CAmEpB;IAAD,eAAC;CAAA;AAnEoB;;;;;;;;;;;;ACLrB,uuD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAoD;AAE2B;AACf;AAE4C;AAEhE;AACO;AAC4B;AACzB;AACqB;AACjC;AAc1C;IAAuC,qCAAyB;IAI5D,2BAAY,QAAkB;QAA9B,YACI,kBAAM,QAAQ,CAAC,SAClB;QAJM,oBAAc,GAAQ,sDAAc,CAAC;;IAI5C,CAAC;IAEM,yCAAa,GAApB,UAAqB,KAAuB;QACxC,IAAI,CAAC,UAAU,gBAAQ,KAAK,CAAE,CAAC;IACnC,CAAC;IAVQ,iBAAiB;QAZ7B,+DAAS,CAAC;YACP,QAAQ,EAAE,WAAW;;YAErB,SAAS,EAAE;gBACP,gEAAgB;gBAChB,EAAE,OAAO,EAAE,6EAAqB,EAAE,QAAQ,EAAE,yHAA4B,EAAE;gBAC1E,2FAAsB;gBACtB,kEAAsB;gBACtB,wDAAgB;gBAChB,uFAAoB;aACvB;SACJ,CAAC;yCAKwB,sDAAQ;OAJrB,iBAAiB,CAW7B;IAAD,wBAAC;CAAA,CAXsC,4FAAyB,GAW/D;AAX6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BW;AACM;AACF;AAE+B;AAElB;AACV;AACmC;AAC5C;AAQlB;AAC4C;AAiBjE;IAAA;IAA0B,CAAC;IAAd,WAAW;QAfvB,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,yFAAkB,CAAC;YACxD,YAAY,EAAE;gBACV,sEAAiB;gBACjB,4DAAoB;gBACpB,yEAA8B;gBAC9B,yEAA8B;gBAC9B,uEAA4B;gBAC5B,+DAAoB;gBACpB,uEAA4B;gBAC5B,yEAA8B;aACjC;YACD,SAAS,EAAE,CAAC,+FAAwB,EAAE,mDAAQ,EAAE,6EAAiB,CAAC;YAClE,OAAO,EAAE,CAAC,sEAAiB,CAAC;SAC/B,CAAC;OACW,WAAW,CAAG;IAAD,kBAAC;CAAA;AAAH;;;;;;;;;;;;;ACnCxB;AAAA;AAAO,IAAM,sBAAsB,GAAG;IAClC,SAAS,EAAE,YAAY;IACvB,WAAW,EAAE,aAAa;IAC1B,QAAQ,EAAE,UAAU;IACpB,SAAS,EAAE,YAAY;CAC1B,CAAC;;;;;;;;;;;;;;;;;;;ACL2G;AAEtB;AAEnB;AAEpE,IAAM,WAAW,GAAG;IAChB,SAAS,EAAE,WAAW;IACtB,YAAY,EAAE,cAAc;IAC5B,GAAG,EAAE,KAAK;CACb,CAAC;AAEF,SAAS,sBAAsB,CAC3B,WAAmB,EACnB,UAA6D;IAA7D,0CAAoC,mFAAqB,CAAC,GAAG;IAE7D,IAAM,gBAAgB,GAAG,IAAI,8EAAgB,EAAE,CAAC;IAChD,gBAAgB,CAAC,WAAW,GAAG,WAAW,CAAC;IAC3C,gBAAgB,CAAC,UAAU,GAAG,UAAU,CAAC;IACzC,OAAO,gBAAgB,CAAC;AAC5B,CAAC;AAED,SAAS,2CAA2C,CAAC,MAAW;IAC5D,IAAM,kBAAkB,GAAwB,IAAI,oGAAkB,EAAE,CAAC;IACzE,kBAAkB,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;IACtF,OAAO,kBAAkB,CAAC;AAC9B,CAAC;AAED,SAAS,uCAAuC,CAAC,MAAW;IACxD,IAAM,WAAW,GAAqB,MAA0B,CAAC;IACjE,IAAM,kBAAkB,GAAwB,IAAI,oGAAkB,EAAE,CAAC;IACzE,IAAM,gBAAgB,GAAG,sBAAsB,CAAC,WAAW,CAAC,YAAY,EAAE,mFAAqB,CAAC,cAAc,CAAC,CAAC;IAChH,gBAAgB,CAAC,QAAQ,CAAC,8EAAgB,CAAC,eAAe,EAAE,WAAW,CAAC,cAAc,CAAC,CAAC;IACxF,gBAAgB,CAAC,QAAQ,CAAC,8EAAgB,CAAC,wBAAwB,EAAE,WAAW,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClH,kBAAkB,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC;IAEzD,OAAO,kBAAkB,CAAC;AAC9B,CAAC;AAED,SAAS,gCAAgC,CAAC,MAAW;IACjD,IAAM,IAAI,GAAqB,MAA0B,CAAC;IAC1D,IAAM,kBAAkB,GAAwB,IAAI,oGAAkB,EAAE,CAAC;IACzE,IAAM,gBAAgB,GAAG,sBAAsB,CAAC,WAAW,CAAC,SAAS,EAAE,mFAAqB,CAAC,cAAc,CAAC,CAAC;IAC7G,gBAAgB,CAAC,QAAQ,CAAC,8EAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACzE,kBAAkB,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC;IAEzD,OAAO,kBAAkB,CAAC;AAC9B,CAAC;AAED,SAAS,sCAAsC,CAAC,MAAW;IACvD,IAAM,kBAAkB,GAAwB,IAAI,oGAAkB,EAAE,CAAC;IACzE,IAAM,gBAAgB,GAAG,sBAAsB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACjE,gBAAgB,CAAC,QAAQ,CAAC,8EAAgB,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;IACtE,kBAAkB,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC;IACzD,OAAO,kBAAkB,CAAC;AAC9B,CAAC;AAED,IAAM,qBAAqB;IACvB,GAAC,gFAAsB,CAAC,KAAK,IAAG,gCAAgC;IAChE,GAAC,gFAAsB,CAAC,YAAY,IAAG,uCAAuC;IAC9E,GAAC,gFAAsB,CAAC,GAAG,IAAG,sCAAsC;IACpE,GAAC,gFAAsB,CAAC,eAAe,IAAG,2CAA2C;OACxF,CAAC;AAEF;IACI;IAAe,CAAC;IAEF,+CAAqB,GAAnC,UAAoC,MAAW,EAAE,YAAoB;QACjE,IAAM,iCAAiC,GAAG,qBAAqB,CAAC,YAAY,CAAC,CAAC;QAC9E,OAAO,iCAAiC,CAAC,MAAM,CAAC,CAAC;IACrD,CAAC;IACL,gCAAC;AAAD,CAAC;;;;;;;;;;;;;;ACvED;AAAA;AAAA,IAAY,sBAKX;AALD,WAAY,sBAAsB;IAC9B,yCAAe;IACf,uDAA6B;IAC7B,4DAAkC;IAClC,qCAAW;AACf,CAAC,EALW,sBAAsB,KAAtB,sBAAsB,QAKjC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACF;;;;;;;;;;;;;ACCpC;AAAA;AAAA;IAGI;QACI,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IACjC,CAAC;IAEM,gDAAmB,GAA1B,UAA2B,IAAsB;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACI,kCAAK,GAAZ;QACI,IAAM,QAAQ,GAAG,IAAI,kBAAkB,EAAE,CAAC;QAC1C,QAAQ,CAAC,kBAAkB,GAAO,IAAI,CAAC,kBAAkB,QAAC,CAAC;QAC3D,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACI,oDAAuB,GAA9B;QACI,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAClF,CAAC;IAOD,sBAAW,sCAAM;QALjB;;;;WAIG;aACH;YACI,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;QAC1C,CAAC;;;OAAA;IAED;;;;OAIG;IACI,mDAAsB,GAA7B,UAA8B,IAAsB;QAChD,IAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,gBAAM,IAAI,aAAM,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,EAAvC,CAAuC,CAAC,CAAC;QACzG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IACnD,CAAC;IACL,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACrDD;AAAA;AAAA;AAAA;;;GAGG;AACH;IASI;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;IAC7B,CAAC;IAQD,sBAAW,yCAAW;QANtB;;;;;WAKG;aACH;YACI,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;aAED,UAAuB,KAAa;YAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAWD,sBAAW,wCAAU;QALrB;;;;WAIG;aACH;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;aAED,UAAsB,KAAa;YAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAMD;;;;;;OAMG;IACI,mCAAQ,GAAf,UAAgB,GAAQ,EAAE,KAAU;QAChC,IAAI,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACvD,OAAO,KAAK,CAAC;SAChB;aAAM;YACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAED;;;;;OAKG;IACI,sCAAW,GAAlB,UAAmB,GAAQ;QACvB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACvB,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC5B;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;;;OAKG;IACI,mCAAQ,GAAf,UAAgB,GAAQ;QACpB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACvB,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACjC;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAlFa,gCAAe,GAAW,UAAU,CAAC;IACrC,gCAAe,GAAW,UAAU,CAAC;IACrC,yCAAwB,GAAW,kBAAkB,CAAC;IAiFxE,uBAAC;CAAA;AApF4B;AAsF7B,IAAY,qBAMX;AAND,WAAY,qBAAqB;IAC7B,8CAAqB;IACrB,oDAA2B;IAC3B,kDAAyB;IACzB,oEAA2C;IAC3C,kDAAyB;AAC7B,CAAC,EANW,qBAAqB,KAArB,qBAAqB,QAMhC","file":"business-home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes, Route } from '@angular/router';\n\nimport { LsResolveUtil } from 'ls-core/routing';\nimport { LsRoutePath } from 'ui/routing';\n\n// HOME TAB\nimport { TabHomeComponent } from 'business/home/tab/tab-home.component';\nimport {\n    PolicyListTabComponent,\n    PolicyListFilterMetaDataResolver,\n    UserTeamDataResolver\n} from 'business/home/policy-list';\nimport { TasksTabComponent } from 'business/home/tasks';\nimport { SummaryTabComponent } from 'business/home/summary';\nimport { TaskListMetaDataResolver } from 'business/home/tasks/task-list/task-list-metadata.resolver';\n\nconst AppHomeWorkItemsRoute: Route = {\n    path: LsRoutePath.WorkItems,\n    component: PolicyListTabComponent,\n    resolve: {\n        listData: UserTeamDataResolver,\n        metaData: PolicyListFilterMetaDataResolver\n    }\n};\n\nconst AppHomeTasksRoute: Route = {\n    path: LsRoutePath.Tasks,\n    component: TasksTabComponent,\n    resolve: {\n        listData: UserTeamDataResolver,\n        metaData: TaskListMetaDataResolver\n    }\n};\n\nconst AppHomeSummaryRoute: Route = {\n    path: LsRoutePath.Summary,\n    component: SummaryTabComponent,\n    resolve: LsResolveUtil.getListDataResolver(UserTeamDataResolver)\n};\n\nconst AppHomeRoutes: Routes = [\n    {\n        path: '',\n        component: TabHomeComponent,\n        children: [AppHomeWorkItemsRoute, AppHomeTasksRoute, AppHomeSummaryRoute]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(AppHomeRoutes)],\n    exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LsComponentsModule } from 'ls-core/component/ls-components.module';\r\nimport { TabHomeComponent } from './tab/tab-home.component';\r\nimport { TabViewHomeComponent } from './tab/tabview-home.component';\r\nimport { PolicyListComponent, PolicyListTabComponent } from './policy-list';\r\nimport {\r\n    PolicyListFilterComponent,\r\n    PolicyListFilterBuilder,\r\n    PolicyListFilterMetaDataResolver,\r\n    UserTeamDataResolver\r\n} from './policy-list/filter';\r\nimport { HomeRoutingModule } from './home-routing.module';\r\nimport { TasksModule } from './tasks';\r\nimport { SummaryModule } from './summary';\r\nimport { ApplicantStatusUtil } from 'business/home/policy-list/applicant-status/applicant-status.util';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, LsComponentsModule, HomeRoutingModule, TasksModule, SummaryModule],\r\n    declarations: [\r\n        TabHomeComponent,\r\n        TabViewHomeComponent,\r\n        PolicyListTabComponent,\r\n        PolicyListComponent,\r\n        PolicyListFilterComponent\r\n    ],\r\n    providers: [PolicyListFilterBuilder, PolicyListFilterMetaDataResolver, UserTeamDataResolver, ApplicantStatusUtil]\r\n})\r\nexport class HomeModule {}\r\n","﻿import { AgingRangeDTO } from 'ls-core/model';\r\nimport { PolicyAgingRangeUtil } from './policy-aging-range.util';\r\nimport { MenuItem } from 'life-core/component/menu';\r\nimport { SplitButtonMenuClickEvent } from 'life-core/component/button';\r\n\r\nexport class ApplicantStatusListBuilder {\r\n    public static buildApplicantStatusList(\r\n        agingRanges: Array<AgingRangeDTO>,\r\n        onStatusAgingRangeChange: (event: SplitButtonMenuClickEvent) => void\r\n    ): Array<MenuItem> {\r\n        const statusList: Array<MenuItem> = [];\r\n\r\n        agingRanges.forEach(agingRange => {\r\n            const label = PolicyAgingRangeUtil.getAgingRangeAndCountLabel(agingRange);\r\n            const menuItem = new MenuItem({\r\n                id: agingRange.rangeType.toString(),\r\n                label: label,\r\n                command: onStatusAgingRangeChange\r\n            });\r\n            statusList.push(menuItem);\r\n        });\r\n\r\n        return statusList;\r\n    }\r\n}\r\n","﻿import { MenuItem } from 'life-core/component/menu';\r\n\r\nexport class ApplicantStatusListModel {\r\n    public header: string;\r\n    public statusList: Array<MenuItem>;\r\n    public statusType: number;\r\n    public onStatusSelected: (event: any) => void;\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { PolicyStatusCountsDTO, PolicyStatusCountDTO } from 'ls-core/model';\r\nimport { StatusCount } from './status-count';\r\nimport { PolicyStatusType, PolicyStatusLabelType } from '../policy-status-type';\r\nimport { I18n } from 'life-core/i18n';\r\nimport { ArrayUtil } from 'life-core/util/lang';\r\n\r\n@Injectable()\r\nexport class ApplicantStatusUtil {\r\n    private i18n: I18n;\r\n\r\n    constructor(i18n: I18n) {\r\n        this.i18n = i18n;\r\n    }\r\n\r\n    public getStatusCountList(statusCountsDTO: PolicyStatusCountsDTO): Array<StatusCount> {\r\n        const statuses: Array<StatusCount> = [];\r\n        if (statusCountsDTO && statusCountsDTO.statusTypeCounts) {\r\n            statusCountsDTO.statusTypeCounts.forEach(status => {\r\n                const statusCountDTO = status as PolicyStatusCountDTO;\r\n                const applicantStatus = new StatusCount(\r\n                    statusCountDTO.statusCountType,\r\n                    statusCountDTO.agingRanges,\r\n                    this.getStatusShortNameKey(statusCountDTO.statusCountType)\r\n                );\r\n                statuses.push(applicantStatus);\r\n            });\r\n        }\r\n\r\n        return this.getSortedStatusCountList(statuses);\r\n    }\r\n\r\n    public getApplicantStatusShortName(statusType: number): string {\r\n        const ApplicantStatusShortNamesByType: { [statusType: number]: string } = {\r\n            [PolicyStatusType.NewBusiness]: this.i18n({\r\n                value: 'NB',\r\n                id: 'mywork.statuscount.label.newbusiness.short'\r\n            }),\r\n            [PolicyStatusType.Pending]: this.i18n({ value: 'PE', id: 'mywork.statuscount.label.pending.short' }),\r\n            [PolicyStatusType.PendingMail]: this.i18n({\r\n                value: 'PM',\r\n                id: 'mywork.statuscount.label.pendingmail.short'\r\n            }),\r\n            [PolicyStatusType.FinalAct]: this.i18n({ value: 'FA', id: 'mywork.statuscount.label.finalaction.short' }),\r\n            [PolicyStatusType.Hold]: this.i18n({ value: 'HD', id: 'mywork.statuscount.label.hold.short' }),\r\n            [PolicyStatusType.ToBeIssued]: this.i18n({\r\n                value: 'AP',\r\n                id: 'mywork.statuscount.label.applicantstatuses.short'\r\n            })\r\n        };\r\n\r\n        return ApplicantStatusShortNamesByType[statusType];\r\n    }\r\n\r\n    private getStatusShortNameKey(statusType: number): string {\r\n        const ApplicantStatusShortNameKey: { [statusType: number]: PolicyStatusLabelType } = {\r\n            [PolicyStatusType.Total]: PolicyStatusLabelType.Total_ShortForm,\r\n            [PolicyStatusType.NewBusiness]: PolicyStatusLabelType.NewBusiness_ShortForm,\r\n            [PolicyStatusType.Pending]: PolicyStatusLabelType.Pending_ShortForm,\r\n            [PolicyStatusType.PendingMail]: PolicyStatusLabelType.PendingMail_ShortForm,\r\n            [PolicyStatusType.FinalAct]: PolicyStatusLabelType.FinalAct_ShortForm,\r\n            [PolicyStatusType.Hold]: PolicyStatusLabelType.Hold_ShortForm,\r\n            [PolicyStatusType.ToBeIssued]: PolicyStatusLabelType.ToBeIssued_ShortForm\r\n        };\r\n\r\n        return ApplicantStatusShortNameKey[statusType];\r\n    }\r\n\r\n    public getApplicantStatusLabel(statusType: number): string {\r\n        const ApplicantStatusLabel: { [statusType: number]: string } = {\r\n            [PolicyStatusType.NewBusiness]: this.i18n({ value: 'New Bus', id: 'mywork.statuscount.label.newbusiness' }),\r\n            [PolicyStatusType.Pending]: this.i18n({ value: 'Pending', id: 'mywork.statuscount.label.pending' }),\r\n            [PolicyStatusType.PendingMail]: this.i18n({\r\n                value: 'Pend Mail',\r\n                id: 'mywork.statuscount.label.pendingmail'\r\n            }),\r\n            [PolicyStatusType.FinalAct]: this.i18n({ value: 'Final Act', id: 'mywork.statuscount.label.finalaction' }),\r\n            [PolicyStatusType.Hold]: this.i18n({ value: 'Hold', id: 'mywork.statuscount.label.hold' }),\r\n            [PolicyStatusType.ToBeIssued]: this.i18n({\r\n                value: 'To Be Issued',\r\n                id: 'mywork.statuscount.label.tobeissued'\r\n            }),\r\n            [PolicyStatusType.Total]: this.i18n({ value: 'Total', id: 'mywork.statuscount.label.total' })\r\n        };\r\n\r\n        return ApplicantStatusLabel[statusType];\r\n    }\r\n\r\n    private getSortedStatusCountList(statuses: any): Array<StatusCount> {\r\n        const sortAs = [\r\n            PolicyStatusType.NewBusiness,\r\n            PolicyStatusType.Pending,\r\n            PolicyStatusType.PendingMail,\r\n            PolicyStatusType.FinalAct,\r\n            PolicyStatusType.Hold,\r\n            PolicyStatusType.ToBeIssued,\r\n            PolicyStatusType.Total\r\n        ];\r\n        const sortCompareFunction = ArrayUtil.getSortCompareFunction(sortAs, 'statusType');\r\n        return statuses.sort(sortCompareFunction);\r\n    }\r\n}\r\n","﻿import { PolicyAgingRangeType } from '../policy-status-type';\r\nimport { AgingRangeDTO } from 'ls-core/model';\r\n\r\nexport class PolicyAgingRangeUtil {\r\n    public static getAgingRangeLabel(agingRange: AgingRangeDTO): string {\r\n        let label = '';\r\n\r\n        switch (agingRange.rangeType) {\r\n            case PolicyAgingRangeType.Total:\r\n                label = 'Total';\r\n                break;\r\n            case PolicyAgingRangeType.Lower:\r\n                label = `within  ${(agingRange.toAge + 1).toString()} days`;\r\n                break;\r\n            case PolicyAgingRangeType.Highest:\r\n                label = `over ${agingRange.fromAge - 1} days`;\r\n                break;\r\n            default:\r\n                label = `${agingRange.fromAge} - ${agingRange.toAge} days`;\r\n                break;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    public static getAgingRangeAndCountLabel(agingRange: AgingRangeDTO): string {\r\n        return `${this.getAgingRangeLabel(agingRange)}: ${agingRange.numberOfPolicies}`;\r\n    }\r\n\r\n    // Returns aging range for range type*\r\n    public static getAgingRangeByType(list: AgingRangeDTO[], rangeType: number): AgingRangeDTO {\r\n        return list.find(item => item.rangeType == rangeType);\r\n    }\r\n}\r\n","﻿import { PolicyAgingRangeType } from '../policy-status-type';\r\nimport { AgingRangeDTO } from 'ls-core/model';\r\n\r\nexport class StatusCount {\r\n    public statusType: number;\r\n    public nameKey: string;\r\n    public agingRanges: Array<AgingRangeDTO>;\r\n    public selectedRange: number;\r\n\r\n    constructor(statusType: number, agingRanges: Array<AgingRangeDTO>, nameKey: string) {\r\n        this.statusType = statusType;\r\n        this.nameKey = nameKey;\r\n        this.agingRanges = agingRanges;\r\n        this.selectedRange = PolicyAgingRangeType.Total;\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { IGetRowsParams } from 'ag-grid-community';\r\n\r\nimport { IInfiniteGridDatasource } from 'life-core/component/grid';\r\n\r\nimport { DataServiceParams, UIServiceNames, UIServiceMethods, CompositeFilter } from 'ls-core/service';\r\nimport { BasePolicyGridDataSource } from 'business/shared/grid/base-policy-grid-datasource';\r\n\r\nimport { PolicyListFilterBuilder } from '../filter/policy-list-filter-builder';\r\nimport { PolicyListFilterModel } from '../filter/policy-list-filter-model';\r\n\r\n@Injectable()\r\nexport class PolicyListGridDataSource extends BasePolicyGridDataSource implements IInfiniteGridDatasource {\r\n    private _policyListFilterBuilder: PolicyListFilterBuilder;\r\n    private _policyListFilterModel: PolicyListFilterModel;\r\n\r\n    constructor(injector: Injector, policyListFilterBuilder: PolicyListFilterBuilder) {\r\n        super(injector);\r\n        this._policyListFilterBuilder = policyListFilterBuilder;\r\n    }\r\n\r\n    protected getRowsServiceParams(params: IGetRowsParams): DataServiceParams {\r\n        return new DataServiceParams({\r\n            serviceInterface: UIServiceNames.WORK_ITEMS_POLICY_LIST,\r\n            serviceMethod: UIServiceMethods.GET_POLICY_LIST_DATA,\r\n            requestPayload: this.getRowsPayLoad(params)\r\n        });\r\n    }\r\n\r\n    protected getExternalFilters(): CompositeFilter {\r\n        return this._policyListFilterBuilder.buildPolicyListFilter(this._policyListFilterModel);\r\n    }\r\n\r\n    protected getRowCountServiceParams(params: IGetRowsParams): DataServiceParams {\r\n        return new DataServiceParams({\r\n            serviceInterface: UIServiceNames.WORK_ITEMS_POLICY_LIST,\r\n            serviceMethod: UIServiceMethods.GET_POLICY_LIST_COUNT,\r\n            requestPayload: this.getRowCountPayLoad(params)\r\n        });\r\n    }\r\n\r\n    public updateFilter(policyListFilterModel: PolicyListFilterModel): void {\r\n        this._policyListFilterModel = policyListFilterModel;\r\n        this.resetRowCount();\r\n    }\r\n}\r\n","﻿export * from './policy-list-filter-data.resolver';\r\nexport * from './policy-list-filter-metadata.resolver';\r\nexport * from './policy-list-filter-builder';\r\nexport * from './policy-list-filter.component';\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { DateUtil } from 'life-core/util';\r\nimport {\r\n    CompositeFilter,\r\n    Filter,\r\n    NumericFilter,\r\n    BooleanFilter,\r\n    CompositeANDFilter,\r\n    SimpleTextFilter,\r\n    DateFilter,\r\n    CompositeORFilter\r\n} from 'ls-core/service';\r\nimport { PolicyListFilterModel } from './policy-list-filter-model';\r\nimport { PolicyStatusType } from '../policy-status-type';\r\nimport { ApplicantStatusUtil } from '../applicant-status/applicant-status.util';\r\nimport { AgingRangeDTO } from 'ls-core/model';\r\nimport { PolicyViewType } from 'business/shared/view-type/policy-view-type';\r\n\r\n@Injectable()\r\nexport class PolicyListFilterBuilder {\r\n    private _policyListFilterModel: PolicyListFilterModel;\r\n    private _applicantStatusUtil: ApplicantStatusUtil;\r\n\r\n    constructor(applicantStatusUtil: ApplicantStatusUtil) {\r\n        this._applicantStatusUtil = applicantStatusUtil;\r\n    }\r\n\r\n    public buildPolicyListFilter(policyListFilterModel: PolicyListFilterModel): CompositeFilter {\r\n        this._policyListFilterModel = policyListFilterModel;\r\n        if (\r\n            this._policyListFilterModel &&\r\n            (this._policyListFilterModel.selectedUser ||\r\n                this._policyListFilterModel.selectedTeam ||\r\n                this._policyListFilterModel.selectedView ||\r\n                this._policyListFilterModel.selectedStatusCount)\r\n        ) {\r\n            const policyListFilter = new CompositeFilter([]);\r\n            if (this.isCaseViewSelected()) policyListFilter.filters.push(this.getCaseViewFilter());\r\n            if (this.isUserSelected()) policyListFilter.filters.push(this.getUserFilter());\r\n            if (this.isTeamSelected()) policyListFilter.filters.push(this.getTeamFilter());\r\n            if (this.isApplicantStatusSelected()) policyListFilter.filters.push(this.getApplicantStatusFilter());\r\n            return policyListFilter;\r\n        }\r\n    }\r\n\r\n    private isUserSelected(): boolean {\r\n        return this._policyListFilterModel.selectedUser != undefined && this._policyListFilterModel.selectedUser != 0;\r\n    }\r\n\r\n    private isTeamSelected(): boolean {\r\n        return this._policyListFilterModel.selectedTeam != undefined && this._policyListFilterModel.selectedTeam != 0;\r\n    }\r\n\r\n    private getUserFilter(): CompositeORFilter {\r\n        const filters: Array<Filter> = [];\r\n        const uwNumericFilter = new NumericFilter(\r\n            'UnderwriterId',\r\n            this._policyListFilterModel.selectedUser,\r\n            this._policyListFilterModel.selectedUser\r\n        );\r\n        filters.push(uwNumericFilter);\r\n\r\n        const saNumericFilter = new NumericFilter(\r\n            'ServiceAssociateId',\r\n            this._policyListFilterModel.selectedUser,\r\n            this._policyListFilterModel.selectedUser\r\n        );\r\n        filters.push(saNumericFilter);\r\n\r\n        return this.prepareCompositeOrFilter(filters);\r\n    }\r\n\r\n    private getTeamFilter(): NumericFilter {\r\n        return new NumericFilter(\r\n            'TeamId',\r\n            this._policyListFilterModel.selectedTeam,\r\n            this._policyListFilterModel.selectedTeam\r\n        );\r\n    }\r\n\r\n    private isCaseViewSelected(): boolean {\r\n        return this._policyListFilterModel.selectedView == PolicyViewType.Case;\r\n    }\r\n\r\n    private getCaseViewFilter(): BooleanFilter {\r\n        return new BooleanFilter('PrimaryInsuredFlag', true);\r\n    }\r\n\r\n    private isApplicantStatusSelected(): boolean {\r\n        return this._policyListFilterModel != undefined && this._policyListFilterModel.selectedStatusCount != undefined;\r\n    }\r\n\r\n    private getApplicantStatusFilter(): CompositeANDFilter {\r\n        const filters: Array<Filter> = [];\r\n        const selectedAgingRange = this.getSelectedAgingRange();\r\n        const applicantStatusDateFilter = new DateFilter(\r\n            'ApplicantStatusDate',\r\n            DateUtil.dateToString(selectedAgingRange.fromDate),\r\n            DateUtil.dateToString(selectedAgingRange.toDate)\r\n        );\r\n\r\n        if (this.isSpecificAgingRangeSelected()) {\r\n            filters.push(applicantStatusDateFilter);\r\n            filters.push(new SimpleTextFilter('ApplicantStatusShort', this.getApplicantStatusShortName()));\r\n            filters.push(new SimpleTextFilter('PolicyStatusCode', this.getPolicyStateCode()));\r\n        } else {\r\n            filters.push(applicantStatusDateFilter);\r\n        }\r\n\r\n        return this.prepareCompositeAndFilter(filters);\r\n    }\r\n\r\n    private isSpecificAgingRangeSelected(): boolean {\r\n        return (\r\n            this._policyListFilterModel.selectedStatusCount &&\r\n            this._policyListFilterModel.selectedStatusCount.statusType != PolicyStatusType.Total\r\n        );\r\n    }\r\n\r\n    private getApplicantStatusShortName(): string {\r\n        return this._applicantStatusUtil.getApplicantStatusShortName(\r\n            this._policyListFilterModel.selectedStatusCount.statusType\r\n        );\r\n    }\r\n\r\n    private getPolicyStateCode(): string {\r\n        return this._policyListFilterModel.selectedStatusCount.statusType == PolicyStatusType.ToBeIssued\r\n            ? 'Closed'\r\n            : 'Pending';\r\n    }\r\n\r\n    private getSelectedAgingRange(): AgingRangeDTO {\r\n        return this._policyListFilterModel.selectedStatusCount.agingRanges.find(\r\n            agingRange => agingRange.rangeType == this._policyListFilterModel.selectedStatusCount.selectedRange\r\n        );\r\n    }\r\n\r\n    private prepareCompositeAndFilter(filters: Array<Filter>): CompositeANDFilter {\r\n        return new CompositeANDFilter(filters);\r\n    }\r\n\r\n    private prepareCompositeOrFilter(filters: Array<Filter>): CompositeORFilter {\r\n        return new CompositeORFilter(filters);\r\n    }\r\n}\r\n","import { Injector, Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { DataServiceParams, UIServiceNames, UIServiceMethods } from 'ls-core/service';\r\nimport { BaseViewDataResolver } from 'ls-core/view-model';\r\n\r\n@Injectable()\r\nexport class UserTeamDataResolver extends BaseViewDataResolver {\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    protected getServiceParams(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): DataServiceParams {\r\n        return new DataServiceParams({\r\n            serviceInterface: UIServiceNames.USER_TEAM_LIST,\r\n            serviceMethod: UIServiceMethods.GET_DATA\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BaseMetaDataResolver } from 'ls-core/view-model';\r\n\r\n@Injectable()\r\nexport class PolicyListFilterMetaDataResolver extends BaseMetaDataResolver {\r\n    protected getMetadataTypes(): string[] {\r\n        return ['MyWorkView', 'MyWorkViewDefault'];\r\n    }\r\n}\r\n","﻿import { StatusCount } from '../applicant-status/status-count';\r\nimport { PolicyViewType } from 'business/shared/view-type/policy-view-type';\r\n\r\nexport class PolicyListFilterModel {\r\n    public selectedUser: number;\r\n    public selectedTeam: number;\r\n    public selectedView: PolicyViewType;\r\n    public selectedStatusCount: StatusCount;\r\n    public selectedRanges: Array<number>;\r\n}\r\n","module.exports = \".ls-status-filters {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    min-height: 50px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9saWZlc3VpdGUtYXBwL2J1c2luZXNzL2hvbWUvcG9saWN5LWxpc3QvZmlsdGVyL3BvbGljeS1saXN0LWZpbHRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLG9CQUFvQjtJQUNwQiwrQkFBK0I7SUFDL0IsaUJBQWlCO0NBQ3BCIiwiZmlsZSI6InNyYy9saWZlc3VpdGUtYXBwL2J1c2luZXNzL2hvbWUvcG9saWN5LWxpc3QvZmlsdGVyL3BvbGljeS1saXN0LWZpbHRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxzLXN0YXR1cy1maWx0ZXJzIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgbWluLWhlaWdodDogNTBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-3\\\">\\r\\n        <lf-form-input [control]=\\\"userList\\\" label=\\\"User\\\" i18n-label=\\\"@@mywork.applicantscases.label.user\\\">\\r\\n            <lf-select #userList name=\\\"userList\\\" [(ngModel)]=\\\"filters.selectedUser\\\" [items]=\\\"listData.userList | listItems:'CodeValue':'ExternalCode'\\\"\\r\\n                style=\\\"width:200px\\\" (change)=\\\"onUserChange($event)\\\" [actionType]=\\\"filterDropdownActionType\\\"\\r\\n                secureComponent></lf-select>\\r\\n        </lf-form-input>\\r\\n    </div>\\r\\n    <div class=\\\"col-3\\\">\\r\\n        <lf-form-input [control]=\\\"teamList\\\" label=\\\"Team\\\" i18n-label=\\\"@@mywork.applicantscases.label.team\\\">\\r\\n            <lf-select #teamList name=\\\"teamList\\\" [(ngModel)]=\\\"filters.selectedTeam\\\" [items]=\\\"listData.teamList | listItems:'CodeValue':'CodeId'\\\"\\r\\n                style=\\\"width:200px\\\" (change)=\\\"onTeamChange($event)\\\" [actionType]=\\\"filterDropdownActionType\\\"\\r\\n                secureComponent></lf-select>\\r\\n        </lf-form-input>\\r\\n    </div>\\r\\n    <div class=\\\"col-3\\\">\\r\\n        <lf-form-input [control]=\\\"viewList\\\" label=\\\"View\\\" i18n-label=\\\"@@mywork.applicantscases.label.view\\\">\\r\\n            <lf-select #viewList name=\\\"viewList\\\" [(ngModel)]=\\\"filters.selectedView\\\" [items]=\\\"listData.MyWorkView\\\"\\r\\n                [clearable]=\\\"false\\\" style=\\\"width:200px\\\" (change)=\\\"onViewChange($event)\\\" [actionType]=\\\"filterDropdownActionType\\\"\\r\\n                secureComponent></lf-select>\\r\\n        </lf-form-input>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-3\\\">\\r\\n        <label i18n=\\\"@@mywork.statuscount.label.applicantstatuses\\\">Applicant Statuses</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-12 ls-status-filters\\\">\\r\\n        <lf-split-infobutton *ngFor=\\\"let status of applicantStatusList; let index=index\\\" [id]=\\\"status.statusType\\\"\\r\\n            [name]=\\\"'policy_status_' + status.statusType\\\" [label]=\\\"status.header\\\" [model]=\\\"status.statusList\\\"\\r\\n            [selectedMenuItemId]=\\\"filters.selectedRanges[index]\\\" [selected]=\\\"status.statusType==filters.selectedStatusCount.statusType\\\"\\r\\n            (onClick)=\\\"onStatusSelected($event)\\\">\\r\\n        </lf-split-infobutton>\\r\\n    </div>\\r\\n</div>\"","import { Component, Injector, Injectable } from '@angular/core';\n\nimport { ViewModel } from 'life-core/view-model';\nimport { DropdownActionType } from 'life-core/component/input';\nimport { AppSession } from 'ls-core/session/app-session';\nimport { DataService, DataServiceParams, UIServiceNames, UIServiceMethods } from 'ls-core/service';\nimport { PolicyListFilterModel } from './policy-list-filter-model';\nimport { ApplicantStatusListModel } from '../applicant-status/applicant-status-list.model';\nimport { ApplicantStatusListBuilder } from '../applicant-status/applicant-status-list.builder';\nimport { PolicyListChannels } from '../policy-list-channels';\nimport { PolicyStatusCountsDTO, MetadataItem } from 'ls-core/model';\nimport { PolicyStatusType } from '../policy-status-type';\nimport { ApplicantStatusUtil } from '../applicant-status/applicant-status.util';\nimport { StatusCount } from '../applicant-status/status-count';\nimport { SplitButtonClickEvent, SplitButtonMenuClickEvent } from 'life-core/component/button';\nimport { IMessagingService, MessagingService } from 'life-core/messaging';\nimport { TabStateManager, TabStateValueAccessor } from 'life-core/util';\nimport { TabHomeDataKeys } from 'business/home/tab';\nimport { ConvertUtil } from 'life-core/util/lang';\nimport { PolicyViewType } from 'business/shared/view-type/policy-view-type';\n\n@Component({\n    selector: 'policy-list-filter',\n    templateUrl: './policy-list-filter.component.html',\n    styleUrls: ['./policy-list-filter.component.css']\n})\n@Injectable()\nexport class PolicyListFilterComponent extends ViewModel {\n    public filters: PolicyListFilterModel;\n    public applicantStatusList: Array<ApplicantStatusListModel>;\n    public filterDropdownActionType: DropdownActionType = DropdownActionType.Presentation;\n\n    private _appSession: AppSession;\n    private _dataService: DataService;\n    private _messagingService: IMessagingService;\n    private _statusCountList: Array<StatusCount> = [];\n    private _filtersStateValueAccessor: TabStateValueAccessor<PolicyListFilterModel>;\n    private _applicantStatusUtil: ApplicantStatusUtil;\n\n    constructor(\n        injector: Injector,\n        appSession: AppSession,\n        applicantStatusUtil: ApplicantStatusUtil,\n        dataService: DataService,\n        messagingService: MessagingService,\n        tabStateManager: TabStateManager\n    ) {\n        super(injector);\n        this._appSession = appSession;\n        this._dataService = dataService;\n        this._messagingService = messagingService;\n        this.createStateValueAccessors(tabStateManager);\n        this._applicantStatusUtil = applicantStatusUtil;\n    }\n\n    public loadData(): Promise<void> {\n        this.initFilters();\n        this.setResolvedMetaData();\n        this.setResolvedListData();\n        this.setDefaultUser();\n        this.setDefaultView();\n        return this.loadStatuses().then(() => this.publishPolicyFilterModelChange());\n    }\n\n    private initFilters(): void {\n        this.filters = this._filtersStateValueAccessor.hasValue()\n            ? this._filtersStateValueAccessor.getValue()\n            : (this.filters = new PolicyListFilterModel());\n    }\n\n    private setDefaultUser(): void {\n        if (!this._filtersStateValueAccessor.hasValue()) {\n            this.filters.selectedUser = this.getSelectedUserId();\n        }\n    }\n\n    private getSelectedUserId(): number {\n        const selectedUserId = ConvertUtil.toNumber(this._appSession.user.UserId);\n        const selectedUser = this.listData.userList.find(user => user.ExternalCode == selectedUserId);\n        return selectedUser ? selectedUser.ExternalCode : 0;\n    }\n\n    private setDefaultView(): void {\n        if (!this.filters.selectedView) {\n            this.setViewListOption(this.listData['MyWorkViewDefault']);\n        }\n    }\n\n    private setViewListOption(defaultViewMetadata: MetadataItem[]): void {\n        this.filters.selectedView = this.getPolicyViewTypeFromMetadata(defaultViewMetadata);\n    }\n\n    private getPolicyViewTypeFromMetadata(items: MetadataItem[]): PolicyViewType {\n        return items[0].label == 'Applicant' ? PolicyViewType.Applicant : PolicyViewType.Case;\n    }\n\n    public onUserChange(userSelection: Event): void {\n        this.publishPolicyFilterModelChange();\n        this.loadStatuses();\n    }\n\n    public onTeamChange(teamSelection: Event): void {\n        this.publishPolicyFilterModelChange();\n        this.loadStatuses();\n    }\n\n    private publishPolicyFilterModelChange(): void {\n        this._messagingService.publish(PolicyListChannels.PolicyFilterModelChange, this.filters);\n    }\n\n    public onViewChange(viewSelection: Event): void {\n        this.publishCaseViewChange();\n        this.loadStatuses();\n    }\n\n    private publishCaseViewChange(): void {\n        this._messagingService.publish(PolicyListChannels.PolicyCaseViewChange, this.filters);\n    }\n\n    private loadStatuses(): Promise<void> {\n        const serviceParams: DataServiceParams = this.getStatusServiceParams();\n        return this._dataService.getData(serviceParams).then(response => {\n            return this.setupStatuses(response.responsePayload as PolicyStatusCountsDTO);\n        });\n    }\n\n    private setupStatuses(statusCountsDTO: PolicyStatusCountsDTO): void {\n        this._statusCountList = this._applicantStatusUtil.getStatusCountList(statusCountsDTO);\n        this.prepareApplicantStatusList();\n        this.setDefaultSelectedStatusCount();\n        this.setDefaultSelectedStatusRanges();\n    }\n\n    protected getStatusServiceParams(): DataServiceParams {\n        return new DataServiceParams({\n            serviceInterface: UIServiceNames.POLICY_STATUS_COUNTS,\n            serviceMethod: UIServiceMethods.GET_DATA,\n            requestPayload: this.getStatusCountsServicePayload(\n                this.filters.selectedUser,\n                this.filters.selectedTeam,\n                this.filters.selectedView\n            )\n        });\n    }\n\n    private getStatusCountsServicePayload(\n        userId: number,\n        teamId: number,\n        policyViewType: PolicyViewType\n    ): PolicyStatusCountsRequest {\n        const request = new PolicyStatusCountsRequest();\n        if (userId) request.userId = userId;\n        if (teamId) request.teamId = teamId;\n        request.type = policyViewType as number;\n        request.selectedDate = new Date(Date.now());\n        request.selectedDateField = 'ApplicantStatusDate';\n        request.agingRangeResolveType = 'MyWorkAgingRange';\n        return request;\n    }\n\n    private prepareApplicantStatusList(): void {\n        const onStatusAgingRangeChange = (event: SplitButtonMenuClickEvent) => {\n            this.setSelectedStatus(event);\n            this.publishPolicyFilterModelChange();\n        };\n        this.applicantStatusList = [];\n        this._statusCountList.forEach(status => {\n            const applicantStatusModel = new ApplicantStatusListModel();\n            applicantStatusModel.header = this.getStatusDescription(status.statusType);\n            applicantStatusModel.statusList = ApplicantStatusListBuilder.buildApplicantStatusList(\n                status.agingRanges,\n                onStatusAgingRangeChange\n            );\n            applicantStatusModel.statusType = status.statusType;\n            applicantStatusModel.onStatusSelected = this.onStatusSelected;\n            this.applicantStatusList.push(applicantStatusModel);\n        });\n    }\n\n    public onStatusSelected(event: SplitButtonClickEvent): void {\n        this.setSelectedStatus(event);\n        this.publishPolicyFilterModelChange();\n    }\n\n    public setSelectedStatus(event: SplitButtonClickEvent | SplitButtonMenuClickEvent): void {\n        const statusType = parseInt(event.id);\n        const statusSelectedRange = parseInt(event.item.id);\n        this.filters.selectedStatusCount = this.getStatusCountByType(statusType);\n        this.filters.selectedStatusCount.selectedRange = statusSelectedRange;\n        this.filters.selectedRanges[this.getStatusCountIndexByType(statusType)] = statusSelectedRange;\n    }\n\n    private setDefaultSelectedStatusCount(): void {\n        if (!this.filters.selectedStatusCount) {\n            const defaultStatusCount = this.getStatusCountByType(PolicyStatusType.Total);\n            this.filters.selectedStatusCount = defaultStatusCount;\n        }\n    }\n\n    private setDefaultSelectedStatusRanges(): void {\n        if (!this.filters.selectedRanges) {\n            this.filters.selectedRanges = this.applicantStatusList.map(status => parseInt(status.statusList[0].id));\n        }\n    }\n\n    private getStatusCountByType(type: number): StatusCount {\n        return this._statusCountList.find(status => status.statusType == type);\n    }\n\n    private getStatusCountIndexByType(type: number): number {\n        return this._statusCountList.findIndex(status => status.statusType == type);\n    }\n\n    private getStatusDescription(statusType: number): string {\n        return this._applicantStatusUtil.getApplicantStatusLabel(statusType);\n    }\n\n    private createStateValueAccessors(tabStateManager: TabStateManager): void {\n        this._filtersStateValueAccessor = new TabStateValueAccessor<PolicyListFilterModel>(\n            tabStateManager,\n            TabHomeDataKeys.POLICY_LIST_FILTERS\n        );\n    }\n\n    public ngOnDestroy(): void {\n        this._messagingService.closeChannel(PolicyListChannels.PolicyFilterModelChange);\n        this._messagingService.closeChannel(PolicyListChannels.PolicyCaseViewChange);\n        this._filtersStateValueAccessor.setValue(this.filters);\n        super.ngOnDestroy();\n    }\n}\n\nexport class PolicyStatusCountsRequest {\n    public readonly $type: string = 'life.ls.ui.ria.dto.requests.PolicyStatusCountsRequest, LifeSuite.UIServiceDTO';\n    public teamId: number;\n    public userId: number;\n    public type: number;\n    public selectedDate: Date;\n    public selectedDateField: string;\n    public agingRangeResolveType: string;\n}\n","﻿export * from './filter';\r\nexport * from './list';\r\nexport * from './policy-list-tab.component';\r\n","export * from './policy-list.component';\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n    BaseGridColumnsBuilder,\r\n    DataGridColumns,\r\n    CellFormatters,\r\n    GridFilterFrameworkComponentType\r\n} from 'life-core/component/grid';\r\nimport { I18n } from 'life-core/i18n';\r\n\r\nimport { LsCellFormatters } from 'ls-core/component/grid';\r\nimport { PolicyViewType } from 'business/shared/view-type/policy-view-type';\r\n\r\n@Injectable()\r\nexport class PolicyListGridColumnsBuilder extends BaseGridColumnsBuilder {\r\n    private _cellFormatters: CellFormatters;\r\n    private _lsCellFormatters: LsCellFormatters;\r\n\r\n    constructor(cellFormatters: CellFormatters, lsCellFormatters: LsCellFormatters, i18n: I18n) {\r\n        super();\r\n        this._cellFormatters = cellFormatters;\r\n        this._lsCellFormatters = lsCellFormatters;\r\n        this.i18n = i18n;\r\n    }\r\n\r\n    public build(selectedView: PolicyViewType): DataGridColumns {\r\n        this.resetColumns();\r\n        if (selectedView == PolicyViewType.Case) {\r\n            this.getCaseViewGridColumns();\r\n        } else {\r\n            this.getApplicantViewGridColumns();\r\n        }\r\n        return this.columns;\r\n    }\r\n\r\n    private getApplicantViewGridColumns(): void {\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Company', id: 'mywork.applicants.gridheader.companycode' }),\r\n            field: PolicyGridFields.Company,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'mywork.applicants.gridheader.policynumber' }),\r\n            field: PolicyGridFields.PolicyNumber,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Plan Code', id: 'mywork.applicants.gridheader.primaryplancode' }),\r\n            field: PolicyGridFields.PlanCode,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Priority', id: 'mywork.applicants.gridheader.priority' }),\r\n            field: PolicyGridFields.Priority,\r\n            filter: GridFilterFrameworkComponentType.NumericFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Status', id: 'mywork.applicants.gridheader.policystatuscode' }),\r\n            field: PolicyGridFields.Status,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Status Date', id: 'mywork.applicants.gridheader.policystatusdate' }),\r\n            field: PolicyGridFields.StatusDate,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            valueFormatter: this._lsCellFormatters.dateCellFormatter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Name', id: 'mywork.applicants.gridheader.insuredname' }),\r\n            field: PolicyGridFields.InsuredNameFull,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'U/W Amount', id: 'mywork.applicants.gridheader.faceamount' }),\r\n            field: PolicyGridFields.UnderwritingAmount,\r\n            filter: GridFilterFrameworkComponentType.NumericFilter,\r\n            valueFormatter: this._cellFormatters.decimalCellFormatter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Rcv. Date', id: 'mywork.applicants.gridheader.receivedate' }),\r\n            field: PolicyGridFields.ReceivedDate,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            valueFormatter: this._lsCellFormatters.dateCellFormatter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Underwriter', id: 'mywork.applicants.gridheader.underwritername' }),\r\n            field: PolicyGridFields.Underwriter,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({\r\n                value: 'Service Associate',\r\n                id: 'mywork.applicants.gridheader.serviceassociatename'\r\n            }),\r\n            field: PolicyGridFields.ServiceAssociate,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Team', id: 'mywork.applicants.gridheader.teamname' }),\r\n            field: PolicyGridFields.Team,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Agency #', id: 'mywork.applicants.gridheader.agencynumber' }),\r\n            field: PolicyGridFields.Agency,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Last Activity', id: 'mywork.applicants.gridheader.lastactivity' }),\r\n            field: PolicyGridFields.UpdatedDate,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            valueFormatter: this._lsCellFormatters.dateCellFormatter\r\n        });\r\n    }\r\n\r\n    private getCaseViewGridColumns(): void {\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Company', id: 'mywork.applicants.gridheader.companycode' }),\r\n            field: PolicyGridFields.Company,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'mywork.applicants.gridheader.policynumber' }),\r\n            field: PolicyGridFields.PolicyNumber,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Name', id: 'mywork.applicants.gridheader.insuredname' }),\r\n            field: PolicyGridFields.InsuredNameFull,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Rcv. Date', id: 'mywork.applicants.gridheader.receivedate' }),\r\n            field: PolicyGridFields.ReceivedDate,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            valueFormatter: this._lsCellFormatters.dateCellFormatter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Underwriter', id: 'mywork.applicants.gridheader.underwritername' }),\r\n            field: PolicyGridFields.Underwriter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({\r\n                value: 'Service Associate',\r\n                id: 'mywork.applicants.gridheader.serviceassociatename'\r\n            }),\r\n            field: PolicyGridFields.ServiceAssociate,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Team', id: 'mywork.applicants.gridheader.teamname' }),\r\n            field: PolicyGridFields.Team,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Agency #', id: 'mywork.applicants.gridheader.agencynumber' }),\r\n            field: PolicyGridFields.Agency,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Last Activity', id: 'mywork.applicants.gridheader.lastactivity' }),\r\n            field: PolicyGridFields.UpdatedDate,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            valueFormatter: this._lsCellFormatters.dateCellFormatter\r\n        });\r\n    }\r\n}\r\n\r\nconst PolicyGridFields = {\r\n    PolicyNumber: 'PolicyNumber',\r\n    InsuredNameFull: 'InsuredNameFull',\r\n    InsuredLastName: 'InsuredLastName',\r\n    InsuredFirstName: 'InsuredFirstName',\r\n    InsuredMiddleName: 'InsuredMiddleName',\r\n    Company: 'CompanyCode',\r\n    PlanCode: 'PrimaryPlanCode',\r\n    Priority: 'Priority',\r\n    Status: 'ApplicantStatusShort',\r\n    StatusDate: 'ApplicantStatusDate',\r\n    UnderwritingAmount: 'InsuredUnderwritingAmount',\r\n    ReceivedDate: 'AddedDate',\r\n    Underwriter: 'UnderwriterNameShort',\r\n    ServiceAssociate: 'ServiceAssociateNameShort',\r\n    Team: 'TeamName',\r\n    Agency: 'AgencyNumber',\r\n    UpdatedDate: 'UpdatedDate'\r\n};\r\n","module.exports = \"<div class=\\\"d-flex justify-content-start\\\">\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <label for=\\\"labelFor\\\" i18n=\\\"@@policylist.label.status\\\">\\r\\n            Status:\\r\\n        </label>&nbsp;\\r\\n        <div class=\\\"d-inline align-middle\\\">\\r\\n            <span innerHTML={{statusValue}}></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"p-2\\\">\\r\\n        <label for=\\\"labelFor\\\" i18n=\\\"@@policylist.label.range\\\">\\r\\n            Range:\\r\\n        </label>&nbsp;\\r\\n        <div class=\\\"d-inline align-middle\\\">\\r\\n            <span innerHTML={{rangeValue}}></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"ml-auto p-2\\\">\\r\\n        <lf-button id=\\\"openPolicyButton\\\"  label=\\\"Open\\\" i18n-label=\\\"@@general.button.label.open\\\"  (onClick)=\\\"onOpenPolicyButtonClick()\\\"\\r\\n             secureComponent styleClass=\\\"btn btn-primary\\\" [disabled]=\\\"isOpenPolicyButtonDisabled\\\"></lf-button>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row ls-policy-list-grid\\\">\\r\\n    <data-grid style=\\\"width: 100%\\\" [gridOptions]=\\\"gridOptions\\\" (rowClicked)=\\\"onRowClicked($event)\\\" (rowDoubleClicked)=\\\"onRowDoubleClicked($event)\\\"\\r\\n        (filterChanged)=\\\"onFilterChange()\\\">\\r\\n    </data-grid>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <data-grid-status-bar [rowCount]=\\\"rowCount\\\"></data-grid-status-bar>\\r\\n</div>\"","module.exports = \"/* Can redefine any of these variables in the themes by adding !default to the value */\\n/* Fonts */\\n/* Leftnav */\\n/* Navbar */\\n/* Footer */\\n/* Height Calculations */\\n/* Input components */\\n/* Obsolete ConsumerFacing variables\\r\\n\\r\\n$quote-btn-font-size: 23px;\\r\\n$form-quote-bton-font-size: 22px;\\r\\n$radio-checkbox-height: 20px;\\r\\n$radio-checkbox-width: 25px;\\r\\n$form-radius: 25px;\\r\\n$mobile-app-width: 93%;\\r\\n$panel-max-width: 400px;\\r\\n$wrapper-max-width: 1240px;\\r\\n\\r\\n$landing-pg-save-time-font-family: 'Goudy Old Style', Garamond, serif;\\r\\n$quote-font-family: 'Calisto MT', Serif;\\r\\n$invalid-message-font-family: 'adelle-sans', Helvetica, Arial, sans-serif;\\r\\n*/\\n.ls-policy-list-grid {\\n  height: calc(100vh - (283px + ((1.1rem - 16px) * 10)) - 32px); }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9saWZlc3VpdGUtYXBwL2J1c2luZXNzL2hvbWUvcG9saWN5LWxpc3QvbGlzdC9EOlxcY29kZVxcbGlmZXN1aXRlXFxiYXNlXzEwXFxVSVxcSFRNTDVcXExpZmVTdWl0ZS5Bbmd1bGFyL3NyY1xcc3R5bGVzXFxiYXNlXFxoZWxwZXJzXFx2YXJpYWJsZXMuc2NzcyIsInNyYy9saWZlc3VpdGUtYXBwL2J1c2luZXNzL2hvbWUvcG9saWN5LWxpc3QvbGlzdC9EOlxcY29kZVxcbGlmZXN1aXRlXFxiYXNlXzEwXFxVSVxcSFRNTDVcXExpZmVTdWl0ZS5Bbmd1bGFyL3NyY1xcbGlmZXN1aXRlLWFwcFxcYnVzaW5lc3NcXGhvbWVcXHBvbGljeS1saXN0XFxsaXN0XFxwb2xpY3ktbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQSx1RkFBdUY7QUFFdkYsV0FBVztBQVlYLGFBQWE7QUFLYixZQUFZO0FBS1osWUFBWTtBQUdaLHlCQUF5QjtBQUt6QixzQkFBc0I7QUFJdEI7Ozs7Ozs7Ozs7Ozs7O0VBY0U7QUNqREY7RUFDSSw4REFGZ0gsRUFHbkgiLCJmaWxlIjoic3JjL2xpZmVzdWl0ZS1hcHAvYnVzaW5lc3MvaG9tZS9wb2xpY3ktbGlzdC9saXN0L3BvbGljeS1saXN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8kYm9vdHN0cmFwLXNhc3MtdmVyc2lvbjogJzMuMy43JztcclxuLy8kYm9vdHN0cmFwLXNhc3MtaWNvbi1wYXRoOiAnLi9qc3BtX3BhY2thZ2VzL2dpdGh1Yi90d2JzL2Jvb3RzdHJhcC1zYXNzQCcgKyAkYm9vdHN0cmFwLXNhc3MtdmVyc2lvbiArICcvYXNzZXRzL2ZvbnRzL2Jvb3RzdHJhcC8nO1xyXG4vLyRib290c3RyYXAtc2Fzcy1wYXRoOiAnLi4vLi4vanNwbV9wYWNrYWdlcy9naXRodWIvdHdicy9ib290c3RyYXAtc2Fzc0AnICsgJGJvb3RzdHJhcC1zYXNzLXZlcnNpb24gKyAnL2Fzc2V0cy9zdHlsZXNoZWV0cy9ib290c3RyYXAnO1xyXG4vLyRib290c3RyYXAtc2Fzcy12YXJpYWJsZXMtcGF0aDogJy4uLy4uL2pzcG1fcGFja2FnZXMvZ2l0aHViL3R3YnMvYm9vdHN0cmFwLXNhc3NAJyArICRib290c3RyYXAtc2Fzcy12ZXJzaW9uICsgJy9hc3NldHMvc3R5bGVzaGVldHMvYm9vdHN0cmFwL3ZhcmlhYmxlcyc7XHJcblxyXG4vKiBDYW4gcmVkZWZpbmUgYW55IG9mIHRoZXNlIHZhcmlhYmxlcyBpbiB0aGUgdGhlbWVzIGJ5IGFkZGluZyAhZGVmYXVsdCB0byB0aGUgdmFsdWUgKi9cclxuXHJcbi8qIEZvbnRzICovXHJcbiRmb250LXNpemUtYmFzZTogMC43cmVtO1xyXG4kZm9udC1zaXplLXNtYWxsOiAoKCRmb250LXNpemUtYmFzZSAqIDAuOSkpO1xyXG4kZm9udC1zaXplLWxhcmdlOiAoKCRmb250LXNpemUtYmFzZSAqIDEuMikpO1xyXG4kZm9udC1zaXplLWV4dHJhLWxhcmdlOiAoKCRmb250LXNpemUtYmFzZSAqIDUuMikpO1xyXG4kZm9udC1zaXplLWgxOiAoKCRmb250LXNpemUtYmFzZSAqIDIuNikpO1xyXG4kZm9udC1zaXplLWgyOiAoKCRmb250LXNpemUtYmFzZSAqIDIuMTUpKTtcclxuJGZvbnQtc2l6ZS1oMzogKCRmb250LXNpemUtYmFzZSAqIDIpO1xyXG4kZm9udC1zaXplLWg0OiAoKCRmb250LXNpemUtYmFzZSAqIDEuODUpKTtcclxuJGZvbnQtc2l6ZS1oNTogKCgkZm9udC1zaXplLWJhc2UgKiAxLjMpKTtcclxuJGZvbnQtc2l6ZS1oNjogKCgkZm9udC1zaXplLWJhc2UgKiAxLjEpKTtcclxuXHJcbi8qIExlZnRuYXYgKi9cclxuJGxlZnRuYXYtbWF4LXdpZHRoOiAxMi41cmVtO1xyXG4kbGVmdG5hdi1tYXgtd2lkdGgteGw6IDE0cmVtO1xyXG4kbGVmdG5hdi1pY29ucy1vbmx5LXdpZHRoOiAyLjVyZW07XHJcblxyXG4vKiBOYXZiYXIgKi9cclxuJG5hdmJhci1sb2dvLWhlaWdodDogNTBweCAhZGVmYXVsdDtcclxuJG5hdmJhci1sb2dvLXdpZHRoOiAyMDVweCAhZGVmYXVsdDtcclxuJG5hdmJhci1oZWlnaHQ6ICRuYXZiYXItbG9nby1oZWlnaHQgKyA1cHg7XHJcblxyXG4vKiBGb290ZXIgKi9cclxuJGZvb3Rlci1oZWlnaHQ6IDBweDtcclxuXHJcbi8qIEhlaWdodCBDYWxjdWxhdGlvbnMgKi9cclxuJG9mZnNldC1ib3R0b206IDdweDtcclxuJGdyaWQtc3RhdHVzLWJhci1oZWlnaHQ6IDI1cHg7XHJcbiRncmlkLW9mZnNldC1ib3R0b206ICRvZmZzZXQtYm90dG9tICsgJGdyaWQtc3RhdHVzLWJhci1oZWlnaHQ7XHJcblxyXG4vKiBJbnB1dCBjb21wb25lbnRzICovXHJcbiRpbnB1dC1oZWlnaHQ6IDEuNXJlbTtcclxuJGlucHV0LXRleHQtc2l6ZTogMC44cmVtO1xyXG5cclxuLyogT2Jzb2xldGUgQ29uc3VtZXJGYWNpbmcgdmFyaWFibGVzXHJcblxyXG4kcXVvdGUtYnRuLWZvbnQtc2l6ZTogMjNweDtcclxuJGZvcm0tcXVvdGUtYnRvbi1mb250LXNpemU6IDIycHg7XHJcbiRyYWRpby1jaGVja2JveC1oZWlnaHQ6IDIwcHg7XHJcbiRyYWRpby1jaGVja2JveC13aWR0aDogMjVweDtcclxuJGZvcm0tcmFkaXVzOiAyNXB4O1xyXG4kbW9iaWxlLWFwcC13aWR0aDogOTMlO1xyXG4kcGFuZWwtbWF4LXdpZHRoOiA0MDBweDtcclxuJHdyYXBwZXItbWF4LXdpZHRoOiAxMjQwcHg7XHJcblxyXG4kbGFuZGluZy1wZy1zYXZlLXRpbWUtZm9udC1mYW1pbHk6ICdHb3VkeSBPbGQgU3R5bGUnLCBHYXJhbW9uZCwgc2VyaWY7XHJcbiRxdW90ZS1mb250LWZhbWlseTogJ0NhbGlzdG8gTVQnLCBTZXJpZjtcclxuJGludmFsaWQtbWVzc2FnZS1mb250LWZhbWlseTogJ2FkZWxsZS1zYW5zJywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuKi9cclxuIiwiQGltcG9ydCAnLi4vLi4vLi4vLi4vLi4vc3R5bGVzL2Jhc2UvaGVscGVycy92YXJpYWJsZXMnO1xyXG5cclxuJHBvbGljeS1saXN0LWdyaWQtb2Zmc2V0LXRvcDogMjI4cHg7XHJcbiRwb2xpY3ktbGlzdC1ncmlkLXRvcDogJHBvbGljeS1saXN0LWdyaWQtb2Zmc2V0LXRvcCArICRuYXZiYXItaGVpZ2h0O1xyXG4vL25lc3RlZCBjYWxjcyBkbyBub3Qgd29yayBpbiBJRVxyXG4kcG9saWN5LWxpc3QtZ3JpZC1oZWlnaHQ6IGNhbGMoMTAwdmggLSAoI3skcG9saWN5LWxpc3QtZ3JpZC10b3B9ICsgKCgxLjFyZW0gLSAxNnB4KSAqIDEwKSkgLSAjeyRncmlkLW9mZnNldC1ib3R0b219KTtcclxuLmxzLXBvbGljeS1saXN0LWdyaWQge1xyXG4gICAgaGVpZ2h0OiAkcG9saWN5LWxpc3QtZ3JpZC1oZWlnaHQ7XHJcbn1cclxuIl19 */\"","import { Component, Injector, Injectable } from '@angular/core';\r\n\r\nimport { DataGridColumns, BaseInfiniteGridViewModel } from 'life-core/component/grid';\r\n\r\nimport { PolicyProxy, AgingRangeDTO } from 'ls-core/model';\r\nimport { PolicySubscriber } from 'ls-core/session';\r\n\r\nimport { GridDataStateKeys } from 'business/shared/grid';\r\nimport { OpenPolicyDelegate } from 'business/shared/open-policy';\r\nimport { PolicyListGridColumnsBuilder } from './policy-list-grid-columns.builder';\r\nimport { PolicyListGridDataSource } from '../datasource/policy-list-grid-datasource';\r\nimport { PolicyListFilterModel } from '../filter/policy-list-filter-model';\r\nimport { PolicyListChannels } from '../policy-list-channels';\r\nimport { I18n } from 'life-core/i18n';\r\nimport { StatusCount } from 'business/home/policy-list/applicant-status/status-count';\r\nimport { PolicyAgingRangeUtil } from 'business/home/policy-list/applicant-status/policy-aging-range.util';\r\nimport { ApplicantStatusUtil } from 'business/home/policy-list/applicant-status/applicant-status.util';\r\nimport { PolicyStatusType, PolicyAgingRangeType } from 'business/home/policy-list/policy-status-type';\r\n\r\n@Component({\r\n    selector: 'policy-list',\r\n    templateUrl: './policy-list.component.html',\r\n    styleUrls: ['./policy-list.component.scss'],\r\n    providers: [PolicySubscriber, PolicyListGridDataSource, PolicyListGridColumnsBuilder]\r\n})\r\n@Injectable()\r\nexport class PolicyListComponent extends BaseInfiniteGridViewModel<PolicyProxy> {\r\n    public statusValue: string;\r\n    public rangeValue: string;\r\n    public isOpenPolicyButtonDisabled: boolean;\r\n    private _openPolicyDelegate: OpenPolicyDelegate;\r\n    private _applicantStatusUtil: ApplicantStatusUtil;\r\n    private _defaultFilterLabelValue: string;\r\n    constructor(\r\n        injector: Injector,\r\n        gridDataSource: PolicyListGridDataSource,\r\n        gridColumnsBuilder: PolicyListGridColumnsBuilder,\r\n        openPolicyDelegate: OpenPolicyDelegate,\r\n        i18n: I18n\r\n    ) {\r\n        super(injector, gridDataSource, gridColumnsBuilder);\r\n        this._openPolicyDelegate = openPolicyDelegate;\r\n        this.filterModel = new PolicyListFilterModel();\r\n        this.i18n = i18n;\r\n        this._applicantStatusUtil = new ApplicantStatusUtil(i18n);\r\n    }\r\n\r\n    public getGridColumns(): DataGridColumns {\r\n        return this.getGridColumnsBuilder().build(this.filterModel.selectedView);\r\n    }\r\n\r\n    public onOpenPolicyButtonClick(): void {\r\n        this.openSelectedGridRow();\r\n    }\r\n\r\n    protected openSelectedGridRow(): void {\r\n        if (this.anyGridRowsSelected()) {\r\n            this.updateGridRowsState();\r\n            this._openPolicyDelegate.openPolicy(this.selectedGridRows[0]);\r\n        } else {\r\n            this.showNoRowSelectedDialog(\r\n                this.i18n({ value: 'Please select a policy.', id: 'home.policylist.list.alertmsg.selectpolicy' }),\r\n                this.i18n({ value: 'Open Policy', id: 'home.policylist.list.alertmsg.openpolicy' })\r\n            );\r\n        }\r\n    }\r\n\r\n    protected setupData(): void {\r\n        this.setDefaultFilterLabelValue();\r\n    }\r\n\r\n    protected registerFilterChangeHandlers(): void {\r\n        this.subscriptionTracker.track(\r\n            this.messagingService.subscribe(PolicyListChannels.PolicyFilterModelChange, policyListFilterModel => {\r\n                this.onFilterModelReceived(policyListFilterModel);\r\n                this.setApplicantStatusFilterInfo();\r\n            })\r\n        );\r\n        this.subscriptionTracker.track(\r\n            this.messagingService.subscribe(PolicyListChannels.PolicyCaseViewChange, policyListFilterModel => {\r\n                this.onFilterModelReceived(policyListFilterModel, true);\r\n                this.setApplicantStatusFilterInfo();\r\n            })\r\n        );\r\n    }\r\n\r\n    protected getGridStateKey(): string {\r\n        return GridDataStateKeys.POLICY_LIST;\r\n    }\r\n\r\n    protected rowDataMatch(rowData1: PolicyProxy, rowData2: PolicyProxy): boolean {\r\n        // In case view, PolicyPersonId does not exist, use only PolicyId for compare\r\n        return rowData1.PolicyPersonId\r\n            ? rowData1.PolicyId === rowData2.PolicyId && rowData1.PolicyPersonId === rowData2.PolicyPersonId\r\n            : rowData1.PolicyId === rowData2.PolicyId;\r\n    }\r\n\r\n    protected onSelectedGridRowsChange(): void {\r\n        this.isOpenPolicyButtonDisabled = !this.anyGridRowsSelected();\r\n    }\r\n\r\n    private setApplicantStatusFilterInfo(): void {\r\n        const statusCount: StatusCount = this.filterModel.selectedStatusCount;\r\n        if (statusCount) {\r\n            const agingRange: AgingRangeDTO = PolicyAgingRangeUtil.getAgingRangeByType(\r\n                statusCount.agingRanges,\r\n                statusCount.selectedRange\r\n            );\r\n\r\n            this.statusValue =\r\n                statusCount.statusType !== PolicyStatusType.Total\r\n                    ? this._applicantStatusUtil.getApplicantStatusLabel(statusCount.statusType)\r\n                    : this._defaultFilterLabelValue;\r\n\r\n            this.rangeValue =\r\n                agingRange.rangeType !== PolicyAgingRangeType.Total\r\n                    ? PolicyAgingRangeUtil.getAgingRangeLabel(agingRange)\r\n                    : this._defaultFilterLabelValue;\r\n        }\r\n    }\r\n\r\n    private setDefaultFilterLabelValue(): void {\r\n        this._defaultFilterLabelValue = this.i18n({ value: 'All', id: 'policylist.filter.all' });\r\n    }\r\n}\r\n","export const PolicyListChannels = {\r\n    PolicyFilterModelChange: 'policy-filter-model-change',\r\n    PolicyCaseViewChange: 'policy-case-view-change'\r\n};\r\n","module.exports = \"<form ngForm #form=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-11\\\">\\r\\n            <policy-list-filter></policy-list-filter>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <policy-list></policy-list>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"","import { Component, Injector } from '@angular/core';\r\n\r\nimport { SecondaryTabHostViewModel } from 'life-core/component';\r\nimport { AuthorizationProvider } from 'life-core/authorization';\r\n\r\nimport { DefaultAuthorizationProvider } from 'business/shared/authorization/default-authorization.provider';\r\n\r\n@Component({\r\n    selector: 'policy-list-tab',\r\n    templateUrl: './policy-list-tab.component.html',\r\n    providers: [{ provide: AuthorizationProvider, useClass: DefaultAuthorizationProvider }]\r\n})\r\nexport class PolicyListTabComponent extends SecondaryTabHostViewModel {\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n}\r\n","export const PolicyStatusType = {\r\n    Total: 0,\r\n    NewBusiness: 1,\r\n    Pending: 2,\r\n    PendingMail: 3,\r\n    FinalAct: 4,\r\n    Hold: 5,\r\n    ToBeIssued: 6,\r\n    Count: 7\r\n};\r\n\r\nexport const enum PolicyStatusLabelType {\r\n    Total_ShortForm = 'total.short',\r\n    NewBusiness_ShortForm = 'newbusiness.short',\r\n    Pending_ShortForm = 'pending.short',\r\n    PendingMail_ShortForm = 'pendingmail.short',\r\n    FinalAct_ShortForm = 'finalaction.short',\r\n    Hold_ShortForm = 'hold.short',\r\n    ToBeIssued_ShortForm = 'tobeissued.short'\r\n}\r\n\r\nexport const PolicyAgingRangeType = {\r\n    Total: 0,\r\n    Lower: 1,\r\n    MidToLower: 2,\r\n    Middle: 3,\r\n    MidToUpper: 4,\r\n    Upper: 5,\r\n    Highest: 6,\r\n    Count: 7\r\n};\r\n","module.exports = \"<lf-panel header=\\\"Alerts\\\" i18n-header=\\\"@@summary.paneltitle.alerts\\\" [toggleable]=\\\"false\\\" panelType=\\\"primary\\\">\\r\\n    <div class=\\\"row pt-2\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <label i18n=\\\"@@summary.alerts.columnheader.messages\\\">Messages:</label>\\r\\n            <ls-policy-alert iconTitle=\\\"Inbound\\\" i18n-iconTitle=\\\"@@summary.alerts.label.inbound\\\" iconCssClass=\\\"ls-inbound-policy-icon\\\"\\r\\n                [policyCount]=\\\"inboundPolicyCount\\\" description=\\\"Inbox\\\" i18n-description=\\\"@@summary.alerts.description.inbox\\\"\\r\\n                (click)=\\\"onAlertClick('msgInbox')\\\"></ls-policy-alert>\\r\\n\\r\\n            <ls-policy-alert iconTitle=\\\"Outbox\\\" i18n-iconTitle=\\\"@@summary.alerts.label.outbox\\\" iconCssClass=\\\"ls-outbox-policy-icon\\\"\\r\\n                [policyCount]=\\\"outboxPolicyCount\\\" description=\\\"Outbox\\\" i18n-description=\\\"@@summary.alerts.description.outbox\\\"\\r\\n                (click)=\\\"onAlertClick('msgOutbox')\\\"></ls-policy-alert>\\r\\n\\r\\n            <ls-policy-alert iconTitle=\\\"Review\\\" i18n-iconTitle=\\\"@@summary.alerts.label.review\\\" iconCssClass=\\\"ls-review-policy-icon\\\"\\r\\n                [policyCount]=\\\"reviewPolicyCount\\\" description=\\\"Review\\\" i18n-description=\\\"@@summary.alerts.description.review\\\"\\r\\n                (click)=\\\"onAlertClick('msgReview')\\\"></ls-policy-alert>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 lf-dashed-left-border\\\">\\r\\n            <label i18n=\\\"@@summary.alerts.columnheader.pastdue\\\">Past Due Requirements:</label>\\r\\n            <ls-policy-alert iconTitle=\\\"Undewriting\\\" i18n-iconTitle=\\\"@@summary.alerts.label.underwriting\\\" iconCssClass=\\\"ls-underwriting-policy-icon\\\"\\r\\n                [policyCount]=\\\"underwritingPolicyCount\\\" description=\\\"Underwriting\\\" i18n-description=\\\"@@summary.alerts.description.underwriting\\\"\\r\\n                (click)=\\\"onAlertClick('reqUnderwriting')\\\"></ls-policy-alert>\\r\\n\\r\\n            <ls-policy-alert iconTitle=\\\"Post-Issue\\\" i18n-iconTitle=\\\"@@summary.alerts.label.postissue\\\" iconCssClass=\\\"ls-post-issue-policy-icon\\\"\\r\\n                [policyCount]=\\\"postIssuePolicyCount\\\" description=\\\"Post-Issue\\\" i18n-description=\\\"@@summary.alerts.description.postissue\\\"\\r\\n                (click)=\\\"onAlertClick('reqPostIssue')\\\"></ls-policy-alert>\\r\\n\\r\\n            <ls-policy-alert iconTitle=\\\"Pre-Issue\\\" i18n-iconTitle=\\\"@@summary.alerts.label.preissue\\\" iconCssClass=\\\"ls-pre-issue-policy-icon\\\"\\r\\n                [policyCount]=\\\"preIssuePolicyCount\\\" description=\\\"Pre-Issue\\\" i18n-description=\\\"@@summary.alerts.description.preissue\\\"\\r\\n                (click)=\\\"onAlertClick('reqPreIssue')\\\"></ls-policy-alert>\\r\\n        </div>\\r\\n    </div>\\r\\n</lf-panel>\"","import { Component, Injector } from '@angular/core';\r\n\r\nimport { ViewModel } from 'life-core/view-model';\r\nimport { IMessagingService, MessagingService } from 'life-core/messaging';\r\nimport { TabStateManager, TabStateValueAccessor } from 'life-core/util';\r\nimport { TabChannels, TabDescriptorFactory } from 'life-core/component/layout/tabview';\r\nimport { LsTabDescriptorFactory } from 'ui/tabview';\r\n\r\nimport { TasksFilterModel } from 'business/home/tasks/filter';\r\nimport { TabHomeDataKeys } from 'business/home/tab';\r\nimport { SummaryFilterModel } from 'business/home/summary/filter';\r\nimport { TaskFilterService, TaskCounts } from 'business/home/tasks/filter/task-filter.service';\r\nimport { SummaryChannels } from 'business/home/summary/summary-channels';\r\n\r\n@Component({\r\n    selector: 'policy-alerts',\r\n    templateUrl: './policy-alerts.component.html'\r\n})\r\nexport class PolicyAlertsComponent extends ViewModel {\r\n    public inboundPolicyCount: number;\r\n    public underwritingPolicyCount: number;\r\n    public outboxPolicyCount: number;\r\n    public postIssuePolicyCount: number;\r\n    public reviewPolicyCount: number;\r\n    public preIssuePolicyCount: number;\r\n\r\n    private _messagingService: IMessagingService;\r\n    private _taskFilterService: TaskFilterService;\r\n    private _filtersStateValueAccessor: TabStateValueAccessor<TasksFilterModel>;\r\n    private _taskFilters: TasksFilterModel;\r\n    private _summaryFilterModel: SummaryFilterModel;\r\n    private _tabDescriptorFactory: LsTabDescriptorFactory;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        messagingService: MessagingService,\r\n        taskFilterService: TaskFilterService,\r\n        tabStateManager: TabStateManager,\r\n        tabDescriptorFactory: TabDescriptorFactory\r\n    ) {\r\n        super(injector);\r\n        this._messagingService = messagingService;\r\n        this._taskFilterService = taskFilterService;\r\n        this.createStateValueAccessors(tabStateManager);\r\n        this._tabDescriptorFactory = tabDescriptorFactory as LsTabDescriptorFactory;\r\n        this._taskFilters = new TasksFilterModel();\r\n    }\r\n\r\n    private createStateValueAccessors(tabStateManager: TabStateManager): void {\r\n        this._filtersStateValueAccessor = new TabStateValueAccessor<TasksFilterModel>(\r\n            tabStateManager,\r\n            TabHomeDataKeys.TASK_LIST_FILTERS\r\n        );\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        super.ngAfterViewInit();\r\n        this.registerHandlers();\r\n    }\r\n\r\n    public registerHandlers(): void {\r\n        this.subscriptionTracker.track(\r\n            this._messagingService.subscribe(SummaryChannels.UserTeamChange, summaryFilterModel =>\r\n                this.onSummaryFilterModelReceived(summaryFilterModel)\r\n            )\r\n        );\r\n    }\r\n\r\n    public onSummaryFilterModelReceived(summaryFilterModel: SummaryFilterModel): void {\r\n        this._summaryFilterModel = summaryFilterModel;\r\n        this.getPolicyAlerts().then(alerts => {\r\n            this.updateAlerts(alerts);\r\n        });\r\n    }\r\n\r\n    private getPolicyAlerts(): Promise<TaskCounts> {\r\n        return this._taskFilterService.loadTaskCounts(this._summaryFilterModel);\r\n    }\r\n\r\n    private updateAlerts(alerts: TaskCounts): void {\r\n        this.inboundPolicyCount = alerts.msgInbox;\r\n        this.underwritingPolicyCount = alerts.reqUnderwriting;\r\n        this.outboxPolicyCount = alerts.msgOutbox;\r\n        this.postIssuePolicyCount = alerts.reqPostIssue;\r\n        this.reviewPolicyCount = alerts.msgReview;\r\n        this.preIssuePolicyCount = alerts.reqPreIssue;\r\n    }\r\n\r\n    public onAlertClick(taskType: string): void {\r\n        this.setTaskTabFilters(taskType);\r\n        this.navigateToTaskTab();\r\n    }\r\n\r\n    private setTaskTabFilters(taskType: string): void {\r\n        this._taskFilters.selectedTaskFilterType = taskType;\r\n        this._taskFilters.selectedUser = this._summaryFilterModel.selectedUser;\r\n        this._taskFilters.selectedTeam = this._summaryFilterModel.selectedTeam;\r\n        this._filtersStateValueAccessor.setValue(this._taskFilters);\r\n    }\r\n\r\n    private navigateToTaskTab(): void {\r\n        const tabTasks = this._tabDescriptorFactory.createSecondaryTabDescriptorTasks();\r\n        tabTasks.selected = true;\r\n        this._messagingService.publish(TabChannels.SelectSecondaryTab, tabTasks);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LsComponentsModule } from 'ls-core/component/ls-components.module';\r\nimport { PolicyAlertsComponent } from './policy-alerts.component';\r\nimport { TaskFilterService } from 'business/home/tasks/filter/task-filter.service';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, LsComponentsModule],\r\n    declarations: [PolicyAlertsComponent],\r\n    exports: [PolicyAlertsComponent],\r\n    providers: [TaskFilterService]\r\n})\r\nexport class PolicyAlertsModule {}\r\n","module.exports = \"<form ngForm #form=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row lf-dashed-bottom-border\\\">\\r\\n        <div class=\\\"col-3\\\">\\r\\n            <lf-form-input [control]=\\\"userList\\\" label=\\\"User\\\" i18n-label=\\\"@@mywork.applicantscases.label.user\\\">\\r\\n                <lf-select #userList name=\\\"userList\\\" [(ngModel)]=\\\"filters.selectedUser\\\" [items]=\\\"listData.userList | listItems:'CodeValue':'ExternalCode'\\\"\\r\\n                    style=\\\"width:200px\\\" (change)=\\\"onUserChange($event)\\\" [actionType]=\\\"filterDropdownActionType\\\"\\r\\n                    secureComponent></lf-select>\\r\\n            </lf-form-input>\\r\\n        </div>\\r\\n        <div class=\\\"col-3\\\">\\r\\n            <lf-form-input [control]=\\\"teamList\\\" label=\\\"Team\\\" i18n-label=\\\"@@mywork.applicantscases.label.team\\\">\\r\\n                <lf-select #teamList name=\\\"teamList\\\" [(ngModel)]=\\\"filters.selectedTeam\\\" [items]=\\\"listData.teamList | listItems:'CodeValue':'CodeId'\\\"\\r\\n                    style=\\\"width:200px\\\" (change)=\\\"onTeamChange($event)\\\" [actionType]=\\\"filterDropdownActionType\\\"\\r\\n                    secureComponent></lf-select>\\r\\n            </lf-form-input>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"","import { Component, Injector } from '@angular/core';\r\n\r\nimport { ViewModel } from 'life-core/view-model';\r\nimport { AppSession } from 'ls-core/session';\r\nimport { TabStateValueAccessor, TabStateManager } from 'life-core/util';\r\nimport { ConvertUtil } from 'life-core/util/lang';\r\nimport { IMessagingService, MessagingService } from 'life-core/messaging';\r\nimport { DropdownActionType } from 'life-core/component/input';\r\n\r\nimport { TabHomeDataKeys } from 'business/home/tab';\r\nimport { SummaryChannels } from 'business/home/summary/summary-channels';\r\nimport { SummaryFilterModel } from './summary-filter.model';\r\n\r\n@Component({\r\n    selector: 'summary-filter',\r\n    templateUrl: './summary-filter.component.html'\r\n})\r\nexport class SummaryFilterComponent extends ViewModel {\r\n    public filters: SummaryFilterModel;\r\n    public filterDropdownActionType: DropdownActionType = DropdownActionType.Presentation;\r\n\r\n    private _appSession: AppSession;\r\n    private _filtersStateValueAccessor: TabStateValueAccessor<SummaryFilterModel>;\r\n    private _messagingService: IMessagingService;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        appSession: AppSession,\r\n        tabStateManager: TabStateManager,\r\n        messagingService: MessagingService\r\n    ) {\r\n        super(injector);\r\n        this._appSession = appSession;\r\n        this.createStateValueAccessors(tabStateManager);\r\n        this._messagingService = messagingService;\r\n    }\r\n\r\n    private createStateValueAccessors(tabStateManager: TabStateManager): void {\r\n        this._filtersStateValueAccessor = new TabStateValueAccessor<SummaryFilterModel>(\r\n            tabStateManager,\r\n            TabHomeDataKeys.SUMMARY_FILTERS\r\n        );\r\n    }\r\n\r\n    public loadData(): Promise<void> {\r\n        this.initFilters();\r\n        this.setResolvedListData();\r\n        this.setDefaultUser();\r\n        this.publishSummaryFilterModel();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private initFilters(): void {\r\n        this.filters = this._filtersStateValueAccessor.hasValue()\r\n            ? this._filtersStateValueAccessor.getValue()\r\n            : (this.filters = new SummaryFilterModel());\r\n    }\r\n\r\n    private setDefaultUser(): void {\r\n        if (!this._filtersStateValueAccessor.hasValue()) {\r\n            this.filters.selectedUser = ConvertUtil.toNumber(this._appSession.user.UserId);\r\n        }\r\n    }\r\n\r\n    public onUserChange(userSelection: Event): void {\r\n        this.publishSummaryFilterModel();\r\n    }\r\n\r\n    public onTeamChange(teamSelection: Event): void {\r\n        this.publishSummaryFilterModel();\r\n    }\r\n\r\n    private publishSummaryFilterModel(): void {\r\n        this._messagingService.publish(SummaryChannels.UserTeamChange, this.filters);\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this._messagingService.closeChannel(SummaryChannels.UserTeamChange);\r\n        this._filtersStateValueAccessor.setValue(this.filters);\r\n        super.ngOnDestroy();\r\n    }\r\n}\r\n","import { TasksFilterModel } from 'business/home/tasks/filter';\r\n\r\nexport class SummaryFilterModel extends TasksFilterModel {}\r\n","export * from './summary.component';\r\nexport * from './summary-channels';\r\nexport * from './summary.module';\r\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport { IGetRowsParams } from 'ag-grid-community';\r\n\r\nimport { IDataGridContext, IInfiniteGridDatasource, GridState } from 'life-core/component/grid';\r\n\r\nimport {\r\n    DataServiceParams,\r\n    UIServiceNames,\r\n    UIServiceMethods,\r\n    PagedDataRequest,\r\n    CompositeFilter\r\n} from 'ls-core/service';\r\nimport { PolicyProxy } from 'ls-core/model';\r\n\r\nimport { SummaryFilterModel } from 'business/home/summary/filter/summary-filter.model';\r\nimport { BaseGridDataSource } from 'business/shared/grid';\r\n\r\nimport { RecentlyAccessedCasesFilterBuilder } from '../recently-accessed-cases-filter.builder';\r\n\r\n@Injectable()\r\nexport class RecentlyAccessedCasesGridDataSource extends BaseGridDataSource implements IInfiniteGridDatasource {\r\n    private _summaryFilterModel: SummaryFilterModel;\r\n    private _recentlyAccessedCasesFilterBuilder: RecentlyAccessedCasesFilterBuilder;\r\n\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n        this._recentlyAccessedCasesFilterBuilder = new RecentlyAccessedCasesFilterBuilder();\r\n    }\r\n\r\n    public updateFilter(summaryFilterModel: SummaryFilterModel): void {\r\n        this._summaryFilterModel = summaryFilterModel;\r\n    }\r\n\r\n    public getRows(params: IGetRowsParams): void {\r\n        const serviceParams: DataServiceParams = this.getRowsServiceParams(params);\r\n        this.dataService.getData(serviceParams).then(response => {\r\n            const rows = response.responsePayload ? (response.responsePayload as Array<PolicyProxy>) : [];\r\n            params.successCallback(rows, rows.length);\r\n            (params.context as IDataGridContext).hostComponent.onGetRowsComplete({\r\n                gridState: new GridState({\r\n                    sortModel: params.sortModel,\r\n                    filterModel: params.filterModel\r\n                }),\r\n                rows: rows,\r\n                rowCount: rows.length\r\n            });\r\n        });\r\n    }\r\n\r\n    protected getRowsServiceParams(params: IGetRowsParams): any {\r\n        return new DataServiceParams({\r\n            serviceInterface: UIServiceNames.RECENT_POLICIES_LIST,\r\n            serviceMethod: UIServiceMethods.GET_POLICY_LIST_DATA,\r\n            requestPayload: this.getRowsPayLoad(params)\r\n        });\r\n    }\r\n\r\n    // we do not need count here\r\n    // not used\r\n    protected getRowCountServiceParams(params: IGetRowsParams): DataServiceParams {\r\n        return null;\r\n    }\r\n\r\n    protected getFilterCriterion(): CompositeFilter {\r\n        return this._recentlyAccessedCasesFilterBuilder.buildFilter(this._summaryFilterModel);\r\n    }\r\n\r\n    private getRowsPayLoad(params: IGetRowsParams): PagedDataRequest {\r\n        const filterCriterion = this.getFilterCriterion();\r\n        const numOfItems = params.endRow - params.startRow;\r\n        const pagedDataRequest = new PagedDataRequest({\r\n            startIndex: params.startRow,\r\n            numItemsToFetch: numOfItems,\r\n            filters: filterCriterion !== undefined ? filterCriterion.filters : []\r\n        });\r\n        return pagedDataRequest;\r\n    }\r\n}\r\n","﻿import { CompositeFilter, NumericFilter, BooleanFilter } from 'ls-core/service';\r\n\r\nimport { SummaryFilterModel } from 'business/home/summary/filter';\r\n\r\nexport class RecentlyAccessedCasesFilterBuilder {\r\n    private _summaryFilterModel: SummaryFilterModel;\r\n\r\n    public buildFilter(summaryFilterModel: SummaryFilterModel): CompositeFilter {\r\n        this._summaryFilterModel = summaryFilterModel;\r\n        const filter = new CompositeFilter([]);\r\n        filter.filters.push(this.getCasesFilter());\r\n        if (this.isUserSelected()) filter.filters.push(this.getUserFilter());\r\n        if (this.isTeamSelected()) filter.filters.push(this.getTeamFilter());\r\n        return filter;\r\n    }\r\n\r\n    private getCasesFilter(): BooleanFilter {\r\n        return new BooleanFilter('PrimaryInsuredFlag', true);\r\n    }\r\n\r\n    private isUserSelected(): boolean {\r\n        return this._summaryFilterModel.selectedUser != undefined && this._summaryFilterModel.selectedUser != 0;\r\n    }\r\n\r\n    private isTeamSelected(): boolean {\r\n        return this._summaryFilterModel.selectedTeam != undefined && this._summaryFilterModel.selectedTeam != 0;\r\n    }\r\n\r\n    private getUserFilter(): NumericFilter {\r\n        return new NumericFilter(\r\n            'RfUserId',\r\n            this._summaryFilterModel.selectedUser,\r\n            this._summaryFilterModel.selectedUser\r\n        );\r\n    }\r\n\r\n    private getTeamFilter(): NumericFilter {\r\n        return new NumericFilter(\r\n            'TeamId',\r\n            this._summaryFilterModel.selectedTeam,\r\n            this._summaryFilterModel.selectedTeam\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BaseGridColumnsBuilder, DataGridColumns } from 'life-core/component/grid';\r\nimport { I18n } from 'life-core/i18n';\r\n\r\n@Injectable()\r\nexport class RecentlyAccessedCasesGridColumnsBuilder extends BaseGridColumnsBuilder {\r\n    constructor(i18n: I18n) {\r\n        super();\r\n        this.i18n = i18n;\r\n    }\r\n\r\n    public build(): DataGridColumns {\r\n        this.getRecentlyAccessedCasesGridColumns();\r\n        return this.columns;\r\n    }\r\n\r\n    private getRecentlyAccessedCasesGridColumns(): void {\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'summary.recentcases.gridheader.policynumber' }),\r\n            field: RecentlyAccessedCasesGridFields.PolicyNumber,\r\n            suppressFilter: true,\r\n            suppressSorting: true\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Applicant', id: 'summary.recentcases.gridheader.insuredname' }),\r\n            field: RecentlyAccessedCasesGridFields.InsuredNameFull,\r\n            suppressFilter: true,\r\n            suppressSorting: true\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Status', id: 'summary.recentcases.gridheader.policystatuscode' }),\r\n            field: RecentlyAccessedCasesGridFields.Status,\r\n            suppressFilter: true,\r\n            suppressSorting: true\r\n        });\r\n    }\r\n}\r\n\r\nconst RecentlyAccessedCasesGridFields = {\r\n    PolicyNumber: 'PolicyNumber',\r\n    InsuredNameFull: 'InsuredNameFull',\r\n    Status: 'ApplicantStatus'\r\n};\r\n","module.exports = \".panelRecentlyAccessed.ui-panel .ui-panel-content {\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9saWZlc3VpdGUtYXBwL2J1c2luZXNzL2hvbWUvc3VtbWFyeS9yZWNlbnRseS1hY2Nlc3NlZC1jYXNlcy9yZWNlbnRseS1hY2Nlc3NlZC1jYXNlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztDQUNkIiwiZmlsZSI6InNyYy9saWZlc3VpdGUtYXBwL2J1c2luZXNzL2hvbWUvc3VtbWFyeS9yZWNlbnRseS1hY2Nlc3NlZC1jYXNlcy9yZWNlbnRseS1hY2Nlc3NlZC1jYXNlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhbmVsUmVjZW50bHlBY2Nlc3NlZC51aS1wYW5lbCAudWktcGFuZWwtY29udGVudCB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<lf-panel styleClass=\\\"panelRecentlyAccessed\\\" header=\\\"Recently Accessed Cases\\\" i18n-header=\\\"@@summary.paneltitle.recentcases\\\"\\r\\n    [toggleable]=\\\"false\\\" panelType=\\\"primary\\\">\\r\\n    <data-grid style=\\\"width: 100%; height: 200px;\\\" [gridOptions]=\\\"gridOptions\\\" (rowClicked)=\\\"onRowClicked($event)\\\" (rowDoubleClicked)=\\\"onRowDoubleClicked($event)\\\">\\r\\n    </data-grid>\\r\\n    <data-grid-status-bar [rowCount]=\\\"rowCount\\\"></data-grid-status-bar>\\r\\n</lf-panel>\"","import { Component, Injector, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { BaseInfiniteGridViewModel } from 'life-core/component/grid';\r\n\r\nimport { PolicyProxy } from 'ls-core/model';\r\n\r\nimport { SummaryFilterModel } from 'business/home/summary/filter/summary-filter.model';\r\nimport { SummaryChannels } from 'business/home/summary/summary-channels';\r\nimport { OpenPolicyDelegate } from 'business/shared/open-policy';\r\nimport { GridDataStateKeys } from 'business/shared/grid';\r\n\r\nimport { RecentlyAccessedCasesGridColumnsBuilder } from './recently-accessed-cases-grid-columns.builder';\r\nimport { RecentlyAccessedCasesGridDataSource } from './datasource/recently-accessed-cases-grid-datasource';\r\n\r\n@Component({\r\n    selector: 'recently-accessed-cases',\r\n    templateUrl: './recently-accessed-cases.component.html',\r\n    styleUrls: ['./recently-accessed-cases.component.css'],\r\n    providers: [RecentlyAccessedCasesGridColumnsBuilder, RecentlyAccessedCasesGridDataSource],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class RecentlyAccessedCasesComponent extends BaseInfiniteGridViewModel<PolicyProxy> {\r\n    private _openPolicyDelegate: OpenPolicyDelegate;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        gridDataSource: RecentlyAccessedCasesGridDataSource,\r\n        gridColumnsBuilder: RecentlyAccessedCasesGridColumnsBuilder,\r\n        openPolicyDelegate: OpenPolicyDelegate\r\n    ) {\r\n        super(injector, gridDataSource, gridColumnsBuilder);\r\n        this._openPolicyDelegate = openPolicyDelegate;\r\n        this.filterModel = new SummaryFilterModel();\r\n        this.setGridOptions();\r\n        this.enableRowDetail = false;\r\n    }\r\n\r\n    public onRowClicked($event: any): void {\r\n        super.onRowClicked($event);\r\n        this.openSelectedGridRow();\r\n    }\r\n\r\n    protected openSelectedGridRow(): void {\r\n        if (this.anyGridRowsSelected()) {\r\n            this.updateGridRowsState();\r\n            this._openPolicyDelegate.openPolicy(this.selectedGridRows[0]);\r\n        }\r\n    }\r\n\r\n    protected registerFilterChangeHandlers(): void {\r\n        this.subscriptionTracker.track(\r\n            this.messagingService.subscribe(SummaryChannels.UserTeamChange, (summaryFilterModel: SummaryFilterModel) =>\r\n                this.onFilterModelReceived(summaryFilterModel)\r\n            )\r\n        );\r\n    }\r\n\r\n    protected getGridStateKey(): string {\r\n        return GridDataStateKeys.RECENTLY_ACCESSED_CASES;\r\n    }\r\n\r\n    protected getHeaderRowsCount(): number {\r\n        return 1;\r\n    }\r\n\r\n    protected rowDataMatch(rowData1: PolicyProxy, rowData2: PolicyProxy): boolean {\r\n        return rowData1.PolicyId === rowData2.PolicyId;\r\n    }\r\n\r\n    private setGridOptions(): void {\r\n        this.cacheBlockSize = 10;\r\n        this.enableSorting = false;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LsComponentsModule } from 'ls-core/component/ls-components.module';\r\nimport { RecentlyAccessedCasesComponent } from './recently-accessed-cases.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, LsComponentsModule],\r\n    declarations: [RecentlyAccessedCasesComponent],\r\n    exports: [RecentlyAccessedCasesComponent]\r\n})\r\nexport class RecentlyAccessedCasesModule {}\r\n","export const SummaryChannels = {\r\n    UserTeamChange: 'user-team-changed'\r\n};\r\n","module.exports = \"<form role=\\\"form\\\" class=\\\"form\\\" role=\\\"form\\\" class=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <summary-filter></summary-filter>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-5\\\">\\r\\n                    <policy-alerts></policy-alerts>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <recently-accessed-cases></recently-accessed-cases>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"","import { Component, Injector } from '@angular/core';\r\n\r\nimport { SecondaryTabHostViewModel } from 'life-core/component';\r\nimport { AuthorizationProvider } from 'life-core/authorization';\r\n\r\nimport { DefaultAuthorizationProvider } from 'business/shared/authorization/default-authorization.provider';\r\n\r\n@Component({\r\n    selector: 'summary-tab',\r\n    templateUrl: './summary.component.html',\r\n    providers: [{ provide: AuthorizationProvider, useClass: DefaultAuthorizationProvider }]\r\n})\r\nexport class SummaryTabComponent extends SecondaryTabHostViewModel {\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LsComponentsModule } from 'ls-core/component/ls-components.module';\r\nimport { SummaryTabComponent } from './summary.component';\r\nimport { SummaryFilterComponent } from './filter/summary-filter.component';\r\nimport { RecentlyAccessedCasesModule } from './recently-accessed-cases/recently-accessed-cases.module';\r\nimport { PolicyAlertsModule } from './alerts/policy-alerts.module';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, LsComponentsModule, RecentlyAccessedCasesModule, PolicyAlertsModule],\r\n    declarations: [SummaryTabComponent, SummaryFilterComponent],\r\n    exports: [SummaryTabComponent]\r\n})\r\nexport class SummaryModule {}\r\n","module.exports = \"<tabview-home></tabview-home>\"","﻿import { Component, Injector } from '@angular/core';\r\n\r\nimport { PrimaryTabHostViewModel } from 'life-core/component/layout/tabview';\r\n\r\n@Component({\r\n    selector: 'tab-home',\r\n    templateUrl: './tab-home.component.html'\r\n})\r\nexport class TabHomeComponent extends PrimaryTabHostViewModel {\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n}\r\n","module.exports = \"<lf-routedTabView id=\\\"tabViewHome\\\" tabViewType=\\\"secondary\\\" [tabs]=\\\"tabsData$\\\" [initialSelectedIndex]=\\\"initialSelectedIndex$\\\"\\r\\n controlClose=\\\"true\\\" (onClose)=\\\"onTabClose($event)\\\" (onChange)=\\\"onTabSelectionChange($event)\\\">\\r\\n\\r\\n\\t<router-outlet></router-outlet>\\r\\n\\r\\n</lf-routedTabView>\"","﻿import { Component, Injector } from '@angular/core';\r\n\r\nimport { TabDescriptor, SecondaryTabViewHostViewModel } from 'life-core/component/layout/tabview';\r\nimport { LsTabDescriptorFactory } from 'ui/tabview';\r\n\r\n@Component({\r\n    selector: 'tabview-home',\r\n    templateUrl: './tabview-home.component.html'\r\n})\r\nexport class TabViewHomeComponent extends SecondaryTabViewHostViewModel {\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    protected get tabViewId(): string {\r\n        return 'tabViewHome';\r\n    }\r\n\r\n    protected getStaticTabs(): TabDescriptor[] {\r\n        const tabDescriptorFactory = this.tabDescriptorFactory as LsTabDescriptorFactory;\r\n        const tabWorkItems = tabDescriptorFactory.createSecondaryTabDescriptorWorkItems();\r\n        const tabTasks = tabDescriptorFactory.createSecondaryTabDescriptorTasks();\r\n        const tabSummary = tabDescriptorFactory.createSecondaryTabDescriptorSummary();\r\n        tabWorkItems.selected = true;\r\n        return [tabSummary, tabWorkItems, tabTasks];\r\n    }\r\n}\r\n","export * from './task-list-grid-datasource';\r\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport { IGetRowsParams } from 'ag-grid-community';\r\n\r\nimport { IInfiniteGridDatasource } from 'life-core/component/grid';\r\n\r\nimport {\r\n    DataServiceParams,\r\n    TaskPagedDataRequest,\r\n    UIServiceNames,\r\n    UIServiceMethods,\r\n    CompositeFilter\r\n} from 'ls-core/service';\r\n\r\nimport { BaseGridDataSource } from 'business/shared/grid/base-grid-data-source';\r\n\r\nimport { TasksFilterModel } from '../filter';\r\nimport { TaskFilterType } from '../filter';\r\nimport { TaskType } from '../task-type';\r\n\r\n@Injectable()\r\nexport class TaskListGridDataSource extends BaseGridDataSource implements IInfiniteGridDatasource {\r\n    private _taskListFilterModel: TasksFilterModel;\r\n\r\n    constructor(injector: Injector, taskFilterModel: TasksFilterModel) {\r\n        super(injector);\r\n        this._taskListFilterModel = taskFilterModel;\r\n    }\r\n\r\n    public updateFilter(tasksListFilterModel: TasksFilterModel): void {\r\n        this._taskListFilterModel = tasksListFilterModel;\r\n        this.resetRowCount();\r\n    }\r\n\r\n    protected getRowsServiceParams(params: IGetRowsParams): DataServiceParams {\r\n        return new DataServiceParams({\r\n            serviceInterface: UIServiceNames.TASK_LIST_DATA,\r\n            serviceMethod: UIServiceMethods.GET_DATA,\r\n            requestPayload: this.getRowsPayLoad(params)\r\n        });\r\n    }\r\n\r\n    protected getRowCountServiceParams(params: IGetRowsParams): DataServiceParams {\r\n        return new DataServiceParams({\r\n            serviceInterface: UIServiceNames.TASK_LIST_DATA,\r\n            serviceMethod: UIServiceMethods.GET_COUNT,\r\n            requestPayload: this.getRowCountPayLoad(params)\r\n        });\r\n    }\r\n\r\n    private getRowsPayLoad(params: IGetRowsParams): TaskPagedDataRequest {\r\n        const filterCriterion = this.getFilterCriterion(params.filterModel);\r\n        const numOfItems = params.endRow - params.startRow;\r\n        const request = this.buildRequestPayload(filterCriterion);\r\n        request.startIndex = params.startRow;\r\n        request.numItemsToFetch = numOfItems;\r\n        request.sortFields = this.getSortFieldsForSortModel(params.sortModel);\r\n        return request;\r\n    }\r\n\r\n    private getRowCountPayLoad(params: IGetRowsParams): TaskPagedDataRequest {\r\n        const filterCriterion = this.getFilterCriterion(params.filterModel);\r\n        return this.buildRequestPayload(filterCriterion);\r\n    }\r\n\r\n    private buildRequestPayload(filterCriterion: CompositeFilter): TaskPagedDataRequest {\r\n        const filterTypeLabel = this.getTaskFilterTypeKeyByValue(this._taskListFilterModel.selectedTaskFilterType);\r\n        const request = new TaskPagedDataRequest({\r\n            userId: this._taskListFilterModel.selectedUser,\r\n            teamId: this._taskListFilterModel.selectedTeam,\r\n            taskType: TaskType[filterTypeLabel],\r\n            filters: filterCriterion ? filterCriterion.filters : []\r\n        });\r\n        return request;\r\n    }\r\n\r\n    private getTaskFilterTypeKeyByValue(value: string): string {\r\n        return Object.keys(TaskFilterType).find(key => TaskFilterType[key] === value);\r\n    }\r\n}\r\n","export * from './task-filter.component';\r\nexport * from './tasks-filter.model';\r\nexport * from './task-filter-type';\r\n","export const TaskFilterType = {\r\n    Inbox: 'msgInbox',\r\n    Outbox: 'msgOutbox',\r\n    PendingMail: 'pendingMail',\r\n    ReqToOrder: 'reqToOrder',\r\n    PastDueUWReq: 'reqUnderwriting',\r\n    CaseMgrRevMsg: 'msgReview',\r\n    Diary: 'diaryActivity',\r\n    PastDuePreIssue: 'reqPreIssue',\r\n    PastDuePostIssue: 'reqPostIssue',\r\n    ImgRecd: 'imageReceived',\r\n    MIB2Yr: 'mibTwoYr'\r\n};\r\n","module.exports = \".ls-task-filters {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: space-between;\\r\\n    min-height: 50px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9saWZlc3VpdGUtYXBwL2J1c2luZXNzL2hvbWUvdGFza3MvZmlsdGVyL3Rhc2stZmlsdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2Qsb0JBQW9CO0lBQ3BCLCtCQUErQjtJQUMvQixpQkFBaUI7Q0FDcEIiLCJmaWxlIjoic3JjL2xpZmVzdWl0ZS1hcHAvYnVzaW5lc3MvaG9tZS90YXNrcy9maWx0ZXIvdGFzay1maWx0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5scy10YXNrLWZpbHRlcnMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBtaW4taGVpZ2h0OiA1MHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<form ngForm #form=\\\"ngForm\\\" role=\\\"form\\\" class=\\\"form\\\" autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-3\\\">\\r\\n            <lf-form-input [control]=\\\"userList\\\" label=\\\"User\\\" i18n-label=\\\"@@mywork.applicantscases.label.user\\\">\\r\\n                <lf-select #userList name=\\\"userList\\\" [(ngModel)]=\\\"filters.selectedUser\\\" [items]=\\\"listData.userList | listItems:'CodeValue':'ExternalCode'\\\"\\r\\n                    style=\\\"width:200px\\\" (change)=\\\"onUserChange($event)\\\" [actionType]=\\\"filterDropdownActionType\\\"\\r\\n                    secureComponent></lf-select>\\r\\n            </lf-form-input>\\r\\n        </div>\\r\\n        <div class=\\\"col-3\\\">\\r\\n            <lf-form-input [control]=\\\"teamList\\\" label=\\\"Team\\\" i18n-label=\\\"@@mywork.applicantscases.label.team\\\">\\r\\n                <lf-select #teamList name=\\\"teamList\\\" [(ngModel)]=\\\"filters.selectedTeam\\\" [items]=\\\"listData.teamList | listItems:'CodeValue':'CodeId'\\\"\\r\\n                    style=\\\"width:200px\\\" (change)=\\\"onTeamChange($event)\\\" [actionType]=\\\"filterDropdownActionType\\\"\\r\\n                    secureComponent></lf-select>\\r\\n            </lf-form-input>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 ls-task-filters\\\">\\r\\n            <lf-info-button *ngFor=\\\"let taskFilter of taskFilterTypes; let index=index\\\" [id]=\\\"taskFilter.type\\\" [label]=\\\"taskFilter.header\\\"\\r\\n                [infoLabel]=\\\"taskFilter.count\\\" [selected]=\\\"taskFilter.type==filters.selectedTaskFilterType\\\" [style]=\\\"{width: taskFilter.buttonWidth +'px'}\\\"\\r\\n                (onClick)=\\\"onFilterTypeClicked($event)\\\" secureComponent>\\r\\n            </lf-info-button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"","import { Component, Injector, EventEmitter, Output } from '@angular/core';\r\n\r\nimport { ViewModel } from 'life-core/view-model';\r\nimport { ConvertUtil } from 'life-core/util/lang';\r\nimport { ArrayUtil } from 'life-core/util/lang';\r\nimport { TabStateManager, TabStateValueAccessor } from 'life-core/util';\r\nimport { InfoButtonClickEvent } from 'life-core/component/button';\r\nimport { DropdownActionType } from 'life-core/component/input';\r\n\r\nimport { AppSession } from 'ls-core/session/app-session';\r\n\r\nimport { TabHomeDataKeys } from 'business/home/tab';\r\nimport { TasksFilterModel } from './tasks-filter.model';\r\nimport { TaskCountsListModel } from '../task-counts/task-counts-list.model';\r\nimport { TaskFilterService, TaskCounts } from './task-filter.service';\r\nimport { TaskFilterType } from './task-filter-type';\r\nimport { TaskUtil } from '../task-util';\r\nimport { MessagingService } from 'life-core/messaging';\r\nimport { TaskListChannels } from 'business/home/tasks/task-list-channels';\r\n\r\n@Component({\r\n    selector: 'tasks-filter',\r\n    templateUrl: './task-filter.component.html',\r\n    styleUrls: ['./task-filter.component.css']\r\n})\r\nexport class TasksFilterComponent extends ViewModel {\r\n    @Output()\r\n    public filterChange: EventEmitter<TasksFilterModel> = new EventEmitter<TasksFilterModel>();\r\n    public filters: TasksFilterModel;\r\n    public taskFilterTypes: Array<TaskCountsListModel>;\r\n    public filterDropdownActionType: DropdownActionType = DropdownActionType.Presentation;\r\n\r\n    private _appSession: AppSession;\r\n    private _filtersStateValueAccessor: TabStateValueAccessor<TasksFilterModel>;\r\n    private _taskFilterService: TaskFilterService;\r\n    private _messagingService: MessagingService;\r\n    private _taskUtil: TaskUtil;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        appSession: AppSession,\r\n        taskFilterService: TaskFilterService,\r\n        tabStateManager: TabStateManager,\r\n        messagingService: MessagingService,\r\n        taskUtil: TaskUtil\r\n    ) {\r\n        super(injector);\r\n        this._appSession = appSession;\r\n        this._taskFilterService = taskFilterService;\r\n        this._messagingService = messagingService;\r\n        this.registerHandlers();\r\n        this.createStateValueAccessors(tabStateManager);\r\n        this._taskUtil = taskUtil;\r\n    }\r\n\r\n    public loadData(): Promise<void> {\r\n        this.initFilters();\r\n        this.setResolvedListData();\r\n        this.setDefaultUser();\r\n        this.loadTaskCounts();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public onUserChange(_userSelection: Event): void {\r\n        this.updateGridViewData();\r\n    }\r\n\r\n    public onTeamChange(_teamSelection: Event): void {\r\n        this.updateGridViewData();\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this._filtersStateValueAccessor.setValue(this.filters);\r\n        this._messagingService.closeChannel(TaskListChannels.TaskCountsChanged);\r\n        super.ngOnDestroy();\r\n    }\r\n\r\n    private initFilters(): void {\r\n        this.filters = this._filtersStateValueAccessor.hasValue()\r\n            ? this._filtersStateValueAccessor.getValue()\r\n            : (this.filters = new TasksFilterModel());\r\n    }\r\n\r\n    private setDefaultUser(): void {\r\n        if (!this._filtersStateValueAccessor.hasValue()) {\r\n            const loggedInUser = this.listData.userList.find(user => user.ExternalCode == this._appSession.user.UserId);\r\n            // referred flex code\r\n            this.filters.selectedUser = loggedInUser\r\n                ? ConvertUtil.toNumber(this._appSession.user.UserId)\r\n                : this.listData.userList[0].ExternalCode;\r\n        }\r\n    }\r\n\r\n    private createStateValueAccessors(tabStateManager: TabStateManager): void {\r\n        this._filtersStateValueAccessor = new TabStateValueAccessor<TasksFilterModel>(\r\n            tabStateManager,\r\n            TabHomeDataKeys.TASK_LIST_FILTERS\r\n        );\r\n    }\r\n\r\n    private loadTaskCounts(): void {\r\n        this._taskFilterService.loadTaskCounts(this.filters).then((result: TaskCounts) => {\r\n            this.setupTaskCounts(result);\r\n            this.publishFilterModelChange();\r\n            // this.publishTasksCountChange();\r\n        });\r\n    }\r\n\r\n    private setupTaskCounts(taskCounts: TaskCounts): void {\r\n        this.prepareTaskFilterTypes(taskCounts);\r\n        this.setDefaultSelectedTaskFilterType();\r\n    }\r\n\r\n    private prepareTaskFilterTypes(taskCounts: TaskCounts): void {\r\n        // List we receive from back end is not in expected sort order\r\n        // hence sorting the filter types list  - referred flex\r\n        const sortAs = [\r\n            'msgInbox',\r\n            'msgOutbox',\r\n            'pendingMail',\r\n            'reqToOrder',\r\n            'reqUnderwriting',\r\n            'msgReview',\r\n            'diaryActivity',\r\n            'reqPreIssue',\r\n            'reqPostIssue',\r\n            'imageReceived',\r\n            'mibTwoYr'\r\n        ];\r\n\r\n        const taskFilterButtonWidth: { readonly [taskFilterType: string]: number } = {\r\n            [TaskFilterType.Inbox]: 70,\r\n            [TaskFilterType.Outbox]: 70,\r\n            [TaskFilterType.PendingMail]: 80,\r\n            [TaskFilterType.ReqToOrder]: 80,\r\n            [TaskFilterType.PastDueUWReq]: 90,\r\n            [TaskFilterType.CaseMgrRevMsg]: 100,\r\n            [TaskFilterType.Diary]: 70,\r\n            [TaskFilterType.PastDuePreIssue]: 90,\r\n            [TaskFilterType.PastDuePostIssue]: 100,\r\n            [TaskFilterType.ImgRecd]: 70,\r\n            [TaskFilterType.MIB2Yr]: 80\r\n        };\r\n\r\n        this.taskFilterTypes = [];\r\n\r\n        Object.keys(taskCounts).forEach((taskType: string) => {\r\n            if (taskType !== '$type') {\r\n                const taskCountsListModel = new TaskCountsListModel();\r\n                taskCountsListModel.header = this.getTaskFilterTypeDescription(taskType);\r\n                taskCountsListModel.type = taskType;\r\n                taskCountsListModel.count = taskCounts[taskType];\r\n                taskCountsListModel.buttonWidth = taskFilterButtonWidth[taskCountsListModel.type];\r\n                taskCountsListModel.onFilterTypeSelected = this.onFilterTypeClicked;\r\n                this.taskFilterTypes.push(taskCountsListModel);\r\n            }\r\n        });\r\n\r\n        const sortCompareFunction = ArrayUtil.getSortCompareFunction(sortAs, 'type');\r\n        this.taskFilterTypes = this.taskFilterTypes.sort(sortCompareFunction);\r\n    }\r\n\r\n    private getTaskFilterTypeDescription(filterType: string): string {\r\n        return this._taskUtil.getTaskTypeCountLabel(filterType);\r\n    }\r\n\r\n    private onFilterTypeClicked(event: InfoButtonClickEvent): void {\r\n        this.setSelectedStatus(event);\r\n        this.publishFilterModelChange();\r\n    }\r\n\r\n    private setSelectedStatus(event: InfoButtonClickEvent): void {\r\n        this.filters.selectedTaskFilterType = event.id;\r\n        this.filters.taskCount = parseInt(event.label);\r\n    }\r\n\r\n    private setDefaultSelectedTaskFilterType(): void {\r\n        if (!this.filters.selectedTaskFilterType) {\r\n            this.filters.selectedTaskFilterType = TaskFilterType.Inbox;\r\n        }\r\n    }\r\n\r\n    private updateGridViewData(): void {\r\n        this.loadTaskCounts();\r\n    }\r\n\r\n    private publishFilterModelChange(): void {\r\n        this.filterChange.emit(this.filters);\r\n    }\r\n\r\n    private registerHandlers(): void {\r\n        this.subscriptionTracker.track(\r\n            this._messagingService.subscribe(TaskListChannels.TaskCountsChanged, () => {\r\n                this.loadTaskCounts();\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { DataServiceParams, UIServiceNames, UIServiceMethods, DataService } from 'ls-core/service';\r\nimport { TasksFilterModel } from './tasks-filter.model';\r\n\r\n@Injectable()\r\nexport class TaskFilterService {\r\n    private _dataService: DataService;\r\n\r\n    constructor(dataService: DataService) {\r\n        this._dataService = dataService;\r\n    }\r\n\r\n    protected getStatusServiceParams(taskFilterModel: TasksFilterModel): DataServiceParams {\r\n        return new DataServiceParams({\r\n            serviceInterface: UIServiceNames.ALERT_COUNTS,\r\n            serviceMethod: UIServiceMethods.GET_DATA,\r\n            requestPayload: this.buildRequestPayload(taskFilterModel)\r\n        });\r\n    }\r\n\r\n    private buildRequestPayload(taskFilterModel: TasksFilterModel): TaskCountsRequest {\r\n        return new TaskCountsRequest({\r\n            userId: taskFilterModel.selectedUser,\r\n            teamId: taskFilterModel.selectedTeam\r\n        });\r\n    }\r\n\r\n    public loadTaskCounts(taskFilterModel: TasksFilterModel): Promise<any> {\r\n        const serviceParams: DataServiceParams = this.getStatusServiceParams(taskFilterModel);\r\n        return this._dataService\r\n            .getData(serviceParams)\r\n            .then(response => {\r\n                return response.responsePayload ? (response.responsePayload as TaskCounts) : [];\r\n            })\r\n            .catch(response => {\r\n                return [];\r\n            });\r\n    }\r\n}\r\n\r\nclass TaskCountsRequest {\r\n    public readonly $type: string = 'life.ls.ui.ria.dto.requests.TaskCountsRequest, LifeSuite.UIServiceDTO';\r\n    public teamId: number;\r\n    public userId: number;\r\n    public selectedDate: Date;\r\n    constructor({ teamId, userId, selectedDate }: { teamId: number; userId: number; selectedDate?: Date }) {\r\n        this.teamId = teamId || 0;\r\n        this.userId = userId || 0;\r\n        this.selectedDate = selectedDate || new Date();\r\n    }\r\n}\r\n\r\nexport class TaskCounts {\r\n    public msgInbox: number;\r\n    public msgOutbox: number;\r\n    public pendingMail: number;\r\n    public msgReview: number;\r\n    public reqUnderwriting: number;\r\n    public reqPostIssue: number;\r\n    public reqPreIssue: number;\r\n    public reqToOrder: number;\r\n    public diaryActivity: number;\r\n    public imageReceived: number;\r\n    public mibTwoYr: number;\r\n}\r\n","export class TasksFilterModel {\r\n    public selectedUser: number;\r\n    public selectedTeam: number;\r\n    public selectedTaskFilterType: string;\r\n    public taskCount: number;\r\n}\r\n","export * from './tasks-tab.component';\r\nexport * from './tasks.module';\r\nexport * from './task-util';\r\n","export class TaskCountsListModel {\r\n    public header: string;\r\n    public type: string;\r\n    public count: number;\r\n    public buttonWidth: number;\r\n    public onFilterTypeSelected: (event: any) => void;\r\n}\r\n","export const TaskListChannels = {\r\n    TaskCountsChanged: 'task-counts-changed'\r\n};\r\n","import { Injector, Input } from '@angular/core';\r\n\r\nimport { DataGridColumns, BaseInfiniteGridViewModel } from 'life-core/component/grid';\r\n\r\nimport { GridDataStateKeys } from 'business/shared/grid';\r\nimport { TaskListColumnsBuilder } from './task-list-columns.builder';\r\nimport { TasksFilterModel, TaskFilterType } from '../filter';\r\nimport { TaskListGridDataSource } from '../datasource';\r\nimport { TaskUtil } from '../task-util';\r\nimport { IOpenTask } from './delegates';\r\n\r\nexport abstract class BaseTaskListComponent<T> extends BaseInfiniteGridViewModel<T> {\r\n    public isOpenButtonDisabled: boolean;\r\n\r\n    private _openTaskDelegate: IOpenTask;\r\n    private _taskUtil: TaskUtil;\r\n    private _previousSelectedTask: string;\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        taskListColumnsBuilder: TaskListColumnsBuilder,\r\n        taskListGridDataSource: TaskListGridDataSource,\r\n        // TODO - Make this mandatory once image-received delegate is created\r\n        openTaskDelegate?: IOpenTask\r\n    ) {\r\n        super(injector, taskListGridDataSource, taskListColumnsBuilder);\r\n        this._taskUtil = injector.get(TaskUtil);\r\n        this._openTaskDelegate = openTaskDelegate;\r\n        this.filterModel = new TasksFilterModel();\r\n        this.toggleOpenButton(true);\r\n    }\r\n\r\n    @Input()\r\n    public set filter(value: TasksFilterModel) {\r\n        this.setSelectedTaskFilterModel(value);\r\n        this.setTaskGridTitle();\r\n        setTimeout(() => {\r\n            this.onFilterModelReceived(value, true);\r\n        });\r\n    }\r\n\r\n    public getGridColumns(): DataGridColumns {\r\n        return this.getGridColumnsBuilder().build(this.filterModel.selectedTaskFilterType);\r\n    }\r\n\r\n    public onRowClicked($event: any): void {\r\n        this.toggleOpenButton(false);\r\n        super.onRowClicked($event);\r\n    }\r\n\r\n    public onRowDoubleClicked($event: any): void {\r\n        this.toggleOpenButton(false);\r\n        super.onRowDoubleClicked($event);\r\n    }\r\n\r\n    public onOpenButtonClick(): void {\r\n        this.openSelectedGridRow();\r\n    }\r\n\r\n    protected openSelectedGridRow(): void {\r\n        if (this.anyGridRowsSelected() && this.openTaskImplemented(this.filterModel.selectedTaskFilterType)) {\r\n            this.updateGridRowsState();\r\n            this._openTaskDelegate.openTask(this.selectedGridRows[0]);\r\n        }\r\n    }\r\n\r\n    protected setTaskGridTitle(): void {\r\n        this.title = this.getGridTitle();\r\n    }\r\n\r\n    protected rebuildGridColumnsWihSortOrder(): void {\r\n\t\tsuper.rebuildGridColumnsWihSortOrder();\r\n        this.preservePreviousFilterValue(this.filterModel);\r\n    }\r\n\r\n\tprotected retainSortOrder(): boolean {\r\n        return !this.isTaskSelectionChanged(this.filterModel);\r\n    }\r\n\t\r\n    protected registerFilterChangeHandlers(): void {\r\n        // filter change is handled differently in task-list\r\n        // no logic needed here\r\n    }\r\n\r\n    protected getGridStateKey(): string {\r\n        return GridDataStateKeys.TASK_LIST;\r\n    }\r\n\r\n    // protected abstract getOpenTaskDelegate(): OpenTaskDelegateBase;\r\n\r\n    protected getGridTitle(): string {\r\n        return this._taskUtil.getTaskTypeGridTitle(this.filterModel.selectedTaskFilerType);\r\n    }\r\n\r\n    private toggleOpenButton(value: boolean): void {\r\n        this.isOpenButtonDisabled = value;\r\n    }\r\n\r\n    private setSelectedTaskFilterModel(value: TasksFilterModel): void {\r\n        this.filterModel = value;\r\n    }\r\n\r\n    private preservePreviousFilterValue(value: TasksFilterModel): void {\r\n        this._previousSelectedTask = value.selectedTaskFilterType;\r\n    }\r\n\r\n    private isTaskSelectionChanged(value: TasksFilterModel): boolean {\r\n        return this._previousSelectedTask && this._previousSelectedTask != value.selectedTaskFilterType;\r\n    }\r\n\r\n    // Checking selectedTaskFilterType is equal to imageReceived or not to avoid error on open button click in case of imageReceived filter.\r\n    // This only opens an image in new tab and is not yet implemented in MT. Need to change this code accordingly in future\r\n    private openTaskImplemented(taskFilterType: string): boolean {\r\n        return taskFilterType != TaskFilterType.ImgRecd;\r\n    }\r\n}\r\n","export * from './open-diary-activity-task.delegate';\r\nexport * from './open-inbox-outbox-task.delegate';\r\nexport * from './open-mib-two-year.delegate';\r\nexport * from './open-requirements.delegate';\r\nexport * from './open-rev-msg-task.delegate';\r\nexport * from './open-task-delegate-base';\r\nexport * from './open-task.interface';\r\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport { NavigationSequenceFactory } from 'ls-core/auto-navigation/navigation-sequence-factory';\r\nimport { NavigationSequenceType } from 'ls-core/auto-navigation/navigation-sequence-type';\r\nimport { INavigationSequence } from 'ls-core/model/auto-navigation';\r\nimport { DiaryActivityProxyDTO } from 'ls-core/model/dto/diary-activity-proxy.dto';\r\n\r\nimport { AutoNavigationChannels } from 'business/shared/auto-navigation';\r\nimport { LsRoutePath } from 'ui/routing/ls-route-path';\r\nimport { OpenTaskDelegateBase } from './open-task-delegate-base';\r\n\r\n@Injectable()\r\nexport class OpenDiaryActivityTaskDelegate extends OpenTaskDelegateBase {\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    public openTask(taskProxy: any): void {\r\n        const diaryActivityProxy = taskProxy as DiaryActivityProxyDTO;\r\n\r\n        const navigationSequence = this.createNavigationSequence(diaryActivityProxy);\r\n        this.messagingService.publish(AutoNavigationChannels.CaseNotes, navigationSequence);\r\n        this.navigateToTargetPage(taskProxy, LsRoutePath.CaseNotes);\r\n    }\r\n\r\n    protected createNavigationSequence(taskProxy: any): INavigationSequence {\r\n        return NavigationSequenceFactory.getNavigationSequence(taskProxy, NavigationSequenceType.NOTES);\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport { NavigationSequenceFactory } from 'ls-core/auto-navigation/navigation-sequence-factory';\r\nimport { NavigationSequenceType } from 'ls-core/auto-navigation/navigation-sequence-type';\r\nimport { ReferralProxyDTO } from 'ls-core/model';\r\nimport { INavigationSequence } from 'ls-core/model/auto-navigation';\r\n\r\nimport { LsRoutePath } from 'ui/routing/ls-route-path';\r\nimport { OpenTaskDelegateBase } from './open-task-delegate-base';\r\nimport { AutoNavigationChannels } from 'business/shared/auto-navigation';\r\n\r\n@Injectable()\r\nexport class OpenInboxOutboxTaskDelegate extends OpenTaskDelegateBase {\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    public openTask(taskProxy: any): void {\r\n        const referralProxy = taskProxy as ReferralProxyDTO;\r\n\r\n        const navigationSequence = this.createNavigationSequence(referralProxy);\r\n        this.messagingService.publish(AutoNavigationChannels.CaseNotes, navigationSequence);\r\n        this.navigateToTargetPage(taskProxy, LsRoutePath.CaseNotes);\r\n    }\r\n\r\n    protected createNavigationSequence(taskProxy: any): INavigationSequence {\r\n        return NavigationSequenceFactory.getNavigationSequence(taskProxy, NavigationSequenceType.NOTES);\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport { LsRoutePath } from 'ui/routing';\r\n\r\nimport { ConvertUtil } from 'life-core/util/lang';\r\nimport { ILogger, Logger } from 'life-core/logging';\r\n\r\nimport { NavigationSequenceFactory } from 'ls-core/auto-navigation/navigation-sequence-factory';\r\nimport { NavigationSequenceType } from 'ls-core/auto-navigation/navigation-sequence-type';\r\nimport { PolicyProxyDTO } from 'ls-core/model';\r\nimport { INavigationSequence } from 'ls-core/model/auto-navigation';\r\n\r\nimport { AutoNavigationChannels } from 'business/shared/auto-navigation';\r\nimport { OpenTaskDelegateBase } from './open-task-delegate-base';\r\nimport { MIBTwoYearCountService } from '../mib-two-year.service';\r\n\r\n@Injectable()\r\nexport class OpenMibTwoYrDelegate extends OpenTaskDelegateBase {\r\n    private _mIBTwoYearCountService: MIBTwoYearCountService;\r\n    private _logger: ILogger;\r\n\r\n    constructor(injector: Injector, mIBTwoYearCountService: MIBTwoYearCountService, logger: Logger) {\r\n        super(injector);\r\n        this._mIBTwoYearCountService = mIBTwoYearCountService;\r\n        this._logger = logger;\r\n    }\r\n\r\n    public openTask(task: any): void {\r\n        const taskProxy = task as PolicyProxyDTO;\r\n        const navigationSequence = this.createNavigationSequence(task);\r\n        this.messagingService.publish(AutoNavigationChannels.Evidence, navigationSequence);\r\n        this.navigateToTargetPage(taskProxy, LsRoutePath.Evidence);\r\n        this.updateMIBTwoYearCount(ConvertUtil.toNumber(taskProxy.PolicyPersonId));\r\n    }\r\n\r\n    protected createNavigationSequence(task: any): INavigationSequence {\r\n        return NavigationSequenceFactory.getNavigationSequence(task, NavigationSequenceType.MIB);\r\n    }\r\n\r\n    private updateMIBTwoYearCount(policyPersonID: number): void {\r\n        this._mIBTwoYearCountService.update(policyPersonID).then(result => {\r\n            this._logger.log('MIB Two year count updated successfully');\r\n        });\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport { LsRoutePath } from 'ui/routing';\r\nimport { NavigationSequenceFactory } from 'ls-core/auto-navigation/navigation-sequence-factory';\r\nimport { NavigationSequenceType } from 'ls-core/auto-navigation/navigation-sequence-type';\r\nimport { RequirementProxy } from 'ls-core/model';\r\nimport { INavigationSequence } from 'ls-core/model/auto-navigation';\r\nimport { OpenTaskDelegateBase } from './open-task-delegate-base';\r\nimport { AutoNavigationChannels } from 'business/shared/auto-navigation';\r\n\r\n@Injectable()\r\nexport class OpenRequirementsDelegate extends OpenTaskDelegateBase {\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    public openTask(taskProxy: any): void {\r\n        const navigationSequence = this.createNavigationSequence(taskProxy);\r\n        this.messagingService.publish(AutoNavigationChannels.Requirement, navigationSequence);\r\n        this.navigateToTargetPage(taskProxy as RequirementProxy, LsRoutePath.Requirements);\r\n    }\r\n\r\n    protected createNavigationSequence(taskProxy: any): INavigationSequence {\r\n        return NavigationSequenceFactory.getNavigationSequence(taskProxy, NavigationSequenceType.REQUIREMENTS);\r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\n\r\nimport { NavigationSequenceFactory } from 'ls-core/auto-navigation/navigation-sequence-factory';\r\nimport { NavigationSequenceType } from 'ls-core/auto-navigation/navigation-sequence-type';\r\nimport { INavigationSequence } from 'ls-core/model/auto-navigation';\r\nimport { OpenTaskDelegateBase } from './open-task-delegate-base';\r\nimport { AutoNavigationChannels } from 'business/shared/auto-navigation';\r\nimport { ReviewMessageProxyDTO } from 'ls-core/model/dto/review-message-proxy.dto';\r\n\r\n@Injectable()\r\nexport class OpenRevMsgTaskDelegate extends OpenTaskDelegateBase {\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    public openTask(taskProxy: any): void {\r\n        const navigationSequence = this.createNavigationSequence(taskProxy);\r\n        this.messagingService.publish(AutoNavigationChannels.PolicyTab, navigationSequence);\r\n        this.navigateToTargetPage(taskProxy as ReviewMessageProxyDTO);\r\n    }\r\n\r\n    protected createNavigationSequence(taskProxy: any): INavigationSequence {\r\n        return NavigationSequenceFactory.getNavigationSequence(taskProxy, NavigationSequenceType.REVIEW_MESSAGES);\r\n    }\r\n}\r\n","import { Injector } from '@angular/core';\r\n\r\nimport { IMessagingService, MessagingService } from 'life-core/messaging';\r\n\r\nimport { INavigationSequence } from 'ls-core/model/auto-navigation';\r\nimport { ConvertUtil } from 'life-core/util/lang';\r\n\r\nimport { OpenPolicyDelegate } from 'business/shared/open-policy';\r\nimport { IOpenTask } from './open-task.interface';\r\n\r\nexport abstract class OpenTaskDelegateBase implements IOpenTask {\r\n    protected messagingService: IMessagingService;\r\n\r\n    protected openPolicyDelegate: OpenPolicyDelegate;\r\n\r\n    constructor(injector: Injector) {\r\n        this.messagingService = injector.get(MessagingService);\r\n        this.openPolicyDelegate = injector.get(OpenPolicyDelegate);\r\n    }\r\n\r\n    public abstract openTask(taskProxy: any): void;\r\n\r\n    protected abstract createNavigationSequence(taskProxy: any): INavigationSequence;\r\n\r\n    protected navigateToTargetPage(taskProxy: any, routePath?: string): void {\r\n        this.openPolicyDelegate.openPolicy(ConvertUtil.toNumber(taskProxy.PolicyId), taskProxy.PolicyNumber, routePath);\r\n    }\r\n}\r\n","import { Component, Injector } from '@angular/core';\r\n\r\nimport { DiaryActivityProxyDTO } from 'ls-core/model/dto/diary-activity-proxy.dto';\r\n\r\nimport { TaskListColumnsBuilder } from '../task-list-columns.builder';\r\nimport { TaskListGridDataSource } from '../../datasource';\r\nimport { OpenDiaryActivityTaskDelegate } from '../delegates';\r\nimport { BaseTaskListComponent } from '../base-tasks-list.component';\r\n\r\n@Component({\r\n    selector: 'diary-activity-task-list',\r\n    templateUrl: '../task-list.component.html',\r\n    styleUrls: ['../task-list.component.scss'],\r\n    providers: [OpenDiaryActivityTaskDelegate]\r\n})\r\nexport class DiaryActivityTaskListComponent extends BaseTaskListComponent<DiaryActivityProxyDTO> {\r\n    constructor(\r\n        injector: Injector,\r\n        taskListColumnsBuilder: TaskListColumnsBuilder,\r\n        taskListGridDataSource: TaskListGridDataSource,\r\n        openDiaryActivityTaskDelegate: OpenDiaryActivityTaskDelegate\r\n    ) {\r\n        super(injector, taskListColumnsBuilder, taskListGridDataSource, openDiaryActivityTaskDelegate);\r\n    }\r\n\r\n    protected rowDataMatch(rowData1: DiaryActivityProxyDTO, rowData2: DiaryActivityProxyDTO): boolean {\r\n        return rowData1.NoteId === rowData2.NoteId;\r\n    }\r\n}\r\n","import { Component, Injector } from '@angular/core';\r\n\r\nimport { TaskListColumnsBuilder } from '../task-list-columns.builder';\r\nimport { TaskListGridDataSource } from '../../datasource';\r\nimport { TaskListImageService } from '../task-list-image.service';\r\nimport { BaseTaskListComponent } from '../base-tasks-list.component';\r\n\r\n@Component({\r\n    selector: 'image-received-task-list',\r\n    templateUrl: '../task-list.component.html',\r\n    styleUrls: ['../task-list.component.scss'],\r\n    providers: [TaskListImageService]\r\n})\r\nexport class ImageReceivedTaskListComponent extends BaseTaskListComponent<any> {\r\n    constructor(\r\n        injector: Injector,\r\n        taskListColumnsBuilder: TaskListColumnsBuilder,\r\n        taskListGridDataSource: TaskListGridDataSource\r\n    ) {\r\n        // TODO - pass the delegate to base class once delegate is created\r\n        super(injector, taskListColumnsBuilder, taskListGridDataSource);\r\n    }\r\n\r\n    // TODO - need to implement logic\r\n    protected rowDataMatch(rowData1: any, rowData2: any): boolean {\r\n        return false;\r\n    }\r\n}\r\n","import { Component, Injector } from '@angular/core';\r\n\r\nimport { ReferralProxyDTO } from 'ls-core/model';\r\n\r\nimport { TaskListColumnsBuilder } from '../task-list-columns.builder';\r\nimport { OpenInboxOutboxTaskDelegate } from '../delegates';\r\nimport { TaskListGridDataSource } from '../../datasource';\r\nimport { BaseTaskListComponent } from '../base-tasks-list.component';\r\n\r\n@Component({\r\n    selector: 'inbox-outbox-task-list',\r\n    templateUrl: '../task-list.component.html',\r\n    styleUrls: ['../task-list.component.scss'],\r\n    providers: [OpenInboxOutboxTaskDelegate]\r\n})\r\nexport class InboxOutBoxTaskListComponent extends BaseTaskListComponent<ReferralProxyDTO> {\r\n    constructor(\r\n        injector: Injector,\r\n        taskListColumnsBuilder: TaskListColumnsBuilder,\r\n        taskListGridDataSource: TaskListGridDataSource,\r\n        openInboxOutboxTaskDelegate: OpenInboxOutboxTaskDelegate\r\n    ) {\r\n        super(injector, taskListColumnsBuilder, taskListGridDataSource, openInboxOutboxTaskDelegate);\r\n    }\r\n\r\n    protected rowDataMatch(rowData1: ReferralProxyDTO, rowData2: ReferralProxyDTO): boolean {\r\n        return rowData1.NoteId === rowData2.NoteId;\r\n    }\r\n}\r\n","export * from './diary-activity/diary-activity-task-list.component';\r\nexport * from './image-received/image-received-task-list.component';\r\nexport * from './inbox-outbox/inbox-outbox-task-list.component';\r\nexport * from './mib/mib-task-list.component';\r\nexport * from './requirement/requirement-task-list.component';\r\nexport * from './review-message/review-message-task-list.component';\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { DataServiceParams, UIServiceNames, UIServiceMethods, DataService } from 'ls-core/service';\r\n\r\n@Injectable()\r\nexport class MIBTwoYearCountService {\r\n    private _dataService: DataService;\r\n    constructor(dataService: DataService) {\r\n        this._dataService = dataService;\r\n    }\r\n\r\n    public update(policyPersonId: number): Promise<number> {\r\n        const serviceParams: DataServiceParams = this.getServiceParams(policyPersonId);\r\n        return this._dataService.deleteData(serviceParams).then(response => {\r\n            return response && response.responsePayload ? (response.responsePayload as number) : 0;\r\n        });\r\n    }\r\n\r\n    private getServiceParams(policyPersonId: number): DataServiceParams {\r\n        return new DataServiceParams({\r\n            serviceInterface: UIServiceNames.TASK_LIST_MIB_TWO_YEAR_COUNT,\r\n            serviceMethod: UIServiceMethods.UPDATE_MIBTWOYR_COUNT,\r\n            requestPayload: this.buildRequestPayload(policyPersonId)\r\n        });\r\n    }\r\n\r\n    private buildRequestPayload(policyPersonId: number): TaskListMibTwoYrCountRequest {\r\n        const request = new TaskListMibTwoYrCountRequest();\r\n        request.policyPersonId = policyPersonId;\r\n        return request;\r\n    }\r\n}\r\n\r\nclass TaskListMibTwoYrCountRequest {\r\n    public readonly $type: string = 'life.ls.ui.ria.dto.requests.TaskListMibTwoYrCountRequest, LifeSuite.UIServiceDTO';\r\n    public policyPersonId: Number;\r\n}\r\n","import { Component, Injector } from '@angular/core';\r\n\r\nimport { PolicyProxyDTO } from 'ls-core/model';\r\n\r\nimport { TaskListColumnsBuilder } from '../task-list-columns.builder';\r\nimport { TaskListGridDataSource } from '../../datasource';\r\nimport { OpenMibTwoYrDelegate } from '../delegates';\r\nimport { BaseTaskListComponent } from '../base-tasks-list.component';\r\nimport { MIBTwoYearCountService } from '../mib-two-year.service';\r\n\r\n@Component({\r\n    selector: 'mib-task-list',\r\n    templateUrl: '../task-list.component.html',\r\n    styleUrls: ['../task-list.component.scss'],\r\n    providers: [MIBTwoYearCountService, OpenMibTwoYrDelegate]\r\n})\r\nexport class MibTaskListComponent extends BaseTaskListComponent<PolicyProxyDTO> {\r\n    constructor(\r\n        injector: Injector,\r\n        taskListColumnsBuilder: TaskListColumnsBuilder,\r\n        taskListGridDataSource: TaskListGridDataSource,\r\n        openMibTwoYrDelegate: OpenMibTwoYrDelegate\r\n    ) {\r\n        super(injector, taskListColumnsBuilder, taskListGridDataSource, openMibTwoYrDelegate);\r\n    }\r\n\r\n    protected rowDataMatch(rowData1: PolicyProxyDTO, rowData2: PolicyProxyDTO): boolean {\r\n        return rowData1.RequirementInformationId === rowData2.RequirementInformationId;\r\n    }\r\n}\r\n","import { Component, Injector } from '@angular/core';\r\n\r\nimport { RequirementProxy } from 'ls-core/model';\r\n\r\nimport { TaskListColumnsBuilder } from '../task-list-columns.builder';\r\nimport { TaskListGridDataSource } from '../../datasource';\r\nimport { OpenRequirementsDelegate } from '../delegates';\r\nimport { BaseTaskListComponent } from '../base-tasks-list.component';\r\n\r\n@Component({\r\n    selector: 'requirement-task-list',\r\n    templateUrl: '../task-list.component.html',\r\n    styleUrls: ['../task-list.component.scss'],\r\n    providers: [OpenRequirementsDelegate]\r\n})\r\nexport class RequirementTaskListComponent extends BaseTaskListComponent<RequirementProxy> {\r\n    constructor(\r\n        injector: Injector,\r\n        taskListColumnsBuilder: TaskListColumnsBuilder,\r\n        taskListGridDataSource: TaskListGridDataSource,\r\n        openRequirementsDelegate: OpenRequirementsDelegate\r\n    ) {\r\n        super(injector, taskListColumnsBuilder, taskListGridDataSource, openRequirementsDelegate);\r\n    }\r\n\r\n    protected rowDataMatch(rowData1: RequirementProxy, rowData2: RequirementProxy): boolean {\r\n        return rowData1.InsuredRequirementId === rowData2.InsuredRequirementId;\r\n    }\r\n}\r\n","import { Component, Injector } from '@angular/core';\r\n\r\nimport { ReviewMessageProxyDTO } from 'ls-core/model/dto/review-message-proxy.dto';\r\n\r\nimport { TaskListColumnsBuilder } from '../task-list-columns.builder';\r\nimport { TaskListGridDataSource } from '../../datasource';\r\nimport { OpenRevMsgTaskDelegate } from '../delegates';\r\n\r\nimport { BaseTaskListComponent } from '../base-tasks-list.component';\r\n\r\n@Component({\r\n    selector: 'review-message-task-list',\r\n    templateUrl: '../task-list.component.html',\r\n    styleUrls: ['../task-list.component.scss'],\r\n    providers: [OpenRevMsgTaskDelegate]\r\n})\r\nexport class ReviewMessageTaskListComponent extends BaseTaskListComponent<ReviewMessageProxyDTO> {\r\n    constructor(\r\n        injector: Injector,\r\n        taskListColumnsBuilder: TaskListColumnsBuilder,\r\n        taskListGridDataSource: TaskListGridDataSource,\r\n        openRevMsgTaskDelegate: OpenRevMsgTaskDelegate\r\n    ) {\r\n        super(injector, taskListColumnsBuilder, taskListGridDataSource, openRevMsgTaskDelegate);\r\n    }\r\n\r\n    protected rowDataMatch(rowData1: ReviewMessageProxyDTO, rowData2: ReviewMessageProxyDTO): boolean {\r\n        return rowData1.ReviewMessageId === rowData2.ReviewMessageId;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BaseGridColumnsBuilder, DataGridColumns, GridFilterFrameworkComponentType } from 'life-core/component/grid';\r\nimport { MessagingService } from 'life-core/messaging';\r\nimport { I18n } from 'life-core/i18n';\r\n\r\nimport { LsCellFormatters } from 'ls-core/component/grid';\r\nimport { BisOkDocDTO } from 'ls-core/model/dto/bis-ok-doc.dto';\r\nimport { SortOrderTypes } from 'ls-core/model/const/sort-order-types';\r\n\r\nimport { TaskFilterType } from '../filter';\r\nimport { TaskListIconHelper } from './task-list-icon.helper';\r\nimport { TaskListImageService } from 'business/home/tasks/task-list/task-list-image.service';\r\nimport { TaskListChannels } from 'business/home/tasks/task-list-channels';\r\n\r\nenum TaskListFields {\r\n    DiaryDate = 'DiaryDate',\r\n    PolicyNumber = 'PolicyNumber',\r\n    InsuredNameFull = 'InsuredNameFull',\r\n    AuthorName = 'AuthorName',\r\n    Topic = 'Topic',\r\n    IsNew = 'IsNew',\r\n    ReferredToName = 'ReferredToName',\r\n    RequirementName = 'RequirementName',\r\n    FollowupDate = 'FollowupDate',\r\n    ServiceAssociateName = 'ServiceAssociateName',\r\n    ReceiveDate = 'ReceiveDate',\r\n    InsuredName = 'InsuredName',\r\n    UnderwriterName = 'UnderwriterName',\r\n    LastUpdateDate = 'LastUpdateDate',\r\n    LinkUrl = 'LinkUrl',\r\n    ApplicantName = 'ApplicantName',\r\n    ReviewMessageText = 'ReviewMessageText',\r\n    CaseManagerName = 'CaseManagerName',\r\n    ReceivedDate = 'ReceivedDate',\r\n    UnderwriterNameShort = 'UnderwriterNameShort'\r\n}\r\n\r\n@Injectable()\r\nexport class TaskListColumnsBuilder extends BaseGridColumnsBuilder {\r\n    private _lsCellFormatters: LsCellFormatters;\r\n    private _taskListImageService: TaskListImageService;\r\n    private _messagingService: MessagingService;\r\n\r\n    constructor(\r\n        lsCellFormatters: LsCellFormatters,\r\n        taskListImageService: TaskListImageService,\r\n        messagingService: MessagingService,\r\n        i18n: I18n\r\n    ) {\r\n        super();\r\n        this._lsCellFormatters = lsCellFormatters;\r\n        this._taskListImageService = taskListImageService;\r\n        this._messagingService = messagingService;\r\n        this.i18n = i18n;\r\n    }\r\n\r\n    public build(taskFilterType: string): DataGridColumns {\r\n        this.resetColumns();\r\n        switch (taskFilterType) {\r\n            case TaskFilterType.Outbox: {\r\n                this.getOutboxColumns();\r\n                break;\r\n            }\r\n            case TaskFilterType.ReqToOrder: {\r\n                this.getRequirementToOrderColumns();\r\n                break;\r\n            }\r\n            case TaskFilterType.PastDueUWReq:\r\n            case TaskFilterType.PastDuePreIssue:\r\n            case TaskFilterType.PastDuePostIssue: {\r\n                this.getPastDueReqGridColumns();\r\n                break;\r\n            }\r\n            case TaskFilterType.MIB2Yr: {\r\n                this.getMIB2YrGridColumns();\r\n                break;\r\n            }\r\n            case TaskFilterType.CaseMgrRevMsg: {\r\n                this.getCaseMgrRevMsgGridColumns();\r\n                break;\r\n            }\r\n            case TaskFilterType.Diary: {\r\n                this.getDiaryActivityGridColumns();\r\n                break;\r\n            }\r\n            case TaskFilterType.ImgRecd: {\r\n                this.getImgReceivedGridColumns();\r\n                break;\r\n            }\r\n            case TaskFilterType.PendingMail: {\r\n                this.getRequirementRecdGridColumns();\r\n                break;\r\n            }\r\n            case TaskFilterType.Inbox:\r\n            default: {\r\n                this.getInboxColumns();\r\n                break;\r\n            }\r\n        }\r\n        return this.columns;\r\n    }\r\n\r\n    private getInboxColumns(): void {\r\n        this.addColumn({\r\n            headerName: '',\r\n            cellRenderer: TaskListIconHelper.getIcon,\r\n            width: 20,\r\n            suppressFilter: true\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Diary Date', id: 'tasks.inbox.gridheader.diarydate' }),\r\n            field: TaskListFields.DiaryDate,\r\n            width: 40,\r\n            valueFormatter: this._lsCellFormatters.dateCellFormatter,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            sort: SortOrderTypes.Ascending\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'tasks.inbox.gridheader.casenumber' }),\r\n            field: TaskListFields.PolicyNumber,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Applicant', id: 'tasks.inbox.gridheader.applicant' }),\r\n            field: TaskListFields.InsuredNameFull,\r\n            width: 70,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Author', id: 'tasks.inbox.gridheader.author' }),\r\n            field: TaskListFields.AuthorName,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Subject', id: 'tasks.inbox.gridheader.subject,' }),\r\n            field: TaskListFields.Topic,\r\n            width: 100,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n    }\r\n\r\n    private getOutboxColumns(): void {\r\n        this.addColumn({\r\n            headerName: '',\r\n            cellRenderer: TaskListIconHelper.getIcon,\r\n            width: 20,\r\n            suppressFilter: true\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Diary Date', id: 'tasks.inbox.gridheader.diarydate' }),\r\n            field: TaskListFields.DiaryDate,\r\n            width: 40,\r\n            valueFormatter: this._lsCellFormatters.dateCellFormatter,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            sort: SortOrderTypes.Ascending\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'tasks.inbox.gridheader.casenumber' }),\r\n            field: TaskListFields.PolicyNumber,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Applicant', id: 'tasks.inbox.gridheader.applicant' }),\r\n            field: TaskListFields.InsuredNameFull,\r\n            width: 70,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Referred To', id: 'tasks.outbox.gridheader.referredto' }),\r\n            field: TaskListFields.ReferredToName,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Subject', id: 'tasks.inbox.gridheader.subject,' }),\r\n            field: TaskListFields.Topic,\r\n            width: 100,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n    }\r\n\r\n    private getRequirementToOrderColumns(): void {\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'tasks.inbox.gridheader.casenumber' }),\r\n            field: TaskListFields.PolicyNumber,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter,\r\n            sort: SortOrderTypes.Ascending\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Applicant', id: 'tasks.inbox.gridheader.applicant' }),\r\n            field: TaskListFields.InsuredNameFull,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({\r\n                value: 'Requirement Message',\r\n                id: 'tasks.reqtoorder.gridheader.requirementmessage'\r\n            }),\r\n            field: TaskListFields.RequirementName,\r\n            width: 70,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n    }\r\n\r\n    // Renaming method name as it is commonly used for multiple filters\r\n    private getPastDueReqGridColumns(): void {\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Follow Up Date/Time', id: '' }),\r\n            field: TaskListFields.FollowupDate,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            valueFormatter: (params): any => this._lsCellFormatters.dateCellFormatter(params, 'short'),\r\n            sort: SortOrderTypes.Ascending\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'tasks.inbox.gridheader.casenumber' }),\r\n            field: TaskListFields.PolicyNumber,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Applicant', id: 'tasks.inbox.gridheader.applicant' }),\r\n            field: TaskListFields.InsuredNameFull,\r\n            width: 70,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Requirement Type', id: 'tasks.pastdue.gridheader.requirementtype' }),\r\n            field: TaskListFields.RequirementName,\r\n            width: 70,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case Manager', id: 'tasks.pastdue.gridheader.casemanager' }),\r\n            field: TaskListFields.ServiceAssociateName,\r\n            width: 70,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n    }\r\n\r\n    private getMIB2YrGridColumns(): void {\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Received Date', id: '' }),\r\n            field: TaskListFields.ReceiveDate,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            valueFormatter: (params): any => this._lsCellFormatters.dateCellFormatter(params, 'short'),\r\n            sort: SortOrderTypes.Ascending\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'tasks.inbox.gridheader.casenumber' }),\r\n            field: TaskListFields.PolicyNumber,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Applicant Name', id: 'tasks.mibtwoyr.gridheader.applicantname' }),\r\n            field: TaskListFields.InsuredName,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Underwriter', id: 'tasks.mibtwoyr.gridheader.underwriter' }),\r\n            field: TaskListFields.UnderwriterName,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n    }\r\n\r\n    private getCaseMgrRevMsgGridColumns(): void {\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'tasks.inbox.gridheader.casenumber' }),\r\n            field: TaskListFields.PolicyNumber,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter,\r\n            sort: SortOrderTypes.Ascending\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Applicant', id: 'tasks.inbox.gridheader.applicant' }),\r\n            field: TaskListFields.ApplicantName,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Review Message', id: 'tasks.revmsg.gridheader.reviewmessage' }),\r\n            field: TaskListFields.ReviewMessageText,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case Manager', id: 'tasks.revmsg.gridheader.casemanager' }),\r\n            field: TaskListFields.CaseManagerName,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n    }\r\n\r\n    private getDiaryActivityGridColumns(): void {\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Diary Date', id: 'tasks.inbox.gridheader.diarydate' }),\r\n            field: TaskListFields.DiaryDate,\r\n            width: 40,\r\n            valueFormatter: this._lsCellFormatters.dateCellFormatter,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            sort: SortOrderTypes.Ascending\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'tasks.inbox.gridheader.casenumber' }),\r\n            field: TaskListFields.PolicyNumber,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Applicant', id: 'tasks.inbox.gridheader.applicant' }),\r\n            field: TaskListFields.InsuredNameFull,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Subject', id: 'tasks.inbox.gridheader.subject,' }),\r\n            field: TaskListFields.Topic,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n    }\r\n\r\n    private getImgReceivedGridColumns(): void {\r\n        this.addColumn({\r\n            headerName: '',\r\n            field: TaskListFields.IsNew,\r\n            width: 10,\r\n            cellRenderer: TaskListIconHelper.getIconForImgReceived,\r\n            suppressFilter: true\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Date', id: 'tasks.images.gridheader.lastupdatedate' }),\r\n            field: TaskListFields.LastUpdateDate,\r\n            width: 30,\r\n            valueFormatter: this._lsCellFormatters.dateCellFormatter,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            sort: SortOrderTypes.Ascending\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'tasks.inbox.gridheader.casenumber' }),\r\n            field: TaskListFields.PolicyNumber,\r\n            width: 30,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Link', id: 'tasks.images.gridheader.docurl' }),\r\n            field: TaskListFields.LinkUrl,\r\n            width: 80,\r\n            suppressFilter: true\r\n        });\r\n        this.addColumn({\r\n            headerName: '',\r\n            field: '',\r\n            width: 7,\r\n            cellRenderer: TaskListIconHelper.getDeleteIconForImgReceived,\r\n            onCellClicked: this.onDeleteButtonClicked.bind(this),\r\n            suppressFilter: true\r\n        });\r\n    }\r\n\r\n    private onDeleteButtonClicked(params: any): void {\r\n        if (params.data) {\r\n            const bisOkDocDTO: BisOkDocDTO = params.data;\r\n            this._taskListImageService.deleteTaskListImage(bisOkDocDTO);\r\n            this._messagingService.publish(TaskListChannels.TaskCountsChanged);\r\n        }\r\n    }\r\n\r\n    private getRequirementRecdGridColumns(): void {\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Received Date', id: 'tasks.mibtwoyr.gridheader.receivedate' }),\r\n            field: TaskListFields.ReceivedDate,\r\n            width: 40,\r\n            valueFormatter: this._lsCellFormatters.dateCellFormatter,\r\n            filter: GridFilterFrameworkComponentType.DateFilter,\r\n            sort: SortOrderTypes.Ascending\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Case #', id: 'tasks.inbox.gridheader.casenumber' }),\r\n            field: TaskListFields.PolicyNumber,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Applicant Name', id: 'tasks.mibtwoyr.gridheader.applicantname' }),\r\n            field: TaskListFields.InsuredName,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Requirement Type', id: 'tasks.pastdue.gridheader.requirementtype' }),\r\n            field: TaskListFields.RequirementName,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Underwriter', id: 'tasks.mibtwoyr.gridheader.underwriter' }),\r\n            field: TaskListFields.UnderwriterNameShort,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n        this.addColumn({\r\n            headerName: this.i18n({ value: 'Service Associate', id: 'tasks.pastdue.gridheader.casemanager' }),\r\n            field: TaskListFields.ServiceAssociateName,\r\n            width: 40,\r\n            filter: GridFilterFrameworkComponentType.TextFilter\r\n        });\r\n    }\r\n}\r\n","import { DBDateUtil } from 'ls-core/util';\r\nimport { DateUtil } from 'life-core/util';\r\n\r\nexport class TaskListIconHelper {\r\n    public static getIcon(params: any): string {\r\n        if (params.data && params.data.DiaryDate) {\r\n            const today = new Date();\r\n            if (\r\n                DateUtil.isDateSet(params.data.DiaryDate.datetime) &&\r\n                DBDateUtil.serverDateTime(params.data.DiaryDate) <= today\r\n            ) {\r\n                return '<div class=\"ls-task-expired-icon grid-cell-icon\"/>';\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    public static getIconForImgReceived(params: any): string {\r\n        if (params.data && params.data.IsNew.toString() === 'true') {\r\n            return '<div class=\"ls-task-expired-icon grid-cell-icon\"/>';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    public static getDeleteIconForImgReceived(params: any): string {\r\n        return '<div class=\"ls-task-cancel-icon grid-cell-icon\"/>';\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { DataServiceParams, UIServiceNames, UIServiceMethods, DataService } from 'ls-core/service';\r\nimport { BisOkDocDTO } from 'ls-core/model/dto/bis-ok-doc.dto';\r\n\r\n@Injectable()\r\nexport class TaskListImageService {\r\n    private _dataService: DataService;\r\n    constructor(dataService: DataService) {\r\n        this._dataService = dataService;\r\n    }\r\n\r\n    public deleteTaskListImage(bisOkDocDTO: BisOkDocDTO): Promise<any> {\r\n        const serviceParams: DataServiceParams = this.getServiceParams(bisOkDocDTO);\r\n        return this._dataService\r\n            .deleteData(serviceParams)\r\n            .then(response => {\r\n                return response.responsePayload;\r\n            })\r\n    }\r\n\r\n    private getServiceParams(bisOkDocDTO: BisOkDocDTO): DataServiceParams {\r\n        return new DataServiceParams({\r\n            serviceInterface: UIServiceNames.TASK_LIST_IMAGE_LINK,\r\n            serviceMethod: UIServiceMethods.LINK,\r\n            requestPayload: this.buildRequestPayload(bisOkDocDTO)\r\n        });\r\n    }\r\n\r\n    private buildRequestPayload(bisOkDocDTO: BisOkDocDTO): TaskImageLinkRequest {\r\n        const request = new TaskImageLinkRequest();\r\n        request.bisOkDocDTO = bisOkDocDTO;\r\n        request.deleteTaskImage = true;\r\n        return request;\r\n    }\r\n}\r\n\r\nclass TaskImageLinkRequest {\r\n    public readonly $type: string = 'life.ls.ui.ria.dto.requests.TaskImageLinkRequest, LifeSuite.UIServiceDTO';\r\n\r\n    constructor() { }\r\n\r\n    public policyId: number;\r\n\r\n    public bisOkDocDTO: BisOkDocDTO;\r\n\r\n    public deleteTaskImage: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { BaseMetaDataResolver } from 'ls-core/view-model';\r\n\r\n@Injectable()\r\nexport class TaskListMetaDataResolver extends BaseMetaDataResolver {\r\n    protected getMetadataTypes(): string[] {\r\n        return ['underwriter'];\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"d-flex justify-content-between\\\">\\r\\n    <div class=\\\"lf-grid-title\\\">{{title}}</div>\\r\\n    <div class=\\\"ml-auto pb-2\\\">\\r\\n        <lf-button id=\\\"openPolicyButton\\\" label=\\\"Open\\\" i18n-label=\\\"@@general.button.label.open\\\" (onClick)=\\\"onOpenButtonClick()\\\"\\r\\n            styleClass=\\\"btn btn-primary mt-2\\\" [disabled]=\\\"isOpenButtonDisabled\\\" secureComponent></lf-button>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row ls-task-list-grid\\\">\\r\\n    <data-grid #dataGrid style=\\\"width: 100%\\\" [gridOptions]=\\\"gridOptions\\\" (rowClicked)=\\\"onRowClicked($event) \\\"\\r\\n        (rowDoubleClicked)=\\\"onRowDoubleClicked($event) \\\" (filterChanged)=\\\"onFilterChange() \\\"></data-grid>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <data-grid-status-bar [rowCount]=\\\"rowCount\\\"></data-grid-status-bar>\\r\\n</div>\"","module.exports = \"/* Can redefine any of these variables in the themes by adding !default to the value */\\n/* Fonts */\\n/* Leftnav */\\n/* Navbar */\\n/* Footer */\\n/* Height Calculations */\\n/* Input components */\\n/* Obsolete ConsumerFacing variables\\r\\n\\r\\n$quote-btn-font-size: 23px;\\r\\n$form-quote-bton-font-size: 22px;\\r\\n$radio-checkbox-height: 20px;\\r\\n$radio-checkbox-width: 25px;\\r\\n$form-radius: 25px;\\r\\n$mobile-app-width: 93%;\\r\\n$panel-max-width: 400px;\\r\\n$wrapper-max-width: 1240px;\\r\\n\\r\\n$landing-pg-save-time-font-family: 'Goudy Old Style', Garamond, serif;\\r\\n$quote-font-family: 'Calisto MT', Serif;\\r\\n$invalid-message-font-family: 'adelle-sans', Helvetica, Arial, sans-serif;\\r\\n*/\\n.ls-task-list-grid {\\n  height: calc(100vh - (262px + ((1.1rem - 16px) * 10)) - 32px); }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9saWZlc3VpdGUtYXBwL2J1c2luZXNzL2hvbWUvdGFza3MvdGFzay1saXN0L0Q6XFxjb2RlXFxsaWZlc3VpdGVcXGJhc2VfMTBcXFVJXFxIVE1MNVxcTGlmZVN1aXRlLkFuZ3VsYXIvc3JjXFxzdHlsZXNcXGJhc2VcXGhlbHBlcnNcXHZhcmlhYmxlcy5zY3NzIiwic3JjL2xpZmVzdWl0ZS1hcHAvYnVzaW5lc3MvaG9tZS90YXNrcy90YXNrLWxpc3QvRDpcXGNvZGVcXGxpZmVzdWl0ZVxcYmFzZV8xMFxcVUlcXEhUTUw1XFxMaWZlU3VpdGUuQW5ndWxhci9zcmNcXGxpZmVzdWl0ZS1hcHBcXGJ1c2luZXNzXFxob21lXFx0YXNrc1xcdGFzay1saXN0XFx0YXNrLWxpc3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0EsdUZBQXVGO0FBRXZGLFdBQVc7QUFZWCxhQUFhO0FBS2IsWUFBWTtBQUtaLFlBQVk7QUFHWix5QkFBeUI7QUFLekIsc0JBQXNCO0FBSXRCOzs7Ozs7Ozs7Ozs7OztFQWNFO0FDakRGO0VBQ0ksOERBSDRHLEVBSS9HIiwiZmlsZSI6InNyYy9saWZlc3VpdGUtYXBwL2J1c2luZXNzL2hvbWUvdGFza3MvdGFzay1saXN0L3Rhc2stbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vJGJvb3RzdHJhcC1zYXNzLXZlcnNpb246ICczLjMuNyc7XHJcbi8vJGJvb3RzdHJhcC1zYXNzLWljb24tcGF0aDogJy4vanNwbV9wYWNrYWdlcy9naXRodWIvdHdicy9ib290c3RyYXAtc2Fzc0AnICsgJGJvb3RzdHJhcC1zYXNzLXZlcnNpb24gKyAnL2Fzc2V0cy9mb250cy9ib290c3RyYXAvJztcclxuLy8kYm9vdHN0cmFwLXNhc3MtcGF0aDogJy4uLy4uL2pzcG1fcGFja2FnZXMvZ2l0aHViL3R3YnMvYm9vdHN0cmFwLXNhc3NAJyArICRib290c3RyYXAtc2Fzcy12ZXJzaW9uICsgJy9hc3NldHMvc3R5bGVzaGVldHMvYm9vdHN0cmFwJztcclxuLy8kYm9vdHN0cmFwLXNhc3MtdmFyaWFibGVzLXBhdGg6ICcuLi8uLi9qc3BtX3BhY2thZ2VzL2dpdGh1Yi90d2JzL2Jvb3RzdHJhcC1zYXNzQCcgKyAkYm9vdHN0cmFwLXNhc3MtdmVyc2lvbiArICcvYXNzZXRzL3N0eWxlc2hlZXRzL2Jvb3RzdHJhcC92YXJpYWJsZXMnO1xyXG5cclxuLyogQ2FuIHJlZGVmaW5lIGFueSBvZiB0aGVzZSB2YXJpYWJsZXMgaW4gdGhlIHRoZW1lcyBieSBhZGRpbmcgIWRlZmF1bHQgdG8gdGhlIHZhbHVlICovXHJcblxyXG4vKiBGb250cyAqL1xyXG4kZm9udC1zaXplLWJhc2U6IDAuN3JlbTtcclxuJGZvbnQtc2l6ZS1zbWFsbDogKCgkZm9udC1zaXplLWJhc2UgKiAwLjkpKTtcclxuJGZvbnQtc2l6ZS1sYXJnZTogKCgkZm9udC1zaXplLWJhc2UgKiAxLjIpKTtcclxuJGZvbnQtc2l6ZS1leHRyYS1sYXJnZTogKCgkZm9udC1zaXplLWJhc2UgKiA1LjIpKTtcclxuJGZvbnQtc2l6ZS1oMTogKCgkZm9udC1zaXplLWJhc2UgKiAyLjYpKTtcclxuJGZvbnQtc2l6ZS1oMjogKCgkZm9udC1zaXplLWJhc2UgKiAyLjE1KSk7XHJcbiRmb250LXNpemUtaDM6ICgkZm9udC1zaXplLWJhc2UgKiAyKTtcclxuJGZvbnQtc2l6ZS1oNDogKCgkZm9udC1zaXplLWJhc2UgKiAxLjg1KSk7XHJcbiRmb250LXNpemUtaDU6ICgoJGZvbnQtc2l6ZS1iYXNlICogMS4zKSk7XHJcbiRmb250LXNpemUtaDY6ICgoJGZvbnQtc2l6ZS1iYXNlICogMS4xKSk7XHJcblxyXG4vKiBMZWZ0bmF2ICovXHJcbiRsZWZ0bmF2LW1heC13aWR0aDogMTIuNXJlbTtcclxuJGxlZnRuYXYtbWF4LXdpZHRoLXhsOiAxNHJlbTtcclxuJGxlZnRuYXYtaWNvbnMtb25seS13aWR0aDogMi41cmVtO1xyXG5cclxuLyogTmF2YmFyICovXHJcbiRuYXZiYXItbG9nby1oZWlnaHQ6IDUwcHggIWRlZmF1bHQ7XHJcbiRuYXZiYXItbG9nby13aWR0aDogMjA1cHggIWRlZmF1bHQ7XHJcbiRuYXZiYXItaGVpZ2h0OiAkbmF2YmFyLWxvZ28taGVpZ2h0ICsgNXB4O1xyXG5cclxuLyogRm9vdGVyICovXHJcbiRmb290ZXItaGVpZ2h0OiAwcHg7XHJcblxyXG4vKiBIZWlnaHQgQ2FsY3VsYXRpb25zICovXHJcbiRvZmZzZXQtYm90dG9tOiA3cHg7XHJcbiRncmlkLXN0YXR1cy1iYXItaGVpZ2h0OiAyNXB4O1xyXG4kZ3JpZC1vZmZzZXQtYm90dG9tOiAkb2Zmc2V0LWJvdHRvbSArICRncmlkLXN0YXR1cy1iYXItaGVpZ2h0O1xyXG5cclxuLyogSW5wdXQgY29tcG9uZW50cyAqL1xyXG4kaW5wdXQtaGVpZ2h0OiAxLjVyZW07XHJcbiRpbnB1dC10ZXh0LXNpemU6IDAuOHJlbTtcclxuXHJcbi8qIE9ic29sZXRlIENvbnN1bWVyRmFjaW5nIHZhcmlhYmxlc1xyXG5cclxuJHF1b3RlLWJ0bi1mb250LXNpemU6IDIzcHg7XHJcbiRmb3JtLXF1b3RlLWJ0b24tZm9udC1zaXplOiAyMnB4O1xyXG4kcmFkaW8tY2hlY2tib3gtaGVpZ2h0OiAyMHB4O1xyXG4kcmFkaW8tY2hlY2tib3gtd2lkdGg6IDI1cHg7XHJcbiRmb3JtLXJhZGl1czogMjVweDtcclxuJG1vYmlsZS1hcHAtd2lkdGg6IDkzJTtcclxuJHBhbmVsLW1heC13aWR0aDogNDAwcHg7XHJcbiR3cmFwcGVyLW1heC13aWR0aDogMTI0MHB4O1xyXG5cclxuJGxhbmRpbmctcGctc2F2ZS10aW1lLWZvbnQtZmFtaWx5OiAnR291ZHkgT2xkIFN0eWxlJywgR2FyYW1vbmQsIHNlcmlmO1xyXG4kcXVvdGUtZm9udC1mYW1pbHk6ICdDYWxpc3RvIE1UJywgU2VyaWY7XHJcbiRpbnZhbGlkLW1lc3NhZ2UtZm9udC1mYW1pbHk6ICdhZGVsbGUtc2FucycsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiovXHJcbiIsIkBpbXBvcnQgJy4uLy4uLy4uLy4uLy4uL3N0eWxlcy9iYXNlL2hlbHBlcnMvdmFyaWFibGVzJztcclxuXHJcbiR0YXNrLWxpc3QtZ3JpZC1vZmZzZXQtdG9wOiAyMDdweDtcclxuJHRhc2stbGlzdC1ncmlkLXRvcDogJHRhc2stbGlzdC1ncmlkLW9mZnNldC10b3AgKyAkbmF2YmFyLWhlaWdodDtcclxuJHRhc2stbGlzdC1ncmlkLWhlaWdodDogY2FsYygxMDB2aCAtICgjeyR0YXNrLWxpc3QtZ3JpZC10b3B9ICsgKCgxLjFyZW0gLSAxNnB4KSAqIDEwKSkgLSAjeyRncmlkLW9mZnNldC1ib3R0b219KTtcclxuXHJcbi5scy10YXNrLWxpc3QtZ3JpZCB7XHJcbiAgICBoZWlnaHQ6ICR0YXNrLWxpc3QtZ3JpZC1oZWlnaHQ7XHJcbn1cclxuIl19 */\"","export const TaskType = {\r\n    Inbox: 'MsgInBox',\r\n    Outbox: 'MsgOutBox',\r\n    PendingMail: 'PendingMailRequirements',\r\n    ReqToOrder: 'RequirementsToOrder',\r\n    PastDueUWReq: 'PastDueRequirementsUW',\r\n    CaseMgrRevMsg: 'MsgReview',\r\n    Diary: 'DiaryActivity',\r\n    PastDuePreIssue: 'PastDueRequirementsPreIssue',\r\n    PastDuePostIssue: 'PastDueRequirementsPostIssue',\r\n    ImgRecd: 'ImageReceived',\r\n    MIB2Yr: 'MibTwoYr'\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { I18n } from 'life-core/i18n';\r\nimport { TaskFilterType } from './filter/task-filter-type';\r\n\r\n@Injectable()\r\nexport class TaskUtil {\r\n    public i18n: I18n;\r\n\r\n    constructor(i18n: I18n) {\r\n        this.i18n = i18n;\r\n    }\r\n\r\n    public getTaskTypeCountLabel(filterType: string): string {\r\n        const TaskTypeCountLabel: { [filterType: string]: string } = {\r\n            [TaskFilterType.Inbox]: this.i18n({ value: 'Inbox', id: 'tasks.count.label.inbox' }),\r\n            [TaskFilterType.Outbox]: this.i18n({ value: 'Outbox', id: 'tasks.count.label.outbox' }),\r\n            [TaskFilterType.PendingMail]: this.i18n({\r\n                value: \"Req Rec'd\",\r\n                id: 'tasks.count.label.requirementrecevied'\r\n            }),\r\n            [TaskFilterType.ReqToOrder]: this.i18n({ value: 'Req to Order', id: 'tasks.count.label.reqtoorder' }),\r\n            [TaskFilterType.PastDueUWReq]: this.i18n({\r\n                value: 'Past Due UW Req',\r\n                id: 'tasks.count.label.pastdueuwreq'\r\n            }),\r\n            [TaskFilterType.CaseMgrRevMsg]: this.i18n({ value: 'Case Mgr Rev Msg', id: 'tasks.count.label.revmsg' }),\r\n            [TaskFilterType.Diary]: this.i18n({ value: 'Diary', id: 'tasks.count.label.diary' }),\r\n            [TaskFilterType.PastDuePreIssue]: this.i18n({\r\n                value: 'Past Due Pre Issue',\r\n                id: 'tasks.count.label.pastduepreiss'\r\n            }),\r\n            [TaskFilterType.PastDuePostIssue]: this.i18n({\r\n                value: 'Past Due Post Issue',\r\n                id: 'tasks.count.label.pastduepostiss'\r\n            }),\r\n            [TaskFilterType.ImgRecd]: this.i18n({ value: 'Img Recd', id: 'tasks.count.label.images' }),\r\n            [TaskFilterType.MIB2Yr]: this.i18n({ value: 'MIB 2Yr', id: 'tasks.count.label.mibtwoyr' })\r\n        };\r\n        return TaskTypeCountLabel[filterType];\r\n    }\r\n\r\n    public getTaskTypeGridTitle(filterType: string): string {\r\n        const TaskTypeGridTitle: { [filterType: string]: string } = {\r\n            [TaskFilterType.Inbox]: this.i18n({ value: 'Inbox', id: 'tasks.title.inbox' }),\r\n            [TaskFilterType.Outbox]: this.i18n({ value: 'Outbox', id: 'tasks.title.outbox' }),\r\n            [TaskFilterType.PendingMail]: this.i18n({\r\n                value: 'Requirement Received',\r\n                id: 'tasks.title.requirementrecevied'\r\n            }),\r\n            [TaskFilterType.ReqToOrder]: this.i18n({ value: 'Requirements to Order', id: 'tasks.title.reqtoorder' }),\r\n            [TaskFilterType.PastDueUWReq]: this.i18n({\r\n                value: 'Past Due Underwriting Requirements',\r\n                id: 'tasks.title.pastdueuwreq'\r\n            }),\r\n            [TaskFilterType.CaseMgrRevMsg]: this.i18n({\r\n                value: 'Case Manager Review Messages',\r\n                id: 'tasks.title.revmsg'\r\n            }),\r\n            [TaskFilterType.Diary]: this.i18n({ value: 'Diary Activity', id: 'tasks.title.diary' }),\r\n            [TaskFilterType.PastDuePreIssue]: this.i18n({\r\n                value: 'Past Due Pre Issue Requirements',\r\n                id: 'tasks.title.pastduepreiss'\r\n            }),\r\n            [TaskFilterType.PastDuePostIssue]: this.i18n({\r\n                value: 'Past Due Post Issue Requirements',\r\n                id: 'tasks.title.pastduepostiss'\r\n            }),\r\n            [TaskFilterType.ImgRecd]: this.i18n({ value: 'Image Received', id: 'tasks.title.images' }),\r\n            [TaskFilterType.MIB2Yr]: this.i18n({ value: 'MIB 2Yr', id: 'tasks.title.mibtwoyr' })\r\n        };\r\n        return TaskTypeGridTitle[filterType];\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n        <tasks-filter (filterChange)=\\\"setTaskFilter($event)\\\"></tasks-filter>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\" [ngSwitch]=\\\"true\\\">\\r\\n        <inbox-outbox-task-list *ngSwitchCase=\\\"taskFilter?.selectedTaskFilterType === taskFilterType.Inbox || \\r\\n                taskFilter?.selectedTaskFilterType === taskFilterType.Outbox\\\"\\r\\n            [filter]=\\\"taskFilter\\\"></inbox-outbox-task-list>\\r\\n        <requirement-task-list *ngSwitchCase=\\\"taskFilter?.selectedTaskFilterType === taskFilterType.ReqToOrder || \\r\\n                taskFilter?.selectedTaskFilterType === taskFilterType.PastDueUWReq || \\r\\n                taskFilter?.selectedTaskFilterType === taskFilterType.PastDuePreIssue || \\r\\n                taskFilter?.selectedTaskFilterType === taskFilterType.PastDuePostIssue || \\r\\n                taskFilter?.selectedTaskFilterType === taskFilterType.PendingMail\\\"\\r\\n            [filter]=\\\"taskFilter\\\"></requirement-task-list>\\r\\n        <review-message-task-list *ngSwitchCase=\\\"taskFilter?.selectedTaskFilterType === taskFilterType.CaseMgrRevMsg\\\"\\r\\n            [filter]=\\\"taskFilter\\\"></review-message-task-list>\\r\\n        <diary-activity-task-list *ngSwitchCase=\\\"taskFilter?.selectedTaskFilterType === taskFilterType.Diary\\\" [filter]=\\\"taskFilter\\\"></diary-activity-task-list>\\r\\n        <image-received-task-list *ngSwitchCase=\\\"taskFilter?.selectedTaskFilterType === taskFilterType.ImgRecd\\\"\\r\\n            [filter]=\\\"taskFilter\\\"></image-received-task-list>\\r\\n        <mib-task-list *ngSwitchCase=\\\"taskFilter?.selectedTaskFilterType === taskFilterType.MIB2Yr\\\" [filter]=\\\"taskFilter\\\"></mib-task-list>\\r\\n    </div>\\r\\n</div>\"","import { Component, Injector } from '@angular/core';\r\n\r\nimport { SecondaryTabHostViewModel } from 'life-core/component/layout/tabview';\r\nimport { AuthorizationProvider } from 'life-core/authorization';\r\n\r\nimport { DefaultAuthorizationProvider } from 'business/shared/authorization/default-authorization.provider';\r\n\r\nimport { TasksFilterModel } from './filter';\r\nimport { PolicySubscriber } from 'ls-core/session';\r\nimport { TaskListColumnsBuilder } from './task-list/task-list-columns.builder';\r\nimport { TaskListGridDataSource } from './datasource';\r\nimport { TaskListImageService } from './task-list/task-list-image.service';\r\nimport { TaskFilterType } from './filter';\r\n\r\n@Component({\r\n    selector: 'tasks-tab',\r\n    templateUrl: './tasks-tab.component.html',\r\n    providers: [\r\n        PolicySubscriber,\r\n        { provide: AuthorizationProvider, useClass: DefaultAuthorizationProvider },\r\n        TaskListColumnsBuilder,\r\n        TaskListGridDataSource,\r\n        TasksFilterModel,\r\n        TaskListImageService\r\n    ]\r\n})\r\nexport class TasksTabComponent extends SecondaryTabHostViewModel {\r\n    public taskFilter: TasksFilterModel;\r\n    public taskFilterType: any = TaskFilterType;\r\n\r\n    constructor(injector: Injector) {\r\n        super(injector);\r\n    }\r\n\r\n    public setTaskFilter(value: TasksFilterModel): void {\r\n        this.taskFilter = { ...value };\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LsComponentsModule } from 'ls-core/component/ls-components.module';\r\n\r\nimport { TasksTabComponent } from './tasks-tab.component';\r\nimport { TasksFilterComponent } from './filter';\r\nimport { TaskListMetaDataResolver } from './task-list/task-list-metadata.resolver';\r\nimport { TaskUtil } from './task-util';\r\nimport {\r\n    DiaryActivityTaskListComponent,\r\n    ImageReceivedTaskListComponent,\r\n    InboxOutBoxTaskListComponent,\r\n    MibTaskListComponent,\r\n    RequirementTaskListComponent,\r\n    ReviewMessageTaskListComponent\r\n} from './task-list';\r\nimport { TaskFilterService } from './filter/task-filter.service';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, LsComponentsModule],\r\n    declarations: [\r\n        TasksTabComponent,\r\n        TasksFilterComponent,\r\n        DiaryActivityTaskListComponent,\r\n        ImageReceivedTaskListComponent,\r\n        InboxOutBoxTaskListComponent,\r\n        MibTaskListComponent,\r\n        RequirementTaskListComponent,\r\n        ReviewMessageTaskListComponent\r\n    ],\r\n    providers: [TaskListMetaDataResolver, TaskUtil, TaskFilterService],\r\n    exports: [TasksTabComponent]\r\n})\r\nexport class TasksModule {}\r\n","export const AutoNavigationChannels = {\r\n    PolicyTab: 'policy-tab',\r\n    Requirement: 'requirement',\r\n    Evidence: 'evidence',\r\n    CaseNotes: 'case-notes'\r\n};\r\n","import { INavigationSequence, NavigationTarget, NavigationTargetTypes } from 'ls-core/model/auto-navigation';\r\nimport { RequirementProxy, ReferralProxyDTO } from 'ls-core/model';\r\nimport { NavigationSequence } from 'ls-core/model/auto-navigation/navigation-sequence';\r\n\r\nimport { NavigationSequenceType } from './navigation-sequence-type';\r\n\r\nconst NavigatorID = {\r\n    PolicyTab: 'PolicyTab',\r\n    Requirements: 'Requirements',\r\n    Mib: 'MIB'\r\n};\r\n\r\nfunction createNavigationTarget(\r\n    navigatorId: string,\r\n    targetType: NavigationTargetTypes = NavigationTargetTypes.Tab\r\n): NavigationTarget {\r\n    const navigationTarget = new NavigationTarget();\r\n    navigationTarget.navigatorId = navigatorId;\r\n    navigationTarget.targetType = targetType;\r\n    return navigationTarget;\r\n}\r\n\r\nfunction createNavigationSequenceForNotesAndMessages(target: any): INavigationSequence {\r\n    const navigationSequence: INavigationSequence = new NavigationSequence();\r\n    navigationSequence.addNavigationTarget(createNavigationTarget(NavigatorID.PolicyTab));\r\n    return navigationSequence;\r\n}\r\n\r\nfunction createNavigationSequenceForRequirements(target: any): INavigationSequence {\r\n    const requirement: RequirementProxy = target as RequirementProxy;\r\n    const navigationSequence: INavigationSequence = new NavigationSequence();\r\n    const navigationTarget = createNavigationTarget(NavigatorID.Requirements, NavigationTargetTypes.CollectionItem);\r\n    navigationTarget.addParam(NavigationTarget.PARAM_PERSON_ID, requirement.PolicyPersonId);\r\n    navigationTarget.addParam(NavigationTarget.PARAM_COLLECTION_ITEM_ID, requirement.InsuredRequirementId.toString());\r\n    navigationSequence.addNavigationTarget(navigationTarget);\r\n\r\n    return navigationSequence;\r\n}\r\n\r\nfunction createNavigationSequenceForNotes(target: any): INavigationSequence {\r\n    const note: ReferralProxyDTO = target as ReferralProxyDTO;\r\n    const navigationSequence: INavigationSequence = new NavigationSequence();\r\n    const navigationTarget = createNavigationTarget(NavigatorID.PolicyTab, NavigationTargetTypes.CollectionItem);\r\n    navigationTarget.addParam(NavigationTarget.PARAM_TARGET_ID, note.NoteId);\r\n    navigationSequence.addNavigationTarget(navigationTarget);\r\n\r\n    return navigationSequence;\r\n}\r\n\r\nfunction createNavigationSequenceForMIBEvidence(target: any): INavigationSequence {\r\n    const navigationSequence: INavigationSequence = new NavigationSequence();\r\n    const navigationTarget = createNavigationTarget(NavigatorID.Mib);\r\n    navigationTarget.addParam(NavigationTarget.PARAM_TARGET_ID, 'tabMIB');\r\n    navigationSequence.addNavigationTarget(navigationTarget);\r\n    return navigationSequence;\r\n}\r\n\r\nconst NavigationSequenceMap = {\r\n    [NavigationSequenceType.NOTES]: createNavigationSequenceForNotes,\r\n    [NavigationSequenceType.REQUIREMENTS]: createNavigationSequenceForRequirements,\r\n    [NavigationSequenceType.MIB]: createNavigationSequenceForMIBEvidence,\r\n    [NavigationSequenceType.REVIEW_MESSAGES]: createNavigationSequenceForNotesAndMessages\r\n};\r\n\r\nexport class NavigationSequenceFactory {\r\n    constructor() {}\r\n\r\n    public static getNavigationSequence(target: any, sequenceType: string): INavigationSequence {\r\n        const navigationSequenceCreationHandler = NavigationSequenceMap[sequenceType];\r\n        return navigationSequenceCreationHandler(target);\r\n    }\r\n}\r\n","export enum NavigationSequenceType {\r\n    NOTES = 'notes',\r\n    REQUIREMENTS = 'requirements',\r\n    REVIEW_MESSAGES = 'reviewMessages',\r\n    MIB = 'mib'\r\n}\r\n","export * from './navigation-sequence.interface';\r\nexport * from './navigation-sequence';\r\nexport * from './navigation-target';\r\n","import { INavigationSequence } from './navigation-sequence.interface';\r\nimport { NavigationTarget } from './navigation-target';\r\n\r\nexport class NavigationSequence implements INavigationSequence {\r\n    private _navigationTargets: NavigationTarget[];\r\n\r\n    constructor() {\r\n        this._navigationTargets = [];\r\n    }\r\n\r\n    public addNavigationTarget(item: NavigationTarget): NavigationTarget {\r\n        this._navigationTargets.push(item);\r\n        return item;\r\n    }\r\n\r\n    /**\r\n     * Returns clone of navigation sequence\r\n     * @return cloned NavigationSequence object\r\n     *\r\n     */\r\n    public clone(): INavigationSequence {\r\n        const sequence = new NavigationSequence();\r\n        sequence._navigationTargets = [...this._navigationTargets];\r\n        return sequence;\r\n    }\r\n\r\n    /**\r\n     * Returns next navigation target from the navigation sequence\r\n     * @return navigation target\r\n     *\r\n     */\r\n    public getNextNavigationTarget(): NavigationTarget {\r\n        return this._navigationTargets.length > 0 ? this._navigationTargets[0] : null;\r\n    }\r\n\r\n    /**\r\n     * Length of navigation sequence\r\n     * @return length value\r\n     *\r\n     */\r\n    public get length(): number {\r\n        return this._navigationTargets.length;\r\n    }\r\n\r\n    /**\r\n     * Removes navigation target from navigation sequence\r\n     * @param item - navigation target object to remove\r\n     *\r\n     */\r\n    public removeNavigationTarget(item: NavigationTarget): void {\r\n        const removeIndex = this._navigationTargets.findIndex(target => target.navigatorId === item.navigatorId);\r\n        this._navigationTargets.splice(removeIndex, 1);\r\n    }\r\n}\r\n","/**\r\n * NavigationTarget defines a single navigation step in auto-navigation sequence\r\n *\r\n */\r\nexport class NavigationTarget {\r\n    public static PARAM_TARGET_ID: string = 'targetId';\r\n    public static PARAM_PERSON_ID: string = 'personId';\r\n    public static PARAM_COLLECTION_ITEM_ID: string = 'collectionItemId';\r\n\r\n    private _navigatorId: string;\r\n    private _targetType: string;\r\n    private _params: Map<string, string>;\r\n\r\n    constructor() {\r\n        this._params = new Map();\r\n    }\r\n\r\n    /**\r\n     * Id of the class implementing navigation step\r\n     * described in this navigation target\r\n     * @return class Id\r\n     *\r\n     */\r\n    public get navigatorId(): string {\r\n        return this._navigatorId;\r\n    }\r\n\r\n    public set navigatorId(value: string) {\r\n        this._navigatorId = value;\r\n    }\r\n\r\n    /**\r\n     * Type of the navigation target: Tab, SubTab, Popup, etc.\r\n     * @return\r\n     *\r\n     */\r\n    public get targetType(): string {\r\n        return this._targetType;\r\n    }\r\n\r\n    public set targetType(value: string) {\r\n        this._targetType = value;\r\n    }\r\n\r\n    /**\r\n     * Adds parameter to the collection describing navigation target\r\n     * @param key\r\n     * @param value\r\n     * @return boolean value indicating whether parameter was added successfully\r\n     *\r\n     */\r\n    public addParam(key: any, value: any): boolean {\r\n        if (key == null || value == null || this._params.has(key)) {\r\n            return false;\r\n        } else {\r\n            this._params.set(key, value);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes parameter from the collection describing navigation target\r\n     * @param key\r\n     * @return parameter being removed\r\n     *\r\n     */\r\n    public removeParam(key: any): string {\r\n        let value = '';\r\n        if (this._params.has(key)) {\r\n            value = this._params.get(key);\r\n            this._params.delete(key);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Retrieves parameter from the collection describing navigation target\r\n     * @param key\r\n     * @return parameter that corresponds to the provided key\r\n     *\r\n     */\r\n    public getParam(key: any): string {\r\n        let value = '';\r\n        if (this._params.has(key)) {\r\n            value = this._params.get(key);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n\r\nexport enum NavigationTargetTypes {\r\n    Tab = 'targetTypeTab',\r\n    SubTab = 'targetTypeSubTab',\r\n    Popup = 'targetTypePopup',\r\n    CollectionItem = 'targetTypeCollectionItem',\r\n    Route = 'targetTypeRoute'\r\n}\r\n"],"sourceRoot":""}