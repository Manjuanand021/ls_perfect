{"version":3,"sources":["webpack:///./src/app/components/button/button.ts","webpack:///./src/app/showcase/components/splitbutton/splitbuttondemo-routing.module.ts","webpack:///./src/app/showcase/components/splitbutton/splitbuttondemo.html","webpack:///./src/app/showcase/components/splitbutton/splitbuttondemo.module.ts","webpack:///./src/app/showcase/components/splitbutton/splitbuttondemo.ts"],"names":[],"mappings":"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","file":"components-splitbutton-splitbuttondemo-module.js","sourcesContent":["import {NgModule,Directive,Component,ElementRef,EventEmitter,AfterViewInit,Output,OnDestroy,HostBinding,HostListener,Input} from '@angular/core';\nimport {DomHandler} from '../dom/domhandler';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pButton]',\n    providers: [DomHandler]\n})\nexport class ButtonDirective implements AfterViewInit, OnDestroy {\n\n    @Input() iconPos: string = 'left';\n    \n    @Input() cornerStyleClass: string = 'ui-corner-all';\n        \n    public _label: string;\n    \n    public _icon: string;\n            \n    public initialized: boolean;\n\n    constructor(public el: ElementRef, public domHandler: DomHandler) {}\n    \n    ngAfterViewInit() {\n        this.domHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n        if(this.icon) {\n            let iconElement = document.createElement(\"span\");\n            iconElement.setAttribute(\"aria-hidden\", \"true\");\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\n            iconElement.className = iconPosClass  + ' ui-clickable ' + this.icon;\n            this.el.nativeElement.appendChild(iconElement);\n        }\n        \n        let labelElement = document.createElement(\"span\");\n        labelElement.className = 'ui-button-text ui-clickable';\n        labelElement.appendChild(document.createTextNode(this.label||'ui-btn'));\n        this.el.nativeElement.appendChild(labelElement);\n        this.initialized = true;\n    }\n        \n    getStyleClass(): string {\n        let styleClass = 'ui-button ui-widget ui-state-default ' + this.cornerStyleClass;\n        if(this.icon) {\n            if(this.label != null && this.label != undefined) {\n                if(this.iconPos == 'left')\n                    styleClass = styleClass + ' ui-button-text-icon-left';\n                else\n                    styleClass = styleClass + ' ui-button-text-icon-right';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-icon-only';\n            }\n        }\n        else {\n            if(this.label) {\n                styleClass = styleClass + ' ui-button-text-only';\n            }\n            else {\n                styleClass = styleClass + ' ui-button-text-empty';\n            }\n        }\n        \n        return styleClass;\n    }\n    \n    @Input() get label(): string {\n        return this._label;\n    }\n\n    set label(val: string) {\n        this._label = val;\n        \n        if(this.initialized) {\n            this.domHandler.findSingle(this.el.nativeElement, '.ui-button-text').textContent = this._label;\n\n            if(!this.icon) {\n                if (this._label) {\n                    this.domHandler.removeClass(this.el.nativeElement, 'ui-button-text-empty');\n                    this.domHandler.addClass(this.el.nativeElement, 'ui-button-text-only');\n                }\n                else {\n                    this.domHandler.addClass(this.el.nativeElement, 'ui-button-text-empty');\n                    this.domHandler.removeClass(this.el.nativeElement, 'ui-button-text-only');\n                }\n            }\n        }\n    }\n    \n    @Input() get icon(): string {\n        return this._icon;\n    }\n\n    set icon(val: string) {\n        this._icon = val;\n        \n        if(this.initialized) {\n            let iconPosClass = (this.iconPos == 'right') ? 'ui-button-icon-right': 'ui-button-icon-left';\n            this.domHandler.findSingle(this.el.nativeElement, '.ui-clickable').className =\n                iconPosClass + ' ui-clickable ' + this.icon;\n        }\n    }\n        \n    ngOnDestroy() {\n        while(this.el.nativeElement.hasChildNodes()) {\n            this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\n        }\n        \n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-button',\n    template: `\n        <button [attr.type]=\"type\" [class]=\"styleClass\" [style]=\"style\" [disabled]=\"disabled\"\n            [ngClass]=\"{'ui-button ui-widget ui-state-default ui-corner-all':true,\n                        'ui-button-icon-only': (icon && !label),\n                        'ui-button-text-icon-left': (icon && label && iconPos === 'left'),\n                        'ui-button-text-icon-right': (icon && label && iconPos === 'right'),\n                        'ui-button-text-only': (!icon && label),\n                        'ui-button-text-empty': (!icon && !label),\n                        'ui-state-disabled': disabled}\"\n                        (click)=\"onClick.emit($event)\" (focus)=\"onFocus.emit($event)\" (blur)=\"onBlur.emit($event)\">\n            <ng-content></ng-content>\n            <span [ngClass]=\"{'ui-clickable': true,\n                        'ui-button-icon-left': (iconPos === 'left'), \n                        'ui-button-icon-right': (iconPos === 'right')}\"\n                        [class]=\"icon\" *ngIf=\"icon\"></span>\n            <span class=\"ui-button-text ui-clickable\">{{label||'ui-btn'}}</span>\n        </button>\n    `\n})\nexport class Button {\n\n    @Input() type: string;\n\n    @Input() iconPos: string = 'left';\n\n    @Input() icon: string;\n\n    @Input() label: string;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ButtonDirective,Button],\n    declarations: [ButtonDirective,Button]\n})\nexport class ButtonModule { }\n","import {NgModule}     from '@angular/core';\nimport {RouterModule} from '@angular/router'\nimport {SplitButtonDemo} from './splitbuttondemo';\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forChild([\n\t\t\t{path:'',component: SplitButtonDemo}\n\t\t])\n\t],\n\texports: [\n\t\tRouterModule\n\t]\n})\nexport class SplitButtonDemoRoutingModule {}\n","module.exports = \"<div class=\\\"content-section introduction\\\">\\n    <div>\\n        <span class=\\\"feature-title\\\">SplitButton</span>\\n        <span>SplitButton groups a set of commands in an overlay with a default command.</span>\\n    </div>\\n</div>\\n\\n<div class=\\\"content-section implementation\\\">\\n    <p-toast [style]=\\\"{marginTop: '80px'}\\\"></p-toast>\\n\\n    <h3 class=\\\"first\\\">Basic</h3>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\"></p-splitButton>\\n\\n    <h3>Severities</h3>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-secondary\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('success')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-success\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-info\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('warn')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-warning\\\"></p-splitButton>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('error')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-danger\\\"></p-splitButton>\\n\\n    <h3>RTL</h3>\\n    <p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" dir=\\\"rtl\\\"></p-splitButton>\\n</div>\\n\\n<div class=\\\"content-section documentation\\\">\\n    <p-tabView effect=\\\"fade\\\">\\n        <p-tabPanel header=\\\"Documentation\\\">\\n                    <h3>Import</h3>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nimport &#123;SplitButtonModule&#125; from 'primeng/splitbutton';\\n</code>\\n</pre>\\n\\n            <h3>Getting Started</h3>\\n            <p>SplitButton has a default command button and a collection of menuitems to be displayed in an overlay.</p>\\n\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\"&gt;&lt;/p-splitButton&gt;\\n</code>\\n</pre>\\n\\n            <h3>Animation Configuration</h3>\\n            <p>Transition of the open and hide animations can be customized using the showTransitionOptions and hideTransitionOptions properties, \\n                example below disables the animations altogether.</p>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-splitButton [showTransitionOptions]=\\\"'0ms'\\\" [hideTransitionOptions]=\\\"'0ms'\\\" label=\\\"Save\\\" icon=\\\"pi pi-check\\\" (onClick)=\\\"save()\\\" [model]=\\\"items\\\"&gt;&lt;/p-splitButton&gt;\\n</code>\\n</pre>\\n            <h3>MenuModel API</h3>\\n            <p>SplitButton uses the common menumodel api to define its items, visit <a [routerLink]=\\\"['/menumodel']\\\">MenuModel API</a> for details.</p>\\n\\n            <h3>Properties</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Type</th>\\n                            <th>Default</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>label</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Text of the button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>icon</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Name of the icon.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>iconPos</td>\\n                            <td>string</td>\\n                            <td>left</td>\\n                            <td>Position of the icon, valid values are \\\"left\\\" and \\\"right\\\".</td>\\n                        </tr>\\n                        <tr>\\n                            <td>style</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>styleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the component.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>menuStyle</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Inline style of the overlay menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>menuStyleClass</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Style class of the overlay menu.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>appendTo</td>\\n                            <td>any</td>\\n                            <td>null</td>\\n                            <td>Target element to attach the overlay, valid values are \\\"body\\\" or a local ng-template variable of another element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>disabled</td>\\n                            <td>boolean</td>\\n                            <td>false</td>\\n                            <td>When present, it specifies that the component should be disabled.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>tabindex</td>\\n                            <td>number</td>\\n                            <td>null</td>\\n                            <td>Index of the element in tabbing order.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>dir</td>\\n                            <td>string</td>\\n                            <td>null</td>\\n                            <td>Indicates the direction of the element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>showTransitionOptions</td>\\n                            <td>string</td>\\n                            <td>225ms ease-out</td>\\n                            <td>Transition options of the show animation.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>hideTransitionOptions</td>\\n                            <td>string</td>\\n                            <td>195ms ease-in</td>\\n                            <td>Transition options of the hide animation.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Events</h3>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Parameters</th>\\n                            <th>Description</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>onClick</td>\\n                            <td>event: browser event<br></td>\\n                            <td>Callback to invoke when default command button is clicked.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>onDropdownClick</td>\\n                            <td>event: browser event<br></td>\\n                            <td>Callback to invoke when dropdown button is clicked.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n          <h3>Severity</h3>\\n          <p>Different color options are available to define severity levels.</p>\\n\\n          <ul>\\n            <li>.ui-button-secondary</li>\\n            <li>.ui-button-success</li>\\n            <li>.ui-button-info</li>\\n            <li>.ui-button-warning</li>\\n            <li>.ui-button-danger</li>\\n          </ul>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-check\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-warning\\\"&gt;&lt;/p-splitButton&gt;\\n</code>\\n</pre>\\n            <h3>Styling</h3>\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>. SplitButton uses\\n            button and menu components internally, refer to their documentation for the detailed style list.</p>\\n            <div class=\\\"doc-tablewrapper\\\">\\n                <table class=\\\"doc-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Element</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>ui-splitbutton</td>\\n                            <td>Container element.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-splitbutton-button</td>\\n                            <td>Dropdown button.</td>\\n                        </tr>\\n                        <tr>\\n                            <td>ui-menu</td>\\n                            <td>Overlay menu.</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n            <h3>Dependencies</h3>\\n            <p>None.</p>\\n        </p-tabPanel>\\n        <p-tabPanel header=\\\"Source\\\">\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/splitbutton\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\n                <i class=\\\"fa fa-github\\\"></i>\\n                <span>View on GitHub</span>\\n            </a>\\n<pre>\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\n&lt;p-toast [style]=\\\"&#123;marginTop: '80px'&#125;\\\"&gt;&lt;/p-toast&gt;\\n\\n&lt;h3 class=\\\"first\\\"&gt;Basic&lt;/h3&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\"&gt;&lt;/p-splitButton&gt;\\n\\n&lt;h3&gt;Severities&lt;/h3&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-secondary\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('success')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-success\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-info\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('warn')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-warning\\\"&gt;&lt;/p-splitButton&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('error')\\\" [model]=\\\"items\\\" styleClass=\\\"ui-button-danger\\\"&gt;&lt;/p-splitButton&gt;\\n\\n&lt;h3&gt;RTL&lt;/h3&gt;\\n&lt;p-splitButton label=\\\"Save\\\" icon=\\\"pi pi-file\\\" (onClick)=\\\"save('info')\\\" [model]=\\\"items\\\" dir=\\\"rtl\\\"&gt;&lt;/p-splitButton&gt;\\n</code>\\n</pre>\\n<pre>\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\nexport class SplitButtonDemo implements OnInit &#123;\\n\\n    items: MenuItem[];\\n\\n    constructor(private messageService: MessageService) &#123;&#125;\\n\\n    ngOnInit() &#123;\\n        this.items = [\\n            &#123;label: 'Update', icon: 'pi pi-refresh', command: () => &#123;\\n                this.update();\\n            &#125;&#125;,\\n            &#123;label: 'Delete', icon: 'pi pi-times', command: () => &#123;\\n                this.delete();\\n            &#125;&#125;,\\n            &#123;label: 'Angular.io', icon: 'pi pi-info', url: 'http://angular.io'&#125;,\\n            &#123;label: 'Setup', icon: 'pi pi-cog', routerLink: ['/setup']&#125;\\n        ];\\n    &#125;\\n\\n    save(severity: string) &#123;\\n        this.messageService.add(&#123;severity:severity, summary:'Success', detail:'Data Saved'&#125;);\\n    &#125;\\n\\n    update() &#123;\\n        this.messageService.add(&#123;severity:'success', summary:'Success', detail:'Data Updated'&#125;);\\n    &#125;\\n\\n    delete() &#123;\\n        this.messageService.add(&#123;severity:'success', summary:'Success', detail:'Data Deleted'&#125;);\\n    &#125;\\n&#125;\\n</code>\\n</pre>\\n        </p-tabPanel>\\n     </p-tabView >\\n</div>\\n\"","import {NgModule}     from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SplitButtonDemo} from './splitbuttondemo';\nimport {SplitButtonDemoRoutingModule} from './splitbuttondemo-routing.module';\nimport {SplitButtonModule} from '../../../components/splitbutton/splitbutton';\nimport {ToastModule} from '../../../components/toast/toast';\nimport {TabViewModule} from '../../../components/tabview/tabview';\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSplitButtonDemoRoutingModule,\n        SplitButtonModule,\n        ToastModule,\n        TabViewModule,\n        CodeHighlighterModule\n\t],\n\tdeclarations: [\n\t\tSplitButtonDemo\n\t]\n})\nexport class SplitButtonDemoModule {}\n","import {Component,OnInit} from '@angular/core';\nimport {MessageService} from '../../../components/common/messageservice';\nimport {MenuItem} from '../../../components/common/api';\n\n@Component({\n    templateUrl: './splitbuttondemo.html',\n    providers: [MessageService],\n    styles: [`\n        :host ::ng-deep .ui-splitbutton {\n            margin-right: .25em;\n        }\n    `]\n})\nexport class SplitButtonDemo implements OnInit {\n    \n    items: MenuItem[];\n    \n    constructor(private messageService: MessageService) {}\n    \n    ngOnInit() {\n        this.items = [\n            {label: 'Update', icon: 'pi pi-refresh', command: () => {\n                this.update();\n            }},\n            {label: 'Delete', icon: 'pi pi-times', command: () => {\n                this.delete();\n            }},\n            {label: 'Angular.io', icon: 'pi pi-info', url: 'http://angular.io'},\n            {label: 'Setup', icon: 'pi pi-cog', routerLink: ['/setup']}\n        ];\n    }\n\n    save(severity: string) {\n        this.messageService.add({severity: severity, summary:'Success', detail:'Data Saved'});\n    }\n    \n    update() {\n        this.messageService.add({severity:'success', summary:'Success', detail:'Data Updated'});\n    }\n    \n    delete() {\n        this.messageService.add({severity:'success', summary:'Success', detail:'Data Deleted'});\n    }\n}\n"],"sourceRoot":""}